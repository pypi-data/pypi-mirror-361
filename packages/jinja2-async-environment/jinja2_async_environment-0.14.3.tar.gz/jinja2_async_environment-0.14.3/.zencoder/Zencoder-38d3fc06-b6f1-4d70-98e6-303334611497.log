[1m========================================================================= test session starts =========================================================================[0m
platform darwin -- Python 3.13.5, pytest-8.4.0, pluggy-1.6.0 -- /Users/les/Projects/jinja2-async-environment/.venv/bin/python
cachedir: .pytest_cache
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
plugins: xdist-3.7.0, anyio-4.9.0, timeout-2.4.0, cov-6.2.1, mock-3.14.1, benchmark-5.1.0, asyncio-1.0.0
timeout: 300.0s
timeout method: thread
timeout func_only: False
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
[1mcollecting ... [0m[1mcollecting 34 items                                                                                                                                                   [0m[1mcollected 46 items                                                                                                                                                    [0m

tests/test_environment_additional.py::test_async_yield_from_with_generator_function [32mPASSED[0m[32m                                                                      [  2%][0m
tests/test_environment_additional.py::test_async_yield_from_with_async_generator_function [32mPASSED[0m[32m                                                                [  4%][0m
tests/test_environment_additional.py::test_async_yield_from_with_type_error [32mPASSED[0m[32m                                                                              [  6%][0m
tests/test_environment_additional.py::test_get_template_async_with_parent [32mPASSED[0m[32m                                                                                [  8%][0m
tests/test_environment_additional.py::test_select_template_async_with_undefined [32mPASSED[0m[32m                                                                          [ 10%][0m
tests/test_environment_additional.py::test_select_template_async_with_template_object [31mFAILED[0m[31m                                                                    [ 13%][0m
tests/test_environment_additional.py::test_select_template_async_with_parent_and_template_not_found [32mPASSED[0m[31m                                                      [ 15%][0m
tests/test_environment_additional.py::test_get_or_select_template_async_with_undefined [32mPASSED[0m[31m                                                                   [ 17%][0m
tests/test_environment_additional.py::test_get_or_select_template_async_with_template_object [31mFAILED[0m[31m                                                             [ 19%][0m
tests/test_environment_additional.py::test_get_or_select_template_async_with_sequence [32mPASSED[0m[31m                                                                    [ 21%][0m
tests/test_environment_additional.py::test_load_template_async_with_template_object [31mFAILED[0m[31m                                                                      [ 23%][0m
tests/test_environment_additional.py::test_load_template_async_with_string [32mPASSED[0m[31m                                                                               [ 26%][0m
tests/test_environment_additional.py::test_load_template_async_with_sequence [32mPASSED[0m[31m                                                                             [ 28%][0m
tests/test_environment_additional.py::test_load_template_async_with_sequence_all_not_found [32mPASSED[0m[31m                                                               [ 30%][0m
tests/test_environment_additional.py::test_get_template_async_no_loader [32mPASSED[0m[31m                                                                                  [ 32%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_hit [31mFAILED[0m[31m                                                                             [ 34%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_hit_and_async_is_up_to_date [31mFAILED[0m[31m                                                     [ 36%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_hit_and_auto_reload_false [31mFAILED[0m[31m                                                       [ 39%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_hit_and_globals [31mFAILED[0m[31m                                                                 [ 41%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_miss [31mFAILED[0m[31m                                                                            [ 43%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_miss_and_globals [32mPASSED[0m[31m                                                                [ 45%][0m
tests/test_compiler_additional.py::test_async_frame_init [31mFAILED[0m[31m                                                                                                 [ 47%][0m
tests/test_compiler_additional.py::test_async_frame_copy [31mFAILED[0m[31m                                                                                                 [ 50%][0m
tests/test_compiler_additional.py::test_async_code_generator_init [31mFAILED[0m[31m                                                                                        [ 52%][0m
tests/test_compiler_additional.py::test_visit_block [31mFAILED[0m[31m                                                                                                      [ 54%][0m
tests/test_compiler_additional.py::test_visit_extends [31mFAILED[0m[31m                                                                                                    [ 56%][0m
tests/test_compiler_additional.py::test_visit_include [31mFAILED[0m[31m                                                                                                    [ 58%][0m
tests/test_compiler_additional.py::test_func_code_generator [31mFAILED[0m[31m                                                                                              [ 60%][0m
tests/test_compiler_additional.py::test_return_buffer_contents [31mFAILED[0m[31m                                                                                           [ 63%][0m
tests/test_compiler_additional.py::test_visit_asyncfor [31mFAILED[0m[31m                                                                                                   [ 65%][0m
tests/test_compiler_additional.py::test_visit_asynccall [31mFAILED[0m[31m                                                                                                  [ 67%][0m
tests/test_compiler_additional.py::test_visit_asyncfilterblock [31mFAILED[0m[31m                                                                                           [ 69%][0m
tests/test_compiler_additional.py::test_visit_asyncwith [31mFAILED[0m[31m                                                                                                  [ 71%][0m
tests/test_compiler_additional.py::test_visit_asyncblock [31mFAILED[0m[31m                                                                                                 [ 73%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache::test_init [32mPASSED[0m[31m                                                                                      [ 76%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache::test_get_cache_key [31mFAILED[0m[31m                                                                             [ 78%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache::test_get_source_checksum [32mPASSED[0m[31m                                                                       [ 80%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache::test_get_bucket_async [31mFAILED[0m[31m                                                                          [ 82%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache::test_set_bucket_async [31mFAILED[0m[31m                                                                          [ 84%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache::test_load_bytecode_not_implemented [32mPASSED[0m[31m                                                             [ 86%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache::test_dump_bytecode_not_implemented [32mPASSED[0m[31m                                                             [ 89%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache::test_clear_not_implemented [31mFAILED[0m[31m                                                                     [ 91%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache_Subclass::test_get_bucket_async_with_custom_cache [31mFAILED[0m[31m                                               [ 93%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache_Subclass::test_set_bucket_async_with_custom_cache [31mFAILED[0m[31m                                               [ 95%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache_Subclass::test_get_bucket_async_with_existing_bucket [31mFAILED[0m[31m                                            [ 97%][0m
tests/test_bccache_additional.py::TestAsyncBytecodeCache_Subclass::test_clear_with_custom_cache [32mPASSED[0m[31m                                                          [100%][0m[31m[1m
ERROR: Coverage failure: total of 33 is less than fail-under=42
[0m

============================================================================== FAILURES ===============================================================================
[31m[1m___________________________________________________________ test_select_template_async_with_template_object ___________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x102ffe710>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_select_template_async_with_template_object[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test select_template_async with a Template object."""[39;49;00m[90m[39;49;00m
        [90m# Create a Template object[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call select_template_async with the Template object[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env.select_template_async([template])[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x102ffe710>, names = [<MagicMock id='4346232912'>], parent = None, globals = None

    [0m[37m@internalcode[39;49;00m[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mselect_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        names: t.Iterable[[96mstr[39;49;00m | Template],[90m[39;49;00m
        parent: [96mstr[39;49;00m | [94mNone[39;49;00m = [94mNone[39;49;00m,[90m[39;49;00m
        [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m = [94mNone[39;49;00m,[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(names, Undefined):[90m[39;49;00m
            names._fail_with_undefined_error()[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m names:[90m[39;49;00m
            [94mraise[39;49;00m TemplatesNotFound([90m[39;49;00m
                message=[33m"[39;49;00m[33mTried to select from an empty list of templates.[39;49;00m[33m"[39;49;00m[90m[39;49;00m
            )[90m[39;49;00m
        names_list = [][90m[39;49;00m
        [94mfor[39;49;00m name [95min[39;49;00m names:[90m[39;49;00m
            [94mif[39;49;00m [96misinstance[39;49;00m(name, Template):[90m[39;49;00m
                [94mreturn[39;49;00m name[90m[39;49;00m
            [94mif[39;49;00m parent [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                name = [96mself[39;49;00m.join_path([96mstr[39;49;00m(name), parent)[90m[39;49;00m
            [94mwith[39;49;00m suppress(TemplateNotFound, UndefinedError):[90m[39;49;00m
                [94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
            names_list.append([96mstr[39;49;00m(name))[90m[39;49;00m
>       [94mraise[39;49;00m TemplatesNotFound(names_list)[90m[39;49;00m
[1m[31mE       jinja2.exceptions.TemplatesNotFound: none of the templates given were found: <MagicMock id='4346232912'>[0m

[1m[31mjinja2_async_environment/environment.py[0m:139: TemplatesNotFound
[31m[1m_______________________________________________________ test_get_or_select_template_async_with_template_object ________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312c190>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_or_select_template_async_with_template_object[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test get_or_select_template_async with a Template object."""[39;49;00m[90m[39;49;00m
        [90m# Create a Template object[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call get_or_select_template_async with the Template object[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env.get_or_select_template_async(template)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:154: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:161: in get_or_select_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m.select_template_async(template_name_or_list, parent, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312c190>, names = <MagicMock id='4346238288'>, parent = None, globals = None

    [0m[37m@internalcode[39;49;00m[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mselect_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        names: t.Iterable[[96mstr[39;49;00m | Template],[90m[39;49;00m
        parent: [96mstr[39;49;00m | [94mNone[39;49;00m = [94mNone[39;49;00m,[90m[39;49;00m
        [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m = [94mNone[39;49;00m,[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(names, Undefined):[90m[39;49;00m
            names._fail_with_undefined_error()[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m names:[90m[39;49;00m
            [94mraise[39;49;00m TemplatesNotFound([90m[39;49;00m
                message=[33m"[39;49;00m[33mTried to select from an empty list of templates.[39;49;00m[33m"[39;49;00m[90m[39;49;00m
            )[90m[39;49;00m
        names_list = [][90m[39;49;00m
        [94mfor[39;49;00m name [95min[39;49;00m names:[90m[39;49;00m
            [94mif[39;49;00m [96misinstance[39;49;00m(name, Template):[90m[39;49;00m
                [94mreturn[39;49;00m name[90m[39;49;00m
            [94mif[39;49;00m parent [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                name = [96mself[39;49;00m.join_path([96mstr[39;49;00m(name), parent)[90m[39;49;00m
            [94mwith[39;49;00m suppress(TemplateNotFound, UndefinedError):[90m[39;49;00m
                [94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
            names_list.append([96mstr[39;49;00m(name))[90m[39;49;00m
>       [94mraise[39;49;00m TemplatesNotFound(names_list)[90m[39;49;00m
[1m[31mE       jinja2.exceptions.TemplatesNotFound: none of the templates given were found:[0m

[1m[31mjinja2_async_environment/environment.py[0m:139: TemplatesNotFound
[31m[1m____________________________________________________________ test_load_template_async_with_template_object ____________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312c410>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_load_template_async_with_template_object[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _load_template_async with a Template object."""[39;49;00m[90m[39;49;00m
        [90m# Create a Template object[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _load_template_async with the Template object[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._load_template_async(template, [94mNone[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:185: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312c410>, name = <MagicMock id='4346236272'>, globals = None

    [0m[37m@internalcode[39;49;00m[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_load_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        name: [96mstr[39;49;00m | Template | t.Iterable[[96mstr[39;49;00m | Template],[90m[39;49;00m
        [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m,[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(name, Template):[90m[39;49;00m
            [94mreturn[39;49;00m name[90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(name, [96mstr[39;49;00m):[90m[39;49;00m
            [94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
        names_list = [][90m[39;49;00m
        [94mfor[39;49;00m template_name [95min[39;49;00m name:[90m[39;49;00m
            [94mif[39;49;00m [96misinstance[39;49;00m(template_name, Template):[90m[39;49;00m
                [94mreturn[39;49;00m template_name[90m[39;49;00m
            [94mwith[39;49;00m suppress(TemplateNotFound):[90m[39;49;00m
                [94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async([96mstr[39;49;00m(template_name), [96mglobals[39;49;00m)[90m[39;49;00m
            names_list.append([96mstr[39;49;00m(template_name))[90m[39;49;00m
>       [94mraise[39;49;00m TemplatesNotFound(names_list)[90m[39;49;00m
[1m[31mE       jinja2.exceptions.TemplatesNotFound: none of the templates given were found:[0m

[1m[31mjinja2_async_environment/environment.py[0m:180: TemplatesNotFound
[31m[1m_______________________________________________________________ test_get_template_async_with_cache_hit ________________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312cf50>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_hit[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template with is_up_to_date=True[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
        template.is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:273: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312cf50>, name = 'template.html', globals = None

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        cache_key = (ref([96mself[39;49;00m.loader), name)[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mwith[39;49;00m suppress([96mTypeError[39;49;00m):[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                        is_up_to_date = [94mawait[39;49;00m is_up_to_date  [90m# type: ignore[39;49;00m[90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload [95mor[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
>       template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, [96mself[39;49;00m.make_globals([96mglobals[39;49;00m))[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:199: TypeError
[31m[1m___________________________________________________ test_get_template_async_with_cache_hit_and_async_is_up_to_date ____________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312d090>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_hit_and_async_is_up_to_date[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit and async is_up_to_date."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template with async is_up_to_date[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
        template.is_up_to_date = AsyncMock(return_value=[94mTrue[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:297: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312d090>, name = 'template.html', globals = None

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        cache_key = (ref([96mself[39;49;00m.loader), name)[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mwith[39;49;00m suppress([96mTypeError[39;49;00m):[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                        is_up_to_date = [94mawait[39;49;00m is_up_to_date  [90m# type: ignore[39;49;00m[90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload [95mor[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
>       template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, [96mself[39;49;00m.make_globals([96mglobals[39;49;00m))[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:199: TypeError
[31m[1m____________________________________________________ test_get_template_async_with_cache_hit_and_auto_reload_false _____________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312d590>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_hit_and_auto_reload_false[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit and auto_reload=False."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:321: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312d590>, name = 'template.html', globals = None

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        cache_key = (ref([96mself[39;49;00m.loader), name)[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mwith[39;49;00m suppress([96mTypeError[39;49;00m):[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                        is_up_to_date = [94mawait[39;49;00m is_up_to_date  [90m# type: ignore[39;49;00m[90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload [95mor[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
>       template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, [96mself[39;49;00m.make_globals([96mglobals[39;49;00m))[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:199: TypeError
[31m[1m_________________________________________________________ test_get_template_async_with_cache_hit_and_globals __________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312d950>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_hit_and_globals[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit and globals."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template with is_up_to_date=True[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
        template.is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
        template.globals = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async with globals[39;49;00m[90m[39;49;00m
        globals_dict = {[33m"[39;49;00m[33mvar1[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mvar2[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue2[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, globals_dict)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:348: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312d950>, name = 'template.html', globals = {'var1': 'value1', 'var2': 'value2'}

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        cache_key = (ref([96mself[39;49;00m.loader), name)[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mwith[39;49;00m suppress([96mTypeError[39;49;00m):[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                        is_up_to_date = [94mawait[39;49;00m is_up_to_date  [90m# type: ignore[39;49;00m[90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload [95mor[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
>       template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, [96mself[39;49;00m.make_globals([96mglobals[39;49;00m))[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:199: TypeError
[31m[1m_______________________________________________________________ test_get_template_async_with_cache_miss _______________________________________________________________[0m

self = <AsyncMock name='mock.load_async' id='4346242992'>, args = (<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', {})
kwargs = {}, expected = call(<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', {})
actual = call(<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', ChainMap({}, {'ra...class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>}))
_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x10311b100>, cause = None

    [0m[94mdef[39;49;00m[90m [39;49;00m[92massert_called_with[39;49;00m([96mself[39;49;00m, /, *args, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""assert that the last call was made with the specified arguments.[39;49;00m
    [33m[39;49;00m
    [33m    Raises an AssertionError if the args and keyword args passed in are[39;49;00m
    [33m    different to the last call to the mock."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.call_args [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            expected = [96mself[39;49;00m._format_mock_call_signature(args, kwargs)[90m[39;49;00m
            actual = [33m'[39;49;00m[33mnot called.[39;49;00m[33m'[39;49;00m[90m[39;49;00m
            error_message = ([33m'[39;49;00m[33mexpected call not found.[39;49;00m[33m\n[39;49;00m[33mExpected: [39;49;00m[33m%s[39;49;00m[33m\n[39;49;00m[33m  Actual: [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                    % (expected, actual))[90m[39;49;00m
            [94mraise[39;49;00m [96mAssertionError[39;49;00m(error_message)[90m[39;49;00m
    [90m[39;49;00m
        [94mdef[39;49;00m[90m [39;49;00m[92m_error_message[39;49;00m():[90m[39;49;00m
            msg = [96mself[39;49;00m._format_mock_failure_message(args, kwargs)[90m[39;49;00m
            [94mreturn[39;49;00m msg[90m[39;49;00m
        expected = [96mself[39;49;00m._call_matcher(_Call((args, kwargs), two=[94mTrue[39;49;00m))[90m[39;49;00m
        actual = [96mself[39;49;00m._call_matcher([96mself[39;49;00m.call_args)[90m[39;49;00m
        [94mif[39;49;00m actual != expected:[90m[39;49;00m
            cause = expected [94mif[39;49;00m [96misinstance[39;49;00m(expected, [96mException[39;49;00m) [94melse[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
>           [94mraise[39;49;00m [96mAssertionError[39;49;00m(_error_message()) [94mfrom[39;49;00m[90m [39;49;00m[04m[96mcause[39;49;00m[90m[39;49;00m
[1m[31mE           AssertionError: expected call not found.[0m
[1m[31mE           Expected: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', {})[0m
[1m[31mE             Actual: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x102d16d40>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>}))[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:979: AssertionError

[33mDuring handling of the above exception, another exception occurred:[0m

self = <AsyncMock name='mock.load_async' id='4346242992'>, args = (<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', {})
kwargs = {}

    [0m[94mdef[39;49;00m[90m [39;49;00m[92massert_called_once_with[39;49;00m([96mself[39;49;00m, /, *args, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""assert that the mock was called exactly once and that that call was[39;49;00m
    [33m    with the specified arguments."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.call_count == [94m1[39;49;00m:[90m[39;49;00m
            msg = ([33m"[39;49;00m[33mExpected [39;49;00m[33m'[39;49;00m[33m%s[39;49;00m[33m'[39;49;00m[33m to be called once. Called [39;49;00m[33m%s[39;49;00m[33m times.[39;49;00m[33m%s[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                   % ([96mself[39;49;00m._mock_name [95mor[39;49;00m [33m'[39;49;00m[33mmock[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
                      [96mself[39;49;00m.call_count,[90m[39;49;00m
                      [96mself[39;49;00m._calls_repr()))[90m[39;49;00m
            [94mraise[39;49;00m [96mAssertionError[39;49;00m(msg)[90m[39;49;00m
>       [94mreturn[39;49;00m [96mself[39;49;00m.assert_called_with(*args, **kwargs)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AssertionError: expected call not found.[0m
[1m[31mE       Expected: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', {})[0m
[1m[31mE         Actual: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x102d16d40>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>}))[0m
[1m[31mE       [0m
[1m[31mE       pytest introspection follows:[0m
[1m[31mE       [0m
[1m[31mE       Args:[0m
[1m[31mE       assert (<jinja2_asyn...Namespace'>})) == (<jinja2_asyn...ate.html', {})[0m
[1m[31mE         [0m
[1m[31mE         At index 2 diff: [0mChainMap({}, {[33m'[39;49;00m[33mrange[39;49;00m[33m'[39;49;00m: <[94mclass[39;49;00m[90m [39;49;00m[04m[91m'[39;49;00m[04m[92mrange[39;49;00m[33m'[39;49;00m[33m>, [39;49;00m[33m'[39;49;00m[96mdict[39;49;00m[33m'[39;49;00m[33m: <class [39;49;00m[33m'[39;49;00m[96mdict[39;49;00m[33m'[39;49;00m[33m>, [39;49;00m[33m'[39;49;00mlipsum[33m'[39;49;00m[33m: <function generate_lorem_ipsum at 0x102d16d40>, [39;49;00m[33m'[39;49;00mcycler[33m'[39;49;00m[33m: <class [39;49;00m[33m'[39;49;00mjinja2.utils.Cycler[...[0m
[1m[31mE         [0m
[1m[31mE         ...Full output truncated (20 lines hidden), use '-vv' to show[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:991: AssertionError

[33mDuring handling of the above exception, another exception occurred:[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_miss[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache miss."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the loader.load_async method[39;49;00m[90m[39;49;00m
        loader.load_async = AsyncMock(return_value=template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
        result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Verify the result and that load_async was called[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m result [95mis[39;49;00m template[90m[39;49;00m
>       loader.load_async.assert_called_once_with(async_env, [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, {})[90m[39;49;00m
[1m[31mE       AssertionError: expected call not found.[0m
[1m[31mE       Expected: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', {})[0m
[1m[31mE         Actual: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x102fff890>, 'template.html', ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x102d16d40>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>}))[0m
[1m[31mE       [0m
[1m[31mE       pytest introspection follows:[0m
[1m[31mE       [0m
[1m[31mE       Args:[0m
[1m[31mE       assert (<jinja2_asyn...Namespace'>})) == (<jinja2_asyn...ate.html', {})[0m
[1m[31mE         [0m
[1m[31mE         At index 2 diff: [0mChainMap({}, {[33m'[39;49;00m[33mrange[39;49;00m[33m'[39;49;00m: <[94mclass[39;49;00m[90m [39;49;00m[04m[91m'[39;49;00m[04m[92mrange[39;49;00m[33m'[39;49;00m[33m>, [39;49;00m[33m'[39;49;00m[96mdict[39;49;00m[33m'[39;49;00m[33m: <class [39;49;00m[33m'[39;49;00m[96mdict[39;49;00m[33m'[39;49;00m[33m>, [39;49;00m[33m'[39;49;00mlipsum[33m'[39;49;00m[33m: <function generate_lorem_ipsum at 0x102d16d40>, [39;49;00m[33m'[39;49;00mcycler[33m'[39;49;00m[33m: <class [39;49;00m[33m'[39;49;00mjinja2.utils.Cycler[...[0m
[1m[31mE         [0m
[1m[31mE         ...Full output truncated (20 lines hidden), use '-vv' to show[0m

[1m[31mtests/test_environment_additional.py[0m:374: AssertionError
[31m[1m________________________________________________________________________ test_async_frame_init ________________________________________________________________________[0m

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_async_frame_init[39;49;00m() -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test initialization of AsyncFrame."""[39;49;00m[90m[39;49;00m
>       frame = AsyncFrame()[90m[39;49;00m
                ^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: Frame.__init__() missing 1 required positional argument: 'eval_ctx'[0m

[1m[31mtests/test_compiler_additional.py[0m:27: TypeError
[31m[1m________________________________________________________________________ test_async_frame_copy ________________________________________________________________________[0m

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_async_frame_copy[39;49;00m() -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the copy method of AsyncFrame."""[39;49;00m[90m[39;49;00m
>       frame = AsyncFrame()[90m[39;49;00m
                ^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: Frame.__init__() missing 1 required positional argument: 'eval_ctx'[0m

[1m[31mtests/test_compiler_additional.py[0m:45: TypeError
[31m[1m___________________________________________________________________ test_async_code_generator_init ____________________________________________________________________[0m

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_async_code_generator_init[39;49;00m() -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test initialization of AsyncCodeGenerator."""[39;49;00m[90m[39;49;00m
        env = MagicMock()[90m[39;49;00m
        env.is_async = [94mTrue[39;49;00m[90m[39;49;00m
        generator = AsyncCodeGenerator(env, [33m"[39;49;00m[33mtest_template[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtest.py[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [94massert[39;49;00m generator.environment [95mis[39;49;00m env[90m[39;49;00m
        [94massert[39;49;00m generator.name == [33m"[39;49;00m[33mtest_template[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m generator.filename == [33m"[39;49;00m[33mtest.py[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m generator.stream [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
>       [94massert[39;49;00m generator.extends_so_far [95mis[39;49;00m [94mFalse[39;49;00m[90m[39;49;00m
[1m[31mE       assert 0 is False[0m
[1m[31mE        +  where 0 = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1030e5fd0>.extends_so_far[0m

[1m[31mtests/test_compiler_additional.py[0m:87: AssertionError
[31m[1m__________________________________________________________________________ test_visit_block ___________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10312cb90>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_block[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Block method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Block node[39;49;00m[90m[39;49;00m
        block_node = MagicMock(spec=nodes.Block)[90m[39;49;00m
        block_node.name = [33m"[39;49;00m[33mtest_block[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        block_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.buffer = [][90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Block[39;49;00m[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Block[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Block(block_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:210: in visit_Block
    [0m[94mif[39;49;00m frame.toplevel:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4346236608'>, name = 'toplevel'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'toplevel'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m_________________________________________________________________________ test_visit_extends __________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10312cf50>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_extends[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Extends method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Extends node[39;49;00m[90m[39;49;00m
        extends_node = MagicMock(spec=nodes.Extends)[90m[39;49;00m
        extends_node.template = MagicMock(spec=nodes.Const)[90m[39;49;00m
        extends_node.template.value = [33m"[39;49;00m[33mbase.html[39;49;00m[33m"[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.require_output_check = [94mFalse[39;49;00m[90m[39;49;00m
        frame.toplevel = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Extends[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Extends[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Extends(extends_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10312cf50>, node = <MagicMock spec='Extends' id='4346245680'>
frame = <MagicMock spec='AsyncFrame' id='4346246352'>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mvisit_Extends[39;49;00m([96mself[39;49;00m, node: nodes.Extends, frame: Frame) -> [94mNone[39;49;00m:[90m[39;49;00m
        frame = t.cast(AsyncFrame, frame)[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m frame.require_output_check:[90m[39;49;00m
>           [94mraise[39;49;00m CompilerExit()[90m[39;49;00m
[1m[31mE           jinja2.compiler.CompilerExit[0m

[1m[31mjinja2_async_environment/compiler.py[0m:252: CompilerExit
[31m[1m_________________________________________________________________________ test_visit_include __________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1030e9940>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_include[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Include method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Include node[39;49;00m[90m[39;49;00m
        include_node = MagicMock(spec=nodes.Include)[90m[39;49;00m
        include_node.template = MagicMock(spec=nodes.Const)[90m[39;49;00m
        include_node.template.value = [33m"[39;49;00m[33mincluded.html[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        include_node.ignore_missing = [94mFalse[39;49;00m[90m[39;49;00m
        include_node.with_context = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Include[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Include[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Include(include_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:165: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:280: in visit_Include
    [0m[96mself[39;49;00m.writeline([33m"[39;49;00m[33mtemplate = await environment.get_template_async([39;49;00m[33m"[39;49;00m, node)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:471: in writeline
    [0m[96mself[39;49;00m.newline(node, extra)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:477: in newline
    [0m[94mif[39;49;00m node [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mand[39;49;00m node.lineno != [96mself[39;49;00m._last_line:[90m[39;49;00m
                            ^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='Include' id='4346233248'>, name = 'lineno'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'lineno'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m______________________________________________________________________ test_func_code_generator _______________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1030e8770>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_func_code_generator[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the function code generator methods."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Test the function code generator methods[39;49;00m[90m[39;49;00m
>       [94massert[39;49;00m async_code_generator.func_code_generator(frame) == [33m"[39;49;00m[33masync def[39;49;00m[33m"[39;49;00m[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AttributeError: 'AsyncCodeGenerator' object has no attribute 'func_code_generator'[0m

[1m[31mtests/test_compiler_additional.py[0m:179: AttributeError
[31m[1m_____________________________________________________________________ test_return_buffer_contents _____________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1030ebce0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_return_buffer_contents[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the return_buffer_contents method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.buffer = [[33m"[39;49;00m[33mbuffer_item1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mbuffer_item2[39;49;00m[33m"[39;49;00m][90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Test the return_buffer_contents method[39;49;00m[90m[39;49;00m
>       async_code_generator.return_buffer_contents(frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:399: in return_buffer_contents
    [0m[94mif[39;49;00m frame.eval_ctx.volatile:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4346238960'>, name = 'eval_ctx'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'eval_ctx'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m_________________________________________________________________________ test_visit_asyncfor _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1030eb360>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncfor[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_AsyncFor method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock AsyncFor node[39;49;00m[90m[39;49;00m
        asyncfor_node = MagicMock(spec=nodes.For)  [90m# Using For as a base since AsyncFor doesn't exist[39;49;00m[90m[39;49;00m
        asyncfor_node.target = MagicMock(spec=nodes.Name)[90m[39;49;00m
        asyncfor_node.target.name = [33m"[39;49;00m[33mitem[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        asyncfor_node.iter = MagicMock(spec=nodes.Name)[90m[39;49;00m
        asyncfor_node.iter.name = [33m"[39;49;00m[33mitems[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        asyncfor_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
        asyncfor_node.else_ = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_AsyncFor[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.pull_locals = MagicMock(return_value=[96mset[39;49;00m())[90m[39;49;00m
        async_code_generator.push_frame = MagicMock(return_value=frame)[90m[39;49;00m
        async_code_generator.pop_frame = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Patch the visit method to handle the target and iter[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m patch.object(async_code_generator, [33m'[39;49;00m[33mvisit[39;49;00m[33m'[39;49;00m) [94mas[39;49;00m mock_visit:[90m[39;49;00m
            [90m# Call visit_AsyncFor[39;49;00m[90m[39;49;00m
>           async_code_generator.visit_For(asyncfor_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:133: in visit_For
    [0m[94mif[39;49;00m node.recursive:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='For' id='4346240976'>, name = 'recursive'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'recursive'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m________________________________________________________________________ test_visit_asynccall _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10317c180>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asynccall[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Call method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Call node[39;49;00m[90m[39;49;00m
        call_node = MagicMock(spec=nodes.Call)[90m[39;49;00m
        call_node.node = MagicMock(spec=nodes.Name)[90m[39;49;00m
        call_node.node.name = [33m"[39;49;00m[33masync_function[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        call_node.args = [][90m[39;49;00m
        call_node.kwargs = [][90m[39;49;00m
        call_node.dyn_args = [94mNone[39;49;00m[90m[39;49;00m
        call_node.dyn_kwargs = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Call[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Call[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Call(call_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:253: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:50: in new_func
    [0m[94mif[39;49;00m [96mself[39;49;00m.optimizer [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mand[39;49;00m [95mnot[39;49;00m frame.eval_ctx.volatile:[90m[39;49;00m
                                          ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4347660336'>, name = 'eval_ctx'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'eval_ctx'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m_____________________________________________________________________ test_visit_asyncfilterblock _____________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1030e8fc0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncfilterblock[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_FilterBlock method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock FilterBlock node[39;49;00m[90m[39;49;00m
        filterblock_node = MagicMock(spec=nodes.FilterBlock)[90m[39;49;00m
        filterblock_node.filter = MagicMock(spec=nodes.Filter)[90m[39;49;00m
        filterblock_node.filter.name = [33m"[39;49;00m[33mfilter_name[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        filterblock_node.filter.node = [94mNone[39;49;00m[90m[39;49;00m
        filterblock_node.filter.args = [][90m[39;49;00m
        filterblock_node.filter.kwargs = [][90m[39;49;00m
        filterblock_node.filter.dyn_args = [94mNone[39;49;00m[90m[39;49;00m
        filterblock_node.filter.dyn_kwargs = [94mNone[39;49;00m[90m[39;49;00m
        filterblock_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
        frame.buffer = [][90m[39;49;00m
        frame.eval_ctx = MagicMock()[90m[39;49;00m
        frame.eval_ctx.autoescape = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_FilterBlock[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_FilterBlock[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_FilterBlock(filterblock_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:286: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:1365: in visit_FilterBlock
    [0m[96mself[39;49;00m.start_write(frame, node)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:427: in start_write
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mframe.buffer[33m}[39;49;00m[33m.append([39;49;00m[33m"[39;49;00m, node)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:471: in writeline
    [0m[96mself[39;49;00m.newline(node, extra)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:477: in newline
    [0m[94mif[39;49;00m node [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mand[39;49;00m node.lineno != [96mself[39;49;00m._last_line:[90m[39;49;00m
                            ^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='FilterBlock' id='4346241312'>, name = 'lineno'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'lineno'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m________________________________________________________________________ test_visit_asyncwith _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1030ebce0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncwith[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_With method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock With node[39;49;00m[90m[39;49;00m
        with_node = MagicMock(spec=nodes.With)[90m[39;49;00m
        with_node.targets = [(MagicMock(spec=nodes.Name), MagicMock(spec=nodes.Name))][90m[39;49;00m
        with_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_With[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_With[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_With(with_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:310: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:1374: in visit_With
    [0m[94mfor[39;49;00m target, expr [95min[39;49;00m [96mzip[39;49;00m(node.targets, node.values):[90m[39;49;00m
                                          ^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='With' id='4346232912'>, name = 'values'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'values'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m________________________________________________________________________ test_visit_asyncblock ________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1030ea8b0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncblock[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Block method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Block node[39;49;00m[90m[39;49;00m
        block_node = MagicMock(spec=nodes.Block)[90m[39;49;00m
        block_node.name = [33m"[39;49;00m[33masync_block[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        block_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
        block_node.scoped = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
        frame.buffer = [][90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Block[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Block[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Block(block_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:336: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:210: in visit_Block
    [0m[94mif[39;49;00m frame.toplevel:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4347667392'>, name = 'toplevel'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'toplevel'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m______________________________________________________________ TestAsyncBytecodeCache.test_get_cache_key ______________________________________________________________[0m

self = <tests.test_bccache_additional.TestAsyncBytecodeCache object at 0x102ffdbd0>
async_bccache = <jinja2_async_environment.bccache.AsyncBytecodeCache object at 0x10312e0d0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_get_cache_key[39;49;00m([96mself[39;49;00m, async_bccache: AsyncBytecodeCache) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the get_cache_key method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock environment[39;49;00m[90m[39;49;00m
        env = MagicMock()[90m[39;49;00m
        env.loader = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call get_cache_key[39;49;00m[90m[39;49;00m
>       key = async_bccache.get_cache_key([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mfilename.py[39;49;00m[33m"[39;49;00m, env)[90m[39;49;00m
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: BytecodeCache.get_cache_key() takes from 2 to 3 positional arguments but 4 were given[0m

[1m[31mtests/test_bccache_additional.py[0m:33: TypeError
[31m[1m____________________________________________________________ TestAsyncBytecodeCache.test_get_bucket_async _____________________________________________________________[0m

self = <tests.test_bccache_additional.TestAsyncBytecodeCache object at 0x102f9f360>
async_bccache = <jinja2_async_environment.bccache.AsyncBytecodeCache object at 0x10317c050>
async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312dbd0>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_bucket_async[39;49;00m([96mself[39;49;00m, async_bccache: AsyncBytecodeCache, async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the get_bucket_async method."""[39;49;00m[90m[39;49;00m
        [90m# Mock the get_cache_key and get_source_checksum methods[39;49;00m[90m[39;49;00m
        async_bccache.get_cache_key = MagicMock(return_value=[33m"[39;49;00m[33mcache_key[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_bccache.get_source_checksum = MagicMock(return_value=[33m"[39;49;00m[33mchecksum[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the load_bytecode method[39;49;00m[90m[39;49;00m
        async_bccache.load_bytecode = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call get_bucket_async[39;49;00m[90m[39;49;00m
>       bucket = [94mawait[39;49;00m async_bccache.get_bucket_async(async_env, [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mfilename.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33msource[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_bccache_additional.py[0m:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.bccache.AsyncBytecodeCache object at 0x10317c050>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312dbd0>, name = 'template.html', filename = 'filename.py', source = 'source'

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mget_bucket_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: Environment, name: [96mstr[39;49;00m, filename: [96mstr[39;49;00m | [94mNone[39;49;00m, source: [96mstr[39;49;00m[90m[39;49;00m
    ) -> Bucket:[90m[39;49;00m
>       [94mraise[39;49;00m [96mNotImplementedError[39;49;00m([90m[39;49;00m
            [33m"[39;49;00m[33mAsyncBytecodeCache.get_bucket_async must be implemented.[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        )[90m[39;49;00m
[1m[31mE       NotImplementedError: AsyncBytecodeCache.get_bucket_async must be implemented.[0m

[1m[31mjinja2_async_environment/bccache.py[0m:26: NotImplementedError
[31m[1m____________________________________________________________ TestAsyncBytecodeCache.test_set_bucket_async _____________________________________________________________[0m

self = <tests.test_bccache_additional.TestAsyncBytecodeCache object at 0x10309f410>
async_bccache = <jinja2_async_environment.bccache.AsyncBytecodeCache object at 0x1030e9940>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_set_bucket_async[39;49;00m([96mself[39;49;00m, async_bccache: AsyncBytecodeCache) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the set_bucket_async method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock bucket[39;49;00m[90m[39;49;00m
        bucket = MagicMock(spec=Bucket)[90m[39;49;00m
        bucket.code = [33m"[39;49;00m[33mcompiled_code[39;49;00m[33m"[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the dump_bytecode method[39;49;00m[90m[39;49;00m
        async_bccache.dump_bytecode = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call set_bucket_async[39;49;00m[90m[39;49;00m
>       [94mawait[39;49;00m async_bccache.set_bucket_async(bucket)[90m[39;49;00m

[1m[31mtests/test_bccache_additional.py[0m:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.bccache.AsyncBytecodeCache object at 0x1030e9940>, bucket = <MagicMock spec='Bucket' id='4346236608'>

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mset_bucket_async[39;49;00m([96mself[39;49;00m, bucket: Bucket) -> [94mNone[39;49;00m:[90m[39;49;00m
>       [94mraise[39;49;00m [96mNotImplementedError[39;49;00m([90m[39;49;00m
            [33m"[39;49;00m[33mAsyncBytecodeCache.set_bucket_async must be implemented.[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        )[90m[39;49;00m
[1m[31mE       NotImplementedError: AsyncBytecodeCache.set_bucket_async must be implemented.[0m

[1m[31mjinja2_async_environment/bccache.py[0m:31: NotImplementedError
[31m[1m__________________________________________________________ TestAsyncBytecodeCache.test_clear_not_implemented __________________________________________________________[0m

self = <tests.test_bccache_additional.TestAsyncBytecodeCache object at 0x102ffb150>
async_bccache = <jinja2_async_environment.bccache.AsyncBytecodeCache object at 0x1030c9260>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_clear_not_implemented[39;49;00m([96mself[39;49;00m, async_bccache: AsyncBytecodeCache) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test that clear raises NotImplementedError."""[39;49;00m[90m[39;49;00m
        [90m# Call clear and verify it raises NotImplementedError[39;49;00m[90m[39;49;00m
>       [94mwith[39;49;00m pytest.raises([96mNotImplementedError[39;49;00m):[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       Failed: DID NOT RAISE <class 'NotImplementedError'>[0m

[1m[31mtests/test_bccache_additional.py[0m:105: Failed
[31m[1m_______________________________________________ TestAsyncBytecodeCache_Subclass.test_get_bucket_async_with_custom_cache _______________________________________________[0m

self = <tests.test_bccache_additional.TestAsyncBytecodeCache_Subclass object at 0x102ffdd10>
custom_bccache = <tests.test_bccache_additional.TestAsyncBytecodeCache_Subclass.CustomAsyncBytecodeCache object at 0x1030e4050>
async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312df90>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_bucket_async_with_custom_cache[39;49;00m([96mself[39;49;00m, custom_bccache: CustomAsyncBytecodeCache, async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the get_bucket_async method with a custom cache implementation."""[39;49;00m[90m[39;49;00m
        [90m# Call get_bucket_async[39;49;00m[90m[39;49;00m
>       bucket = [94mawait[39;49;00m custom_bccache.get_bucket_async(async_env, [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mfilename.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33msource[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_bccache_additional.py[0m:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tests.test_bccache_additional.TestAsyncBytecodeCache_Subclass.CustomAsyncBytecodeCache object at 0x1030e4050>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312df90>, name = 'template.html', filename = 'filename.py', source = 'source'

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mget_bucket_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: Environment, name: [96mstr[39;49;00m, filename: [96mstr[39;49;00m | [94mNone[39;49;00m, source: [96mstr[39;49;00m[90m[39;49;00m
    ) -> Bucket:[90m[39;49;00m
>       [94mraise[39;49;00m [96mNotImplementedError[39;49;00m([90m[39;49;00m
            [33m"[39;49;00m[33mAsyncBytecodeCache.get_bucket_async must be implemented.[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        )[90m[39;49;00m
[1m[31mE       NotImplementedError: AsyncBytecodeCache.get_bucket_async must be implemented.[0m

[1m[31mjinja2_async_environment/bccache.py[0m:26: NotImplementedError
[31m[1m_______________________________________________ TestAsyncBytecodeCache_Subclass.test_set_bucket_async_with_custom_cache _______________________________________________[0m

self = <tests.test_bccache_additional.TestAsyncBytecodeCache_Subclass object at 0x102ffde50>
custom_bccache = <tests.test_bccache_additional.TestAsyncBytecodeCache_Subclass.CustomAsyncBytecodeCache object at 0x102ffe710>
async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312d450>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_set_bucket_async_with_custom_cache[39;49;00m([96mself[39;49;00m, custom_bccache: CustomAsyncBytecodeCache, async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the set_bucket_async method with a custom cache implementation."""[39;49;00m[90m[39;49;00m
        [90m# Get a bucket[39;49;00m[90m[39;49;00m
>       bucket = [94mawait[39;49;00m custom_bccache.get_bucket_async(async_env, [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mfilename.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33msource[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_bccache_additional.py[0m:155: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tests.test_bccache_additional.TestAsyncBytecodeCache_Subclass.CustomAsyncBytecodeCache object at 0x102ffe710>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312d450>, name = 'template.html', filename = 'filename.py', source = 'source'

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mget_bucket_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: Environment, name: [96mstr[39;49;00m, filename: [96mstr[39;49;00m | [94mNone[39;49;00m, source: [96mstr[39;49;00m[90m[39;49;00m
    ) -> Bucket:[90m[39;49;00m
>       [94mraise[39;49;00m [96mNotImplementedError[39;49;00m([90m[39;49;00m
            [33m"[39;49;00m[33mAsyncBytecodeCache.get_bucket_async must be implemented.[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        )[90m[39;49;00m
[1m[31mE       NotImplementedError: AsyncBytecodeCache.get_bucket_async must be implemented.[0m

[1m[31mjinja2_async_environment/bccache.py[0m:26: NotImplementedError
[31m[1m_____________________________________________ TestAsyncBytecodeCache_Subclass.test_get_bucket_async_with_existing_bucket ______________________________________________[0m

self = <tests.test_bccache_additional.TestAsyncBytecodeCache_Subclass object at 0x102f9f490>
custom_bccache = <tests.test_bccache_additional.TestAsyncBytecodeCache_Subclass.CustomAsyncBytecodeCache object at 0x10312de50>
async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312e490>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_bucket_async_with_existing_bucket[39;49;00m([96mself[39;49;00m, custom_bccache: CustomAsyncBytecodeCache, async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the get_bucket_async method with an existing bucket in the cache."""[39;49;00m[90m[39;49;00m
        [90m# Get a bucket and set it with some code[39;49;00m[90m[39;49;00m
>       bucket1 = [94mawait[39;49;00m custom_bccache.get_bucket_async(async_env, [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mfilename.py[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33msource[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_bccache_additional.py[0m:171: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tests.test_bccache_additional.TestAsyncBytecodeCache_Subclass.CustomAsyncBytecodeCache object at 0x10312de50>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10312e490>, name = 'template.html', filename = 'filename.py', source = 'source'

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mget_bucket_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: Environment, name: [96mstr[39;49;00m, filename: [96mstr[39;49;00m | [94mNone[39;49;00m, source: [96mstr[39;49;00m[90m[39;49;00m
    ) -> Bucket:[90m[39;49;00m
>       [94mraise[39;49;00m [96mNotImplementedError[39;49;00m([90m[39;49;00m
            [33m"[39;49;00m[33mAsyncBytecodeCache.get_bucket_async must be implemented.[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        )[90m[39;49;00m
[1m[31mE       NotImplementedError: AsyncBytecodeCache.get_bucket_async must be implemented.[0m

[1m[31mjinja2_async_environment/bccache.py[0m:26: NotImplementedError
=========================================================================== tests coverage ============================================================================
__________________________________________________________ coverage: platform darwin, python 3.13.5-final-0 ___________________________________________________________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          45     20    56%
jinja2_async_environment/compiler.py        237    176    26%
jinja2_async_environment/environment.py     115     33    71%
jinja2_async_environment/loaders.py         320    252    21%
-------------------------------------------------------------
TOTAL                                       717    481    33%
[31m[1mFAIL Required test coverage of 42% not reached. Total coverage: 32.91%
[0m[36m[1m======================================================================= short test summary info =======================================================================[0m
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_select_template_async_with_template_object[0m - jinja2.exceptions.TemplatesNotFound: none of the templates given were found: <MagicMock id='4346232912'>
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_or_select_template_async_with_template_object[0m - jinja2.exceptions.TemplatesNotFound: none of the templates given were found:
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_load_template_async_with_template_object[0m - jinja2.exceptions.TemplatesNotFound: none of the templates given were found:
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_hit[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_hit_and_async_is_up_to_date[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_hit_and_auto_reload_false[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_hit_and_globals[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_miss[0m - AssertionError: expected call not found.
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_async_frame_init[0m - TypeError: Frame.__init__() missing 1 required positional argument: 'eval_ctx'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_async_frame_copy[0m - TypeError: Frame.__init__() missing 1 required positional argument: 'eval_ctx'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_async_code_generator_init[0m - assert 0 is False
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_block[0m - AttributeError: Mock object has no attribute 'toplevel'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_extends[0m - jinja2.compiler.CompilerExit
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_include[0m - AttributeError: Mock object has no attribute 'lineno'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_func_code_generator[0m - AttributeError: 'AsyncCodeGenerator' object has no attribute 'func_code_generator'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_return_buffer_contents[0m - AttributeError: Mock object has no attribute 'eval_ctx'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncfor[0m - AttributeError: Mock object has no attribute 'recursive'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asynccall[0m - AttributeError: Mock object has no attribute 'eval_ctx'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncfilterblock[0m - AttributeError: Mock object has no attribute 'lineno'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncwith[0m - AttributeError: Mock object has no attribute 'values'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncblock[0m - AttributeError: Mock object has no attribute 'toplevel'
[31mFAILED[0m tests/test_bccache_additional.py::[1mTestAsyncBytecodeCache::test_get_cache_key[0m - TypeError: BytecodeCache.get_cache_key() takes from 2 to 3 positional arguments but 4 were given
[31mFAILED[0m tests/test_bccache_additional.py::[1mTestAsyncBytecodeCache::test_get_bucket_async[0m - NotImplementedError: AsyncBytecodeCache.get_bucket_async must be implemented.
[31mFAILED[0m tests/test_bccache_additional.py::[1mTestAsyncBytecodeCache::test_set_bucket_async[0m - NotImplementedError: AsyncBytecodeCache.set_bucket_async must be implemented.
[31mFAILED[0m tests/test_bccache_additional.py::[1mTestAsyncBytecodeCache::test_clear_not_implemented[0m - Failed: DID NOT RAISE <class 'NotImplementedError'>
[31mFAILED[0m tests/test_bccache_additional.py::[1mTestAsyncBytecodeCache_Subclass::test_get_bucket_async_with_custom_cache[0m - NotImplementedError: AsyncBytecodeCache.get_bucket_async must be implemented.
[31mFAILED[0m tests/test_bccache_additional.py::[1mTestAsyncBytecodeCache_Subclass::test_set_bucket_async_with_custom_cache[0m - NotImplementedError: AsyncBytecodeCache.get_bucket_async must be implemented.
[31mFAILED[0m tests/test_bccache_additional.py::[1mTestAsyncBytecodeCache_Subclass::test_get_bucket_async_with_existing_bucket[0m - NotImplementedError: AsyncBytecodeCache.get_bucket_async must be implemented.
[31m==================================================================== [31m[1m28 failed[0m, [32m18 passed[0m[31m in 3.79s[0m[31m ====================================================================[0m
