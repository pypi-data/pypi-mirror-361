// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package tf_quant_finance.experimental.pricing_platform.instrument_protos;

option java_multiple_files = true;

// Business day convention proto. Determines how non-business days are treated
// if the payment is due on a non-business
enum BusinessDayConvention {
  // Unknown business day convention.
  BUSINESS_DAY_CONVENTION_UNKNOWN = 0;
  // Business Holidays are ignored. Cash flows are assumed to be distributed on
  // the actual date
  NO_ADJUSTMENT = 1;
  // Move cash flows from a non-business day to the previous business day
  PREVIOUS = 2;
  // Move cash flows from a non-business day to the following business day
  FOLLOWING = 3;
  // Move cash flows from a non-business day to the previous business day
  // However, if the previous day is in the different month, the following
  // business day is used
  MODIFIED_PREVIOUS = 4;
  // Move cash flows from a non-business day to the following business day
  // However, if the following day is in the different month, the previous
  // business day is used
  MODIFIED_FOLLOWING = 5;
  // All cash flow is moved to the final day of the month regardless whether it
  // is a business day
  EOM_NO_ADJUSTMENT = 6;
  // All cash flow is moved to the last business day of the month
  EOM_PREVIOUS = 7;
  // All cash flow is moved to the final day of the month. If the last day is a
  // non-business day, move to the next business day
  EOM_FOLLOWING = 8;
}

// Bank holidays captures the calendar used to generate public holidays.
// (== suppress_warning documentation-presence ==)
enum BankHolidays {
  // Bank holiday calendar to count business days.
  BANK_HOLIDAYS_UNKNOWN = 0;
  US = 1;
  UK = 2;
}
