export const __webpack_ids__=["59619"];export const __webpack_modules__={42515:function(i,t,s){s.d(t,{v:()=>e});const e=async(i,t)=>{if(navigator.clipboard)try{return void await navigator.clipboard.writeText(i)}catch{}const s=t??document.body,e=document.createElement("textarea");e.value=i,s.appendChild(e),e.select(),document.execCommand("copy"),s.removeChild(e)}},23027:function(i,t,s){s.a(i,async function(i,e){try{s.r(t);s(81738),s(6989);var a=s(73742),o=(s(98334),s(59048)),n=s(26292),c=s(39884),l=s(42515),d=s(83378),r=(s(64881),s(69760),s(6514)),h=s(65505),p=s(95814),g=s(35982),_=i([r]);r=(_.then?(await _)():_)[0];const u="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z",m="M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z",v="M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z";class y extends o.oi{async showDialog(i){this.device_id=i.device_id}async _copyIpToClipboard(i){const t=i.currentTarget.ip;await(0,l.v)(t),(0,g.C)(this,{message:this.hass.localize("ui.common.copied_clipboard")})}render(){return this.device_id?o.dy` <ha-dialog open @closed="${this.closeDialog}" .heading="${(0,d.i)(this.hass,this.hass.localize("ui.panel.config.matter.ping_node.title"))}"> ${"failed"===this._status?o.dy` <div class="flex-container"> <ha-svg-icon .path="${v}" class="failed"></ha-svg-icon> <div class="status"> <p> ${this.hass.localize(this._pingResultEntries?"ui.panel.config.matter.ping_node.no_ip_found":"ui.panel.config.matter.ping_node.ping_failed")} </p> </div> </div> <mwc-button slot="primaryAction" @click="${this.closeDialog}"> ${this.hass.localize("ui.common.close")} </mwc-button> `:this._pingResultEntries?o.dy` <h2> ${this.hass.localize("ui.panel.config.matter.ping_node.ping_complete")} </h2> <ha-list> ${this._pingResultEntries.map(([i,t])=>o.dy`<ha-list-item hasMeta .ip="${i}" @click="${this._copyIpToClipboard}">${i} <ha-svg-icon slot="meta" .path="${t?m:u}" class="${t?"success":"failed"}"></ha-svg-icon> </ha-list-item>`)} </ha-list> <mwc-button slot="primaryAction" @click="${this.closeDialog}"> ${this.hass.localize("ui.common.close")} </mwc-button> `:"started"===this._status?o.dy` <div class="flex-container"> <ha-spinner></ha-spinner> <div class="status"> <p> <b> ${this.hass.localize("ui.panel.config.matter.ping_node.in_progress")} </b> </p> </div> </div> <mwc-button slot="primaryAction" @click="${this.closeDialog}"> ${this.hass.localize("ui.common.close")} </mwc-button> `:o.dy` <p> ${this.hass.localize("ui.panel.config.matter.ping_node.introduction")} </p> <p> <em> ${this.hass.localize("ui.panel.config.matter.ping_node.battery_device_warning")} </em> </p> <mwc-button slot="primaryAction" @click="${this._startPing}"> ${this.hass.localize("ui.panel.config.matter.ping_node.start_ping")} </mwc-button> `} </ha-dialog> `:o.Ld}async _startPing(){if(this.hass){this._status="started";try{const i=await(0,h.xO)(this.hass,this.device_id),t=Object.entries(i);0===t.length&&(this._status="failed"),this._pingResultEntries=t}catch(i){this._status="failed"}}}closeDialog(){this.device_id=void 0,this._status=void 0,this._pingResultEntries=void 0,(0,c.B)(this,"dialog-closed",{dialog:this.localName})}static get styles(){return[p.Qx,p.yu,o.iv`.success{color:var(--success-color)}.failed{color:var(--error-color)}.flex-container{display:flex;align-items:center}.stages{margin-top:16px}.stage{padding:8px}ha-list{--mdc-list-side-padding:0}.flex-container ha-spinner,.flex-container ha-svg-icon{margin-right:20px}.flex-container ha-svg-icon{width:68px;height:48px}`]}}(0,a.__decorate)([(0,n.Cb)({attribute:!1})],y.prototype,"hass",void 0),(0,a.__decorate)([(0,n.SB)()],y.prototype,"device_id",void 0),(0,a.__decorate)([(0,n.SB)()],y.prototype,"_status",void 0),(0,a.__decorate)([(0,n.SB)()],y.prototype,"_pingResultEntries",void 0),y=(0,a.__decorate)([(0,n.Mo)("dialog-matter-ping-node")],y),e()}catch(i){e(i)}})}};
//# sourceMappingURL=59619.3bd9a7ba3729fce3.js.map