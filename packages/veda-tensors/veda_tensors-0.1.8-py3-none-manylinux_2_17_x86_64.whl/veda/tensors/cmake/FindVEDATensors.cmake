IF(VEDATensors_FIND_VERSION AND VEDATensors_VERSION AND VEDATensors_VERSION VERSION_LESS VEDATensors_FIND_VERSION)
	UNSET(VEDATensors_VERSION CACHE)
	UNSET(VEDATensors_FOUND CACHE)
ENDIF()
IF(NOT VEDATensors_FOUND)
	SET(VEDATensors_FOUND FALSE)
	FIND_PATH(VEDATensors_DIR "include/veda/tensors/api.h" PATHS "${CMAKE_CURRENT_LIST_DIR}/../" "/usr/local/ve/veda-tensors/")
 
	IF(NOT VEDATensors_DIR)
		FIND_PACKAGE(Python3 3.7 REQUIRED)
		SET(Python3_USERLIB "$ENV{HOME}/.local/lib/python${Python3_VERSION_MAJOR}.${Python3_VERSION_MINOR}/site-packages")
		FIND_FILE(VEDATensors_DIR "include/veda/tensors/api.h" PATHS "${Python3_SITELIB}/veda-tensors" "${Python3_USERLIB}/veda-tensors")
	ENDIF()
 
	IF(VEDATensors_DIR)
		FIND_LIBRARY(VEDATensors_LIBRARY "libveda-tensors.so" "libveda-tensors.a" "PATHS" "${VEDATensors_DIR}/lib64")
		FIND_FILE(VEDATensors_DEVICE_LIBRARY "libveda-tensors.vso" "PATHS" "${VEDATensors_DIR}/libve")
		SET(VEDATensors_INCLUDE_DIRS "${VEDATensors_DIR}/include" "CACHE" "STRING" "VEDATensors include dir")

		IF(VEDATensors_LIBRARY AND VEDATensors_DEVICE_LIBRARY AND VEDATensors_INCLUDE_DIRS)
			SET(VEDATensors_FOUND TRUE)
			FILE(READ "${VEDATensors_INCLUDE_DIRS}/veda/tensors/version.h" VEDATensors_VERSION)
			STRING(REGEX MATCH "\"([0-9.]+)\"" VEDATensors_VERSION ${VEDATensors_VERSION})
			SET(VEDATensors_VERSION ${CMAKE_MATCH_1})
			SET(VEDATensors_VERSION ${VEDATensors_VERSION} CACHE STRING "VEDATensors Version")
			MESSAGE(STATUS "Found VEDATensors v${VEDATensors_VERSION}: ${VEDATensors_DIR}")
		ELSE()
			MESSAGE(STATUS "Unable to find all requirements of VEDATensors in ${VEDATensors_DIR}")
			MESSAGE(STATUS "VEDATensors_LIBRARY: ${VEDATensors_LIBRARY}")
			MESSAGE(STATUS "VEDATensors_DEVICE_LIBRARY: ${VEDATensors_DEVICE_LIBRARY}")
			MESSAGE(STATUS "VEDATensors_INCLUDE_DIRS: ${VEDATensors_INCLUDE_DIRS}")
		ENDIF()
 
		SET(VEDATensors_FOUND ${VEDATensors_FOUND} CACHE BOOL "Found VEDATensors" FORCE)
		MARK_AS_ADVANCED(VEDATensors_FOUND VEDATensors_VERSION VEDATensors_DIR VEDATensors_LIBRARY VEDATensors_DEVICE_LIBRARY VEDATensors_INCLUDE_DIRS)
	ENDIF()
ENDIF()
 
IF(VEDATensors_FIND_REQUIRED AND NOT VEDATensors_FOUND)
	MESSAGE(FATAL_ERROR "Unable to find VEDATensors!")
ENDIF()
 
IF(VEDATensors_FIND_VERSION AND VEDATensors_VERSION VERSION_LESS VEDATensors_FIND_VERSION)
	MESSAGE(FATAL_ERROR "Found VEDATensors v${VEDATensors_VERSION} but expected at least v${VEDATensors_FIND_VERSION}")
ENDIF()
 
STRING(ASCII 59 VEDATensors_SEMICOLON)
STRING(REPLACE "." "${VEDATensors_SEMICOLON}" VEDATensors_VERSION_LIST ${VEDATensors_VERSION})
SET(VEDATensors_VERSION_MAJOR 0)
SET(VEDATensors_VERSION_MINOR 0)
SET(VEDATensors_VERSION_PATCH 0)
LIST(LENGTH VEDATensors_VERSION_LIST VEDATensors_VERSION_LEN)
IF(VEDATensors_VERSION_LEN GREATER 0)
	LIST(GET VEDATensors_VERSION_LIST 0 VEDATensors_VERSION_MAJOR)
ENDIF()
IF(VEDATensors_VERSION_LEN GREATER 1)
	LIST(GET VEDATensors_VERSION_LIST 1 VEDATensors_VERSION_MINOR)
ENDIF()
IF(VEDATensors_VERSION_LEN GREATER 2)
	LIST(GET VEDATensors_VERSION_LIST 2 VEDATensors_VERSION_PATCH)
ENDIF()
UNSET(VEDATensors_VERSION_LEN)
UNSET(VEDATensors_VERSION_LIST)
UNSET(VEDATensors_SEMICOLON)