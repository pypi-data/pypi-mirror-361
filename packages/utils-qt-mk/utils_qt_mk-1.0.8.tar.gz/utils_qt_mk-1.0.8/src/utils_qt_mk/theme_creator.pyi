from typing import Any
from PySide6.QtGui import QColor
from PySide6.QtWidgets import QDialog, QMainWindow, QWidget


class _ColourSetter(QWidget):
	def __init__(self) -> None: ...
	def _set_colour_label(self) -> None: ...
	def _setup_connections(self) -> None: ...
	def _setup_ui(self) -> None: ...
	def _slot_colour_selector(self) -> None: ...
	def _slot_update_selector(self) -> None: ...
	def _update_colour(self) -> None: ...
	def _update_spinboxes(self) -> None: ...
	def set_enabled(self, new_state: bool) -> None: ...
	@property
	def colour(self) -> QColor: ...
	@colour.setter
	def colour(self, new_colour: QColor) -> None: ...


class _ThemePreview(QWidget):
	def __init__(self) -> None: ...
	def _setup_ui(self) -> None: ...


class ThemeCreator(QDialog):
	def __init__(self) -> None: ...
	def __getattr__(self, name: str) -> Any: ...
	def _setup_connections(self) -> None: ...
	def _setup_ui(self) -> None: ...
	def _slot_delete_theme(self) -> None: ...
	def _slot_export_theme(self) -> None: ...
	def _slot_update_by_combobox(self, index: int) -> None: ...
	def _slot_update_by_custom_colours(self) -> None: ...
	def _slot_use_existing_theme(self) -> None: ...


class _TestApplication(QMainWindow):
	def __init__(self) -> None: ...
	def _setup_connections(self) -> None: ...
	def _setup_ui(self) -> None: ...
	@classmethod
	def _slot_tc_test(cls) -> None: ...
