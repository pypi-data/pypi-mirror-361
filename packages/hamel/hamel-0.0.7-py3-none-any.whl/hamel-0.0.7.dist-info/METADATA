Metadata-Version: 2.1
Name: hamel
Version: 0.0.7
Summary: General Utilities
Home-page: https://github.com/hamelsmu/hamel
Author: Hamel Husain
Author-email: hamel.husain@gmail.com
License: Apache Software License 2.0
Keywords: nbdev jupyter notebook python
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: typer
Requires-Dist: youtube_transcript_api
Requires-Dist: httpx
Requires-Dist: fastcore
Requires-Dist: google-genai
Provides-Extra: dev

# hamel


<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->

This file will become your README and also the index of your
documentation.

## Developer Guide

If you are new to using `nbdev` here are some useful pointers to get you
started.

### Install hamel in Development mode

``` sh
# make sure hamel package is installed in development mode
$ pip install -e .

# make changes under nbs/ directory
# ...

# compile to have changes apply to hamel
$ nbdev_prepare
```

## Usage

### Installation

Install latest from the GitHub
[repository](https://github.com/hamelsmu/hamel):

``` sh
$ pip install git+https://github.com/hamelsmu/hamel.git
```

or from [conda](https://anaconda.org/hamelsmu/hamel)

``` sh
$ conda install -c hamelsmu hamel
```

or from [pypi](https://pypi.org/project/hamel/)

``` sh
$ pip install hamel
```

### Documentation

Documentation can be found hosted on this GitHub
[repository](https://github.com/hamelsmu/hamel)’s
[pages](https://hamelsmu.github.io/hamel/). Additionally you can find
package manager specific guidelines on
[conda](https://anaconda.org/hamelsmu/hamel) and
[pypi](https://pypi.org/project/hamel/) respectively.

## How to use

Fill me in please! Don’t forget code examples:

``` python
1+1
```

    2
