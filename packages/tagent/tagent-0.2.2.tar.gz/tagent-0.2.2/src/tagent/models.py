"""
Pydantic models for TAgent state management and structured outputs.
"""

from typing import Dict, Any
from pydantic import BaseModel, Field


class AgentState(BaseModel):
    """Represents agent state as a typed dictionary."""

    data: Dict[str, Any] = {}


class StructuredResponse(BaseModel):
    """Schema for structured outputs generated by LLMs."""

    action: str = Field(description="Action to be taken, must be one of: 'plan', 'execute', 'summarize', 'evaluate'")  # ex: "plan", "execute", "summarize", "evaluate"
    params: Dict[str, Any] = Field(description="Parameters for the action")
    reasoning: str = Field(description="Reasoning for the action")