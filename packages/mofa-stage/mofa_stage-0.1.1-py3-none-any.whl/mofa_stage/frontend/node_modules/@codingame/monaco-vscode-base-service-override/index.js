
import { __decorate, __param } from '@codingame/monaco-vscode-api/external/tslib/tslib.es6';
import '@codingame/monaco-vscode-api/vscode/vs/editor/standalone/browser/standaloneServices';
import { SyncDescriptor } from '@codingame/monaco-vscode-api/vscode/vs/platform/instantiation/common/descriptors';
import { IRequestService } from '@codingame/monaco-vscode-api/vscode/vs/platform/request/common/request.service';
import { IDecorationsService } from '@codingame/monaco-vscode-api/vscode/vs/workbench/services/decorations/common/decorations.service';
import { IJSONEditingService } from '@codingame/monaco-vscode-api/vscode/vs/workbench/services/configuration/common/jsonEditing.service';
import { ITreeViewsDnDService } from '@codingame/monaco-vscode-api/vscode/vs/editor/common/services/treeViewsDndService.service';
import { TreeViewsDnDService } from '@codingame/monaco-vscode-api/vscode/vs/editor/common/services/treeViewsDnd';
import { IURLService } from '@codingame/monaco-vscode-api/vscode/vs/platform/url/common/url.service';
import { JSONEditingService } from './vscode/src/vs/workbench/services/configuration/common/jsonEditingService.js';
import { DecorationsService } from './vscode/src/vs/workbench/services/decorations/browser/decorationsService.js';
import { BrowserRequestService } from './vscode/src/vs/workbench/services/request/browser/requestService.js';
import { BrowserURLService } from './vscode/src/vs/workbench/services/url/browser/urlService.js';
import { CanonicalUriService } from './vscode/src/vs/workbench/services/workspaces/common/canonicalUriService.js';
import { ICanonicalUriService } from '@codingame/monaco-vscode-api/vscode/vs/platform/workspace/common/canonicalUri.service';
import { IUserActivityService } from '@codingame/monaco-vscode-api/vscode/vs/workbench/services/userActivity/common/userActivityService.service';
import { IDownloadService } from '@codingame/monaco-vscode-api/vscode/vs/platform/download/common/download.service';
import { DownloadService } from './vscode/src/vs/platform/download/common/downloadService.js';
import { IPathService } from '@codingame/monaco-vscode-api/vscode/vs/workbench/services/path/common/pathService.service';
import { IWorkingCopyFileService } from '@codingame/monaco-vscode-api/vscode/vs/workbench/services/workingCopy/common/workingCopyFileService.service';
import { IRemoteAgentService } from '@codingame/monaco-vscode-api/vscode/vs/workbench/services/remote/common/remoteAgentService.service';
import { IWorkbenchEnvironmentService } from '@codingame/monaco-vscode-api/vscode/vs/workbench/services/environment/common/environmentService.service';
import { IWorkspaceContextService } from '@codingame/monaco-vscode-api/vscode/vs/platform/workspace/common/workspace.service';
import { guessLocalUserHome } from './vscode/src/vs/workbench/services/path/browser/pathService.js';
import { AbstractPathService } from './vscode/src/vs/workbench/services/path/common/pathService.js';
import { UserActivityService } from './vscode/src/vs/workbench/services/userActivity/common/userActivityService.js';
import { WorkingCopyFileService } from './vscode/src/vs/workbench/services/workingCopy/common/workingCopyFileService.js';
import { ITrustedDomainService } from '@codingame/monaco-vscode-api/vscode/vs/workbench/contrib/url/browser/trustedDomainService.service';
import { TrustedDomainService } from '@codingame/monaco-vscode-9a1a5840-af83-5d07-a156-ba32a36c5c4b-common/vscode/vs/workbench/contrib/url/browser/trustedDomainService';
import { LabelService } from './vscode/src/vs/workbench/services/label/common/labelService.js';
import { ILabelService } from '@codingame/monaco-vscode-api/vscode/vs/platform/label/common/label.service';
import { IEditorWorkerService } from '@codingame/monaco-vscode-api/vscode/vs/editor/common/services/editorWorker.service';
import { WorkbenchEditorWorkerService } from './vscode/src/vs/workbench/contrib/codeEditor/browser/workbenchEditorWorkerService.js';
import { getEnvironmentOverride } from '@codingame/monaco-vscode-api/workbench';

let BrowserPathServiceOverride = class BrowserPathServiceOverride extends AbstractPathService {
    constructor(remoteAgentService, environmentService, contextService) {
        super(getEnvironmentOverride().userHome ?? guessLocalUserHome(environmentService, contextService), remoteAgentService, environmentService, contextService);
    }
};
BrowserPathServiceOverride = __decorate([
    __param(0, IRemoteAgentService),
    __param(1, IWorkbenchEnvironmentService),
    __param(2, IWorkspaceContextService)
], BrowserPathServiceOverride);
function getServiceOverride() {
    return {
        [IRequestService.toString()]: new SyncDescriptor(BrowserRequestService, [], true),
        [IDownloadService.toString()]: new SyncDescriptor(DownloadService, [], true),
        [IDecorationsService.toString()]: new SyncDescriptor(DecorationsService, [], true),
        [IJSONEditingService.toString()]: new SyncDescriptor(JSONEditingService, [], true),
        [ITreeViewsDnDService.toString()]: new SyncDescriptor(TreeViewsDnDService, [], true),
        [IURLService.toString()]: new SyncDescriptor(BrowserURLService, [], true),
        [ICanonicalUriService.toString()]: new SyncDescriptor(CanonicalUriService, [], false),
        [IUserActivityService.toString()]: new SyncDescriptor(UserActivityService, [], true),
        [IWorkingCopyFileService.toString()]: new SyncDescriptor(WorkingCopyFileService, [], false),
        [IPathService.toString()]: new SyncDescriptor(BrowserPathServiceOverride, [], true),
        [ITrustedDomainService.toString()]: new SyncDescriptor(TrustedDomainService, [], true),
        [ILabelService.toString()]: new SyncDescriptor(LabelService, [], true),
        [IEditorWorkerService.toString()]: new SyncDescriptor(WorkbenchEditorWorkerService, [], true)
    };
}

export { getServiceOverride as default };
