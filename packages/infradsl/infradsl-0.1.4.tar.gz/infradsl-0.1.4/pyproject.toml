[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "infradsl"
dynamic = ["version"]
description = "Rails-like infrastructure management for AWS, Google Cloud, and DigitalOcean"
readme = {file = "README.md", content-type = "text/markdown"}
license = {text = "MIT"}
authors = [
    {name = "InfraDSL Team", email = "hello@infradsl.dev"}
]
maintainers = [
    {name = "InfraDSL Team", email = "hello@infradsl.dev"}
]
keywords = ["infrastructure", "cloud", "aws", "gcp", "digitalocean", "terraform", "pulumi", "iac", "devops", "rails"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Intended Audience :: System Administrators",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
]
requires-python = ">=3.8"
dependencies = [
    # Core dependencies
    "click>=8.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "jinja2>=3.0.0",
    
    # DigitalOcean
    "pydo>=0.11.0",
    "python-digitalocean>=1.17.0",
    
    # Google Cloud
    "google-cloud-compute>=1.14.0",
    "google-cloud-storage>=2.10.0",
    "google-cloud-bigquery>=3.11.0",
    "google-cloud-functions>=1.16.0",
    "google-cloud-run>=0.10.0",
    "google-cloud-container>=2.22.0",
    "google-cloud-artifact-registry>=1.11.0",
    "google-api-python-client>=2.170.0",
    "google-auth>=2.23.0",
    
    # AWS
    "boto3>=1.34.0",
    "botocore>=1.34.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]
all = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.scripts]
infradsl = "infradsl.cli:cli"
infra = "infradsl.cli:cli"

[project.urls]
Homepage = "https://infradsl.dev"
Documentation = "https://infradsl.dev"
Repository = "https://github.com/infradsl/infradsl"
"Bug Reports" = "https://github.com/infradsl/infradsl/issues"
Changelog = "https://github.com/infradsl/infradsl/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = {find = {}}
include-package-data = true

[tool.setuptools.package-data]
infradsl = [
    "templates/**/*",
    "templates/**/**/*", 
    "**/*.yaml",
    "**/*.yml",
    "**/*.json",
]

[tool.setuptools.dynamic]
version = {attr = "infradsl.__version__.__version__"}

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"] 