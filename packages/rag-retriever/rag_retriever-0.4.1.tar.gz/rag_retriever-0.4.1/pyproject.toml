[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-retriever"
version = "0.4.1"
description = "A tool for crawling, indexing, and semantically searching web content with RAG capabilities"
readme = "README.md"
authors = [
    {name = "Tim Kitchens", email = "codingthefuturewithai@gmail.com"}
]
license = {text = "MIT"}
requires-python = ">=3.10,<3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["ai", "rag", "embeddings", "semantic-search", "web-crawler", "vector-store"]
dependencies = [
    "beautifulsoup4==4.12.3",
    "chromadb==0.5.23",
    "duckduckgo-search>=4.1.1",
    "langchain==0.3.18",
    "langchain-community==0.3.17",
    "langchain-core==0.3.34",
    "langchain-chroma==0.1.4",
    "langchain-openai==0.2.14",
    "langchain-google-community>=0.0.11",
    "lxml==5.3.0",
    "openai==1.59.4",
    "playwright>=1.49.0",
    "pypdf==4.1.0",
    "pyyaml==6.0.2",
    "importlib-resources>=6.1.1",
    "unstructured[pdf]>=0.12.0",
    "pillow>=10.2.0",
    "pymupdf>=1.23.8",
    "pytesseract>=0.3.10",
    "atlassian-python-api>=3.41.4",
    "markdownify>=0.11.6",
    "gitpython>=3.1.42",
    "mcp>=1.0.0",
    "mcp[cli]>=1.0.0",
    "anyio>=4.5",
    "starlette>=0.36.0",
    "uvicorn>=0.27.0",
    "streamlit>=1.32.0",
    "pandas>=2.2.0",
    "plotly>=5.19.0",
    "crawl4ai>=0.4.0"
]

[project.optional-dependencies]
dev = [
    "pytest==7.3.0",
    "pytest-cov>=4.1.0"
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:_pytest.assertion.rewrite"
]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=rag_retriever --cov-report=term-missing --cov-report=html"

[tool.setuptools.packages.find]
include = ["rag_retriever*", "scripts*"]
namespaces = true

[tool.setuptools.package-data]
rag_retriever = ["config/*.yaml", "ui/*.py", "static/*"]

[project.scripts]
rag-retriever = "rag_retriever.cli:main"
mcp-rag-retriever = "rag_retriever.mcp:main"
post-install = "scripts.install:install_browsers"

[tool.coverage.run]
source = ["rag_retriever"]
omit = ["*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "raise ImportError"
] 
