{# Renders the imports based on the selected vector store component. #}
{%- for imp in vectorstore_component.get_imports() %}
{{ imp }}
{% endfor %}

{# Renders the configuration class for the vector store. #}
{{ vectorstore_component.get_config_class() }}

class VectorStore:
    def __init__(self, config: VectorStoreConfig = VectorStoreConfig()):
        """
        Initialize the vector store with {{ vectorstore_component.id }} client and create collection if it doesn't exist.
        """
        {% block vectorstore_init_logic %}
        {{ vectorstore_component.get_init_logic() | indent(8) }}
        {% endblock %}

    def initialize_collection(self) -> None:
        """
        Initialize the collection with proper configuration.
        """
        {{ vectorstore_component.get_initialize_collection_logic() | indent(8) }}
    
    # Retrieval methods from {{ retriever_component.id }} component
    {{ retriever_component.get_retrieval_logic() | indent(4) }}

    def add_texts(self, texts: List[str], metadatas: List[dict], ids: List[str]) -> None:
        """Add texts to the vector store."""
        self.vector_store.add_texts(texts=texts, metadatas=metadatas, ids=ids)