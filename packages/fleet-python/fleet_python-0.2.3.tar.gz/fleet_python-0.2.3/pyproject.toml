[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fleet-python"
version = "0.2.3"
description = "Python SDK for Fleet environments"
authors = [
    {name = "Fleet AI", email = "nic@fleet.so"},
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "httpx>=0.27.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
playwright = [
    "playwright>=1.40.0",
]

[project.urls]
Homepage = "https://fleetai.com"
Documentation = "https://docs.fleetai.com"
Repository = "https://github.com/fleet-ai/fleet-sdk"
Issues = "https://github.com/fleet-ai/fleet-sdk/issues"

[tool.setuptools.packages.find]
where = ["."]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"] 