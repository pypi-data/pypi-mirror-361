[tool.poetry]
name = "polycrud"
version = "0.4.4"
description = "DB CRUD operations for Polybase"
authors = ["haonv <vanhao1915@gmail.com>"]
license = "MIT"  # Replace with your actual license
readme = "README.md"  # Ensure this matches your project's README file
packages = [
    { include = "polycrud" }
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
#pymongo = "^4.8.0"
colored = "^2.2.4"
colorama = "^0.4.6"
pydash = "^8.0.4"
#motor = "^3.7.0"
#redis = "^5.2.1"
#aiomysql = "^0.2.0"
#mysql-connector-python = "^9.2.0"
#opensearch-py = "^2.8.0"
aiohttp = "^3.11.16"
orjson = "^3.10.16"
pydantic = "^2.11.5"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
ruff = "^0.2.2"
mypy = "^1.10.0"
ipykernel = "^6.29.4"
types-pyyaml = "^6.0.12.20240311"
no-implicit-optional = "^1.4"
types-beautifulsoup4 = "^4.12.0.20240504"
pylint = "3.2.7"
types-requests = "^2.32.0"
types-pytz = "^2024.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py310"
line-length = 140
output-format = "concise"
show-fixes = true
unsafe-fixes = false
preview = true
exclude = []


[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "B", # flake8-bugbear
    "UP", # pyupgrade,
    "I", # isort,
    "Q", # quote
    "W", # warning
]
extend-ignore = ["UP007"]

ignore = ["B008"]

unfixable = ["B"]

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"


[tool.pylint]
disable = [
    "too-many-instance-attributes",
    "too-few-public-methods",
    "too-many-return-statements",
    "too-many-locals",
    "too-many-arguments",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "import-outside-toplevel",
    "cyclic-import",
    "redefined-builtin",
    "broad-exception-caught",
    "broad-exception-raised",
    "super-init-not-called",
    "duplicate-code",
    "fixme",
    "logging-fstring-interpolation",
    "arguments-differ",
    "line-too-long",
    "too-many-statements",
    "cell-var-from-loop"
]
reports = false
max-branches = 20
output-format = "colorized"
max-line-length = 140
class-const-naming-style = "PascalCase"
ignore-paths = []


[tool.mypy]
no_implicit_optional = false
ignore_missing_imports = true
disallow_untyped_decorators = false
disallow_subclassing_any = false
disallow_untyped_calls = false
check_untyped_defs = true
warn_return_any = true
warn_no_return = false
warn_unreachable = true
strict = true
strict_optional = true
disable_error_code = ["func-returns-value", "call-overload", "override"]
plugins = ["pydantic.mypy"]
exclude = []
