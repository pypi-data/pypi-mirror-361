# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .vapi_voice_vapi_provider_voice_id import VapiVoiceVapiProviderVoiceId


class VapiVoiceVapiProvider(UniversalBaseModel):
    provider: typing.Literal["vapi"] = "vapi"
    voice_id: typing_extensions.Annotated[VapiVoiceVapiProviderVoiceId, FieldMetadata(alias="voiceId")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
