# automatically generated by the FlatBuffers compiler, do not modify

# namespace: API

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AddGranule(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsAddGranule(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AddGranule()
        x.Init(buf, n + offset)
        return x

    # AddGranule
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AddGranule
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from SEAScope.API.RenderableId import RenderableId
            obj = RenderableId()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # AddGranule
    def Metadata(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from SEAScope.API.GranuleMetadata import GranuleMetadata
            obj = GranuleMetadata()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # AddGranule
    def Data(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from SEAScope.API.GranuleData import GranuleData
            obj = GranuleData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def AddGranuleStart(builder): builder.StartObject(3)
def AddGranuleAddId(builder, id): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)
def AddGranuleAddMetadata(builder, metadata): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(metadata), 0)
def AddGranuleAddData(builder, data): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(data), 0)
def AddGranuleEnd(builder): return builder.EndObject()
