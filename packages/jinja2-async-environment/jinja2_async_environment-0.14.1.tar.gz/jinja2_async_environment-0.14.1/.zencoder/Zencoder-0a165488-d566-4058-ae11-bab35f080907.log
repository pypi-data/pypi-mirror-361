cd /Users/les/Projects/jinja2-async-environment && .venv/bin/pytest tests/test_template_rendering.py -v
direnv: loading ~/Projects/jinja2-async-environment/.envrc                      
direnv: export +PDM_ACTIVE ~PATH
(jinja2-async-environment) [jinja2-async-environment] cd /Users/les/Projects/jinja2-async-environment && .venv/bin/pytest tests/test_template_rendering.py -v
============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.3.5, pluggy-1.5.0 -- /Users/les/Projects/jinja2-async-environment/.venv/bin/python
cachedir: .pytest_cache
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
plugins: anyio-4.9.0, timeout-2.4.0, asyncio-0.26.0, mock-3.14.0, cov-6.1.1
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collected 7 items                                                              

tests/test_template_rendering.py::TestTemplateRendering::test_render_simple_template FAILED [ 14%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance FAILED [ 28%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_include PASSED [ 42%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_block FAILED [ 57%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_include FAILED [ 71%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends FAILED [ 85%]
tests/test_template_rendering.py::TestTemplateRendering::test_performance_with_large_template FAILED [100%]

=================================== FAILURES ===================================
______________ TestTemplateRendering.test_render_simple_template _______________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x109393890>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x109494440>

    @pytest.mark.asyncio
    async def test_render_simple_template(self, environment: AsyncEnvironment) -> None:
        template = await environment.get_template_async("simple.html")
        context = template.new_context({"name": "World"})
        rendered = await render_template(template.root_render_func, context)
>       assert rendered == "<h1>Hello, World!</h1>"
E       AssertionError: assert '<h1>Hello, simple.html!</h1>' == '<h1>Hello, World!</h1>'
E         
E         - <h1>Hello, World!</h1>
E         + <h1>Hello, simple.html!</h1>

tests/test_template_rendering.py:68: AssertionError
_________ TestTemplateRendering.test_render_template_with_inheritance __________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x109393c50>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x109499450>

    @pytest.mark.asyncio
    async def test_render_template_with_inheritance(
        self, environment: AsyncEnvironment
    ) -> None:
        template = await environment.get_template_async("child.html")
        context = template.new_context({"message": "This is a test"})
        rendered = await render_template(template.root_render_func, context)
>       assert (
            rendered == "<!DOCTYPE html><html><body><p>This is a test</p></body></html>"
        )
E       AssertionError: assert 'None' == '<!DOCTYPE ht.../body></html>'
E         
E         - <!DOCTYPE html><html><body><p>This is a test</p></body></html>
E         + None

tests/test_template_rendering.py:77: AssertionError
________________ TestTemplateRendering.test_render_async_block _________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1093ab820>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10949a990>

    @pytest.mark.asyncio
    async def test_render_async_block(self, environment: AsyncEnvironment) -> None:
        template = await environment.get_template_async("async_block.html")
    
        async def async_generator() -> AsyncIterator[str]:
            for item in ("Item1", "Item2", "Item3"):
                yield item
    
        context = template.new_context({"items": async_generator()})
        rendered = await render_template(template.root_render_func, context)
>       assert rendered == "Item1Item2Item3"
E       AssertionError: assert '' == 'Item1Item2Item3'
E         
E         - Item1Item2Item3

tests/test_template_rendering.py:100: AssertionError
_______________ TestTemplateRendering.test_render_async_include ________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x10940e330>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10949ac10>

    @pytest.mark.asyncio
    async def test_render_async_include(self, environment: AsyncEnvironment) -> None:
        template = await environment.get_template_async("async_include.html")
    
        async def async_generator() -> AsyncIterator[str]:
            for item in ("Item1", "Item2", "Item3"):
                yield item
    
        context = template.new_context({"async_items": async_generator()})
        rendered = await render_template(template.root_render_func, context)
>       assert rendered == "Before Item1Item2Item3 After"
E       AssertionError: assert 'Before NoneNoneNone After' == 'Before Item1Item2Item3 After'
E         
E         - Before Item1Item2Item3 After
E         + Before NoneNoneNone After

tests/test_template_rendering.py:112: AssertionError
_______________ TestTemplateRendering.test_render_async_extends ________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x109439150>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10949a710>

    @pytest.mark.asyncio
    async def test_render_async_extends(self, environment: AsyncEnvironment) -> None:
        template = await environment.get_template_async("async_extends.html")
    
        async def async_generator() -> AsyncIterator[str]:
            for item in ("Item1", "Item2", "Item3"):
                yield item
    
        context = template.new_context({"async_items": async_generator()})
        rendered = await render_template(template.root_render_func, context)
>       assert rendered == "<!DOCTYPE html><html><body>Item1Item2Item3</body></html>"
E       AssertionError: assert 'None' == '<!DOCTYPE ht.../body></html>'
E         
E         - <!DOCTYPE html><html><body>Item1Item2Item3</body></html>
E         + None

tests/test_template_rendering.py:124: AssertionError
__________ TestTemplateRendering.test_performance_with_large_template __________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x109439370>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x109499a90>

    @pytest.mark.asyncio
    async def test_performance_with_large_template(
        self, environment: AsyncEnvironment
    ) -> None:
        large_template = "{% for i in range(1000) %}{{ i }}{% endfor %}"
    
        environment.loader.mapping["large.html"] = large_template  # type: ignore
    
        template = await environment.get_template_async("large.html")
        context = template.new_context({})
    
        import time
    
        start_time = time.time()
        rendered = await render_template(template.root_render_func, context)
        end_time = time.time()
    
        assert len(rendered) > 1000
>       assert "999" in rendered
E       AssertionError: assert '999' in 'NoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneN...neNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNone'

tests/test_template_rendering.py:144: AssertionError
================================ tests coverage ================================
_______________ coverage: platform darwin, python 3.13.3-final-0 _______________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          45     20    56%
jinja2_async_environment/compiler.py        237     79    67%
jinja2_async_environment/environment.py     115     54    53%
jinja2_async_environment/loaders.py         218    142    35%
-------------------------------------------------------------
TOTAL                                       615    295    52%
=========================== short test summary info ============================
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_simple_template - AssertionError: assert '<h1>Hello, simple.html!</h1>' == '<h1>Hello, World!...
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance - AssertionError: assert 'None' == '<!DOCTYPE ht.../body></html>'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_block - AssertionError: assert '' == 'Item1Item2Item3'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_include - AssertionError: assert 'Before NoneNoneNone After' == 'Before Item1Item2Ite...
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends - AssertionError: assert 'None' == '<!DOCTYPE ht.../body></html>'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_performance_with_large_template - AssertionError: assert '999' in 'NoneNoneNoneNoneNoneNoneNoneNoneNoneNoneNo...
========================= 6 failed, 1 passed in 0.64s ==========================
(jinja2-async-environment) [jinja2-async-environment]                 main  ✭ ✱
