[project]
name = "mlsdk-python"
version = "1.0.4"
description = ""
authors = [
    {name = "Mindlytics",email = "info@mindlytics.ai"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "asyncio (>=3.4.3,<4.0.0)",
    "pydantic (>=2.11.4,<3.0.0)",
    "pytest-asyncio (>=0.26.0,<0.27.0)",
    "backoff (>=2.2.1,<3.0.0)",
    "aiohttp[speedups] (>=3.11.18,<4.0.0)",
    "websockets (>=15.0.1,<16.0.0)"
]

[tool.poetry]
packages = [{include = "mlsdk", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"

[tool.poetry.group.dev.dependencies]
taskipy = "^1.14.1"
pytest = "^8.3.5"
black = "^25.1.0"
mypy = "^1.15.0"
pre-commit = "^4.2.0"
docformatter = "^1.7.5"
pydocstyle = "^6.3.0"
sphinx = "^8.2.3"
sphinx-autobuild = "^2024.10.3"
sphinx-rtd-theme = "^3.0.2"
sphinxcontrib-napoleon = "^0.7"
pytest-dotenv = "^0.5.2"
langchain-openai = "^0.3.18"
langchain-core = "^0.3.61"
notebook = "^7.4.2"
ipykernel = "^6.29.5"
nbstripout = "^0.8.1"
langgraph = "^0.4.7"
langchain = {extras = ["openai"], version = "^0.3.25"}
rich = "^14.0.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
sanity = "bash -c 'poetry run task lint && poetry run task typecheck'"
test = "pytest tests"
lint = "black src tests"
typecheck = "mypy src"
format = "black src tests"
build = "poetry build"
publish = "poetry publish --build"
install = "poetry install"
check = "pre-commit run --all-files"
docs = "sphinx-build -b html docs docs/_build"
docs_live = "sphinx-autobuild docs docs/_build"

[tool.flake8]
max-line-length = 125

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
env_files = [".env.test"]

[tool.pydocstyle]
match = '(?!__init__).*\.py'
match-dir = '^src/'

[tool.mypy]
exclude = "docs/conf.py"
