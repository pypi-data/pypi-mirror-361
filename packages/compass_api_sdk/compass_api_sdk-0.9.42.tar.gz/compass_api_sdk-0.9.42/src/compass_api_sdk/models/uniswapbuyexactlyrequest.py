"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from .feeenum import FeeEnum
from .token_enum import TokenEnum
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


UniswapBuyExactlyRequestAmountTypedDict = TypeAliasType(
    "UniswapBuyExactlyRequestAmountTypedDict", Union[float, str]
)
r"""The amount of the token to swap to"""


UniswapBuyExactlyRequestAmount = TypeAliasType(
    "UniswapBuyExactlyRequestAmount", Union[float, str]
)
r"""The amount of the token to swap to"""


class UniswapBuyExactlyRequestTypedDict(TypedDict):
    r"""Request model for buying an exact amount of tokens."""

    token_in: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """
    token_out: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """
    fee: FeeEnum
    r"""The transaction fee of a Uniswap pool in bips.

    Uniswap supports 4 different fee levels.
    """
    amount: UniswapBuyExactlyRequestAmountTypedDict
    r"""The amount of the token to swap to"""
    max_slippage_percent: float
    r"""The maximum slippage allowed in percent. e.g. `1` means `1 %` slippage allowed."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""
    action_type: Literal["UNISWAP_BUY_EXACTLY"]
    wrap_eth: NotRequired[bool]
    r"""Whether to wrap ETH to WETH, only use when swapping WETH into something"""


class UniswapBuyExactlyRequest(BaseModel):
    r"""Request model for buying an exact amount of tokens."""

    token_in: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """

    token_out: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """

    fee: FeeEnum
    r"""The transaction fee of a Uniswap pool in bips.

    Uniswap supports 4 different fee levels.
    """

    amount: UniswapBuyExactlyRequestAmount
    r"""The amount of the token to swap to"""

    max_slippage_percent: float
    r"""The maximum slippage allowed in percent. e.g. `1` means `1 %` slippage allowed."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""

    ACTION_TYPE: Annotated[
        Annotated[
            Optional[Literal["UNISWAP_BUY_EXACTLY"]],
            AfterValidator(validate_const("UNISWAP_BUY_EXACTLY")),
        ],
        pydantic.Field(alias="action_type"),
    ] = "UNISWAP_BUY_EXACTLY"

    wrap_eth: Optional[bool] = False
    r"""Whether to wrap ETH to WETH, only use when swapping WETH into something"""
