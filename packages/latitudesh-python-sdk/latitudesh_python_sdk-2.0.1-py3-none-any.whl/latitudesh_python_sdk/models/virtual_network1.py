"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .virtual_network_data import VirtualNetworkData, VirtualNetworkDataTypedDict
from enum import Enum
from latitudesh_python_sdk.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class VirtualNetworkType(str, Enum):
    VIRTUAL_NETWORKS = "virtual_networks"


class VirtualNetworkSiteTypedDict(TypedDict):
    id: NotRequired[str]
    facility: NotRequired[str]
    name: NotRequired[str]
    slug: NotRequired[str]


class VirtualNetworkSite(BaseModel):
    id: Optional[str] = None

    facility: Optional[str] = None

    name: Optional[str] = None

    slug: Optional[str] = None


class VirtualNetworkRegionTypedDict(TypedDict):
    city: NotRequired[str]
    country: NotRequired[str]
    site: NotRequired[VirtualNetworkSiteTypedDict]


class VirtualNetworkRegion(BaseModel):
    city: Optional[str] = None

    country: Optional[str] = None

    site: Optional[VirtualNetworkSite] = None


class VirtualNetworkAttributesTypedDict(TypedDict):
    vid: NotRequired[int]
    r"""vlan ID of the virtual network"""
    name: NotRequired[str]
    r"""Name of the virtual network"""
    description: NotRequired[str]
    r"""Description of the virtual network"""
    region: NotRequired[VirtualNetworkRegionTypedDict]
    assignments_count: NotRequired[int]
    r"""Amount of devices assigned to the virtual network"""


class VirtualNetworkAttributes(BaseModel):
    vid: Optional[int] = None
    r"""vlan ID of the virtual network"""

    name: Optional[str] = None
    r"""Name of the virtual network"""

    description: Optional[str] = None
    r"""Description of the virtual network"""

    region: Optional[VirtualNetworkRegion] = None

    assignments_count: Optional[int] = None
    r"""Amount of devices assigned to the virtual network"""


class VirtualNetworkMetaTypedDict(TypedDict):
    pass


class VirtualNetworkMeta(BaseModel):
    pass


class VirtualNetwork1TypedDict(TypedDict):
    id: NotRequired[str]
    type: NotRequired[VirtualNetworkType]
    attributes: NotRequired[VirtualNetworkAttributesTypedDict]
    data: NotRequired[VirtualNetworkDataTypedDict]
    meta: NotRequired[VirtualNetworkMetaTypedDict]


class VirtualNetwork1(BaseModel):
    id: Optional[str] = None

    type: Optional[VirtualNetworkType] = None

    attributes: Optional[VirtualNetworkAttributes] = None

    data: Optional[VirtualNetworkData] = None

    meta: Optional[VirtualNetworkMeta] = None
