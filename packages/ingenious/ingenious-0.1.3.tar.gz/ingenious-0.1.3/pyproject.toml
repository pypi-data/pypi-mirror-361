[project]
name = "ingenious"
version = "0.1.3"
description = "An enterprise-grade Python library for quickly setting up APIs to interact with AI Agents"
readme = "README.md"
license = { text = "MIT" }
authors = [
  { name = "John Rampono", email = "john.rampono@insight.com" },
  { name = "Kokko Ng", email = "kokko.ng@insight.com" },
  { name = "Elliot Zhu", email = "elliot.zhu@insight.com" },
]
keywords = ["agent", "autogen", "fastapi", "azure"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.13"
dependencies = [
  "aiosqlite>=0.21.0",
  "annotated-types==0.7.0",
  "anyio>=4.9.0",
  "autogen-agentchat==0.5.7",
  "autogen-ext[openai]==0.5.7",
  "azure-core==1.34.0",
  "azure-cosmos>=4.9.0",
  "azure-identity>=1.17.1",
  "azure-keyvault>=4.2.0",
  "azure-search-documents==11.5.2",
  "azure-storage-blob>=12.25.1",
  "certifi==2025.4.26",
  "chainlit==2.5.5",
  "chromadb==1.0.11",
  "colorlog>=6.9.0",
  "duckdb==1.3.0",
  "fastapi==0.115.9",
  "fastapi-cli==0.0.7",
  "flask==3.1.1",
  "ipython==9.2.0",
  "jinja2==3.1.6",
  "jsonpickle==4.1.0",
  "markdown==3.8",
  "markdown-it-py==3.0.0",
  "markdownify==1.0.0",
  "markpickle==1.6.1",
  "matplotlib==3.10.3",
  "numpy==2.2.6",
  "openai==1.82.0",
  "pandas==2.2.3",
  "pyautogen>=0.2.0,<0.3.0",
  "pydantic==2.11.5",
  "pyodbc==5.2.0",
  "pypdf==5.5.0",
  "seaborn==0.13.2",
  "sentence-transformers>=5.0.0",
  "typer>=0.15.4",
]

[project.urls]
Homepage = "https://github.com/Insight-Services-APAC/ingenious"
Documentation = "https://insight-services-apac.github.io/ingenious/"
Repository = "https://github.com/Insight-Services-APAC/ingenious"
Issues = "https://github.com/Insight-Services-APAC/ingenious/issues"

[dependency-groups]
dev = [
  "pre-commit>=4.2.0",
  "pytest>=8.3.5",
  "pytest-asyncio>=0.26.0",
  "pytest-cov>=6.1.1",
  "pytest-mock>=3.14.0",
  "pytest-timeout>=2.4.0",
  "ruff>=0.11.10",
  "twine>=6.0.0",
  "vulture>=2.14",
]

[project.optional-dependencies]
dataprep = ["scrapfly-sdk==0.8.23", "python-dotenv==1.0.1", "backoff==2.2"]
document-processing = [
  "pymupdf==1.26.1",
  "azure-ai-documentintelligence==1.0.2",
]
local-implementations = ["sentence-transformers>=2.0.0"]
pdfminer = ["pdfminer.six==20250506"]
unstructured = ["unstructured[all-docs]==0.17.2"]
tests = [
  "pytest==8.3.5",
  "pytest-asyncio==0.26.0",
  "pytest-timeout==2.4.0",
  "pytest-mock==3.14.0",
  "pytest-cov==6.1.1",
  "pre-commit==4.2.0",
  "ruff==0.11.10",
  "vulture==2.14",
]

[build-system]
requires = ["hatchling>=1.26"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["ingenious/", "ingenious_prompt_tuner/", "README.md", "LICENSE"]

[tool.hatch.build.targets.wheel]
packages = ["ingenious", "ingenious_prompt_tuner"]

[project.scripts]
ingen = "ingenious.cli:app"

[tool.ruff.lint]
extend-select = ["I"]
ignore = ["E402"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "-v",
  "--tb=short",
  "--strict-markers",
  "--strict-config",
  "--cov=ingenious",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-fail-under=20",
  "-p",
  "no:doctest",
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
markers = [
  "unit: Unit tests (no external dependencies)",
  "integration: Integration tests (internal components only)",
  "slow: Slow-running tests",
  "requires_env: Tests that require specific environment variables",
  "e2e: live network integration test (requires external APIs)",
  "docs: tests that parse large documents or require extra dependencies",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::PendingDeprecationWarning",
  "ignore:.*(SwigPy|swigvarlink).* has no __module__ attribute:DeprecationWarning",
]
