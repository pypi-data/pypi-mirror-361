[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hacs-pinecone"
version = "0.3.0"
description = "Pinecone vector store integration for HACS (Healthcare Agent Communication Standard)"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [
    { name = "Solano Todeschini", email = "solano.todeschini@gmail.com" }
]
keywords = [
    "healthcare", "ai", "agents", "fhir", "clinical", "communication", "standard", 
    "vectorization", "pinecone", "vector-store", "embeddings", "semantic-search"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "hacs-tools>=0.2.1",
    "hacs-models>=0.2.1",
    "hacs-core>=0.2.1",
    "pinecone-client>=2.0.0",
    "pydantic>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/solanovisitor/hacs"
Documentation = "https://github.com/solanovisitor/hacs/tree/main/docs"
Repository = "https://github.com/solanovisitor/hacs"
"Bug Tracker" = "https://github.com/solanovisitor/hacs/issues"
Changelog = "https://github.com/solanovisitor/hacs/blob/main/docs/reference/changelog.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
]
openai = [
    "hacs-openai>=0.2.1",
]

[tool.hatch.build.targets.wheel]
packages = ["src/hacs_pinecone"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501", "N806"]

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__"]
reportMissingTypeStubs = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnknownMemberType = false 