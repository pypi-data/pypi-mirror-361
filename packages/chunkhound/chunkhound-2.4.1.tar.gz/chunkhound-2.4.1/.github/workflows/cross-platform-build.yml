name: Cross-Platform Binary Build Pipeline

on:
  push:
    tags: ["v*"]
  pull_request:
    paths:
      - "chunkhound/**"
      - "pyproject.toml"
      - "requirements.txt"
      - "Dockerfile"
      - ".github/workflows/cross-platform-build.yml"
  workflow_dispatch:
    inputs:
      build_all_platforms:
        description: "Build all platforms (Ubuntu + Windows)"
        required: false
        default: "true"
        type: boolean

env:
  DOCKER_BUILDKIT: 1
  PYTHON_VERSION: "3.11"

jobs:
  build-ubuntu:
    name: Build Ubuntu x64 Binary
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Ubuntu Binary (Docker)
        run: |
          echo "üêß Building Ubuntu binary with Docker..."
          
          # Build for x64 only
          PLATFORM="linux/amd64"
          
          # Build using Docker
          docker buildx build \
            --platform $PLATFORM \
            --target ubuntu-builder \
            --tag chunkhound:ubuntu-build \
            --load \
            .

          # Extract PyInstaller bundle
          docker create --name temp-ubuntu chunkhound:ubuntu-build
          docker cp temp-ubuntu:/app/dist/. ./dist/
          docker rm temp-ubuntu
          
          # Verify binary exists and is executable
          if [ -f "./dist/chunkhound-optimized/chunkhound-optimized" ]; then
            chmod +x ./dist/chunkhound-optimized/chunkhound-optimized
            echo "‚úÖ Binary extracted successfully"
            ./dist/chunkhound-optimized/chunkhound-optimized --version
          else
            echo "‚ùå Binary not found after build"
            exit 1
          fi

          # Create tarball
          cd dist && tar -czf chunkhound-linux-x64.tar.gz chunkhound-optimized/ && cd ..

      - name: Upload Ubuntu Binary
        uses: actions/upload-artifact@v4
        with:
          name: chunkhound-linux-x64
          path: dist/chunkhound-linux-x64.tar.gz
          retention-days: 30

  build-windows:
    name: Build Windows x64 Binary  
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Build Windows Binary
        shell: powershell
        run: |
          Write-Host "ü™ü Building Windows binary..."

          # Install uv
          Invoke-RestMethod -Uri "https://astral.sh/uv/install.ps1" | Invoke-Expression
          $env:PATH = "$env:USERPROFILE\.local\bin;$env:PATH"

          # Install dependencies and PyInstaller
          uv sync --no-dev
          uv add --dev pyinstaller

          # Build binary
          uv run pyinstaller chunkhound-optimized.spec --clean --noconfirm

          # Verify binary exists
          $binaryPath = ".\dist\chunkhound-optimized\chunkhound-optimized.exe"
          if (Test-Path $binaryPath) {
            Write-Host "‚úÖ Binary built successfully"
            & $binaryPath --version
          } else {
            Write-Host "‚ùå Binary not found after build"
            exit 1
          }

          # Create zip archive
          Compress-Archive -Path "dist\chunkhound-optimized" -DestinationPath "dist\chunkhound-windows-x64.zip" -Force

      - name: Upload Windows Binary
        uses: actions/upload-artifact@v4
        with:
          name: chunkhound-windows-x64
          path: dist/chunkhound-windows-x64.zip
          retention-days: 30