# automatically generated by the FlatBuffers compiler, do not modify

# namespace: API

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GetRendering(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsGetRendering(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GetRendering()
        x.Init(buf, n + offset)
        return x

    # GetRendering
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GetRendering
    def Target(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from SEAScope.API.RenderableId import RenderableId
            obj = RenderableId()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def GetRenderingStart(builder): builder.StartObject(1)
def GetRenderingAddTarget(builder, target): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(target), 0)
def GetRenderingEnd(builder): return builder.EndObject()
