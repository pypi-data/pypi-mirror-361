Metadata-Version: 2.4
Name: queue_leu_leu
Version: 1.1
Summary: Collection of Python scripts, showing minimal examples of objects following each other.
Home-page: https://github.com/xorblo-doitus/queue_leu_leu
Author: ZetaMap, xorblo-doitus
License: MIT
Project-URL: GitHub Project, https://github.com/xorblo-doitus/queue_leu_leu
Project-URL: ZetaMap, https://github.com/ZetaMap/
Project-URL: xorblo-doitus, https://github.com/xorblo-doitus
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS :: MacOS X
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENCE.txt
Requires-Dist: pygame
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Queue leu leu
Collection of Python scripts, showing minimal examples of objects following each other.


### Content
* [arc follow](https://github.com/xorblo-doitus/queue_leu_leu/tree/main/src/queue_leu_leu/arc)
* [joint follow](https://github.com/xorblo-doitus/queue_leu_leu/tree/main/src/queue_leu_leu/joint)
* [orbit follow](https://github.com/xorblo-doitus/queue_leu_leu/tree/main/src/queue_leu_leu/orbit)
* [trail follow](https://github.com/xorblo-doitus/queue_leu_leu/tree/main/src/queue_leu_leu/trail)
* [polygon follow](https://github.com/xorblo-doitus/queue_leu_leu/tree/main/src/queue_leu_leu/polygon) (this one is a shape editor)


### Installation
Just install it with the command: ``pip install queue_leu_leu`` <br>
Or for installation with a clone of this repo: ``pip install .``

If you want to build it yourself, install the module ``build`` and run the command: ``python -m build``.


### Dependencies
All the scripts use [PyGame](https://github.com/pygame/pygame) to work. <br>
Mainly, to use the [Vector2](https://www.pygame.org/docs/ref/math.html?highlight=vector2#pygame.math.Vector2) object, but you can use any other library that includes standard Vector things. <br>
The rest, is just to visualize the algorithms with more informations.


### Contributors
[@ZetaMap](https://github.com/ZetaMap) and [@xorblo-doitus](https://github.com/xorblo-doitus)
