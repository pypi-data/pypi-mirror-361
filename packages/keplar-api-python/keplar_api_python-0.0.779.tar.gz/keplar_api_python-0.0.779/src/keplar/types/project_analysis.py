# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .structured_report import StructuredReport


class ProjectAnalysis(UniversalBaseModel):
    markdown_report: typing_extensions.Annotated[str, FieldMetadata(alias="markdownReport")]
    structured_report: typing_extensions.Annotated[
        typing.Optional[StructuredReport], FieldMetadata(alias="structuredReport")
    ] = None
    call_ids: typing_extensions.Annotated[typing.List[str], FieldMetadata(alias="callIds")]
    references: typing.Dict[str, typing.List[typing.Optional[typing.Any]]]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
