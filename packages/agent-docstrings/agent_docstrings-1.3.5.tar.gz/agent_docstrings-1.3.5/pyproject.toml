[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agent-docstrings"
version = "1.3.5"
description = "A command-line tool to auto-generate and update file-level docstrings summarizing classes and functions. Useful for maintaining a high-level overview of your files, especially in projects with code generated or modified by AI assistants."
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
authors = [
    { name = "Artemonim", email = "Artemonim@yandex.ru" }
]
maintainers = [
    { name = "Artemonim", email = "Artemonim@yandex.ru" }
]
keywords = [
    "docstrings",
    "documentation",
    "ai",
    "developer-tools",
    "automation",
    "code-generator",
    "maintainability",
    "code-quality",
    "static-analysis",
    "pre-commit",
    "linter",
    "summarize-code",
    "code-navigation",
    "refactoring",
    "python",
    "java",
    "kotlin",
    "go",
    "powershell",
    "delphi",
    "typescript",
    "javascript",
    "csharp",
    "c++",
    "c"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Typing :: Typed",
]
requires-python = ">=3.10"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.950",
    "bump-my-version",
]

[project.urls]
"Homepage" = "https://github.com/Artemonim/AgentDocstrings"
"Source" = "https://github.com/Artemonim/AgentDocstrings"
"Tracker" = "https://github.com/Artemonim/AgentDocstrings/issues"
"Documentation" = "https://github.com/Artemonim/AgentDocstrings#readme"
"Changelog" = "https://github.com/Artemonim/AgentDocstrings/blob/master/CHANGELOG.md"

[project.scripts]
agent-docstrings = "agent_docstrings.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["agent_docstrings*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
agent_docstrings = ["py.typed", "bin/*"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["agent_docstrings"]
omit = ["tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bumpversion]
current_version = "1.3.5"
commit = false
tag = false

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "agent_docstrings/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [NextRelease]"
replace = "## [NextRelease]\n\n### Header\n\n-   **subtitle**: describtion\n\n## [{new_version}]" 