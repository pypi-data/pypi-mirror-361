name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release --out dist
        manylinux: auto
    
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: dist

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build sdist
      uses: PyO3/maturin-action@v1
      with:
        command: sdist
        args: --out dist
    
    - name: Upload sdist
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    environment: release  # Optional: use environment protection rules
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true
    
    - name: Display structure of downloaded files
      run: ls -la dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist/
        skip-existing: true
        verbose: true

  # Optional: Create GitHub release with artifacts
  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    if: github.event_name == 'release'
    permissions:
      contents: write
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true
    
    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        fail_on_unmatched_files: false 