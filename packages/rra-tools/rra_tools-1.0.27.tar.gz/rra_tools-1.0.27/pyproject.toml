[project]
name = "rra-tools"
version = "1.0.27"
description = "Common utilities for IHME Rapid Response team pipelines."
authors = [
    {name = "James Collins", email = "collijk@uw.edu"},
]
license = "BSD-3-Clause"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "click >=8.0",
    "pandas >=2.2",
    "deep-translator >=1.11",
    "tqdm >=4.0",
    "pathos >=0.3.3",
    "loguru >=0.7.0",
    "requests >=2.0",
    "matplotlib",
    "seaborn"
]

[project.urls]
homepage = "https://ihmeuw.github.io/rra-tools"
repository = "https://ihmeuw.github.io/rra-tools"
documentation = "https://ihmeuw.github.io/rra-tools"

[project.scripts]
parse_logs = "rra_tools.logging.performance:parse_logs"

[tool.poetry]
packages = [
    { include = "rra_tools", from = "src" }
]
requires-poetry = ">=2.0"

[tool.poetry.dependencies]
python = ">=3.12, <4.0"

# We keep the dev dependencies here instead of in the project optional dependencies
# so they're still installed by default with `poetry install`.
# They won't be installed or shipped with the package.
 [tool.poetry.group.dev.dependencies]
# Things we want to put a lower bound on
mypy = "^1.15.0"
mkdocs-material = "^9.6.0"
pre-commit = "^4.0.0"
pytest = "^8.3.0"
ruff = "^0.9.7"
# Things we don't care about the version
mkdocstrings = {extras = ["python"], version = "*"}
mkdocs-table-reader-plugin = "*"
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"
mkdocs-section-index = "*"
pymdown-extensions = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
pandas-stubs = "*"
types-tqdm = "*"

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312" # The lowest supported version

[tool.ruff.lint]
# By default, enable all the lint rules.
# Add to the ignore list below if you don't want some rules.
# If you need some ignores for certain modules, see tool.ruff.lint.per-file-ignores below.
# For individual ignore cases, prefer inline `# noqa`s within the code.
select = ["ALL"]
ignore = [
    "COM812",   # flake8 missing trailing comma, formatter handles
    "ISC001",   # Implicit string concatenation
    "ANN",      # Type hints related, let mypy handle these.
    "D",        # Docstrings related, way too strict to our taste
    "RUF007",   # zip is idiomatic, this is a dumb check
    "RET505",   # Else after return, makes a lot of false positives
    "E501",     # Line too long, this is autoformatted
    "PD901",    # Avoid generic use of name `df`.  Practicality beats purity.
    "S603",     # Supbrocess arg validation, prone to false positives
    "TC003",    # Imports for typechecking only
    "A005",     # We shadow logging here.
]
ignore-init-module-imports = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",     # "Use of `assert` detected"
    "ARG",      # "Unused function argument". Fixtures are often unused.
    "S105",     # "Possible hardcoded password".
]
"scripts/**" = [
    "INP001",   # "Scripts are not part of a package."
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.root_validator",
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pylint]
max-args = 6

[tool.pytest.ini_options]
addopts = """\
    --cov rra_tools \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 10
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
# This is the global mypy configuration.
# Avoid changing this!
strict = true  # See all the enabled flags `mypy --help | grep -A 10 'Strict mode'`
disallow_any_unimported = false

[[tool.mypy.overrides]]
module = [
    "deep_translator.*",
    "pathos.*",
    "mkdocs_gen_files.*",
    "seaborn.*",
]
ignore_missing_imports = true
