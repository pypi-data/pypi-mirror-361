"""
Configuration Index - Auto-generated

This file is automatically generated by scripts/configs/export_configs.py
Do not edit manually.
"""

AVAILABLE_CONFIGS = [
  {
    "filename": "ascii-dsyp.json",
    "name": "ascii-dsyp",
    "description": "Basic Latin alphabet, 12 consonants, 4 vowels, 9 syllables, max 1 consecutive",
    "consonants_count": 12,
    "vowels_count": 4,
    "address_length": 9,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-cxtft.json",
    "name": "ascii-cxtft",
    "description": "Basic Latin alphabet, 8 consonants, 6 vowels, 9 syllables, max 1 consecutive",
    "consonants_count": 8,
    "vowels_count": 6,
    "address_length": 9,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-eokbn.json",
    "name": "ascii-eokbn",
    "description": "Basic Latin alphabet, 16 consonants, 4 vowels, 9 syllables, max 1 consecutive",
    "consonants_count": 16,
    "vowels_count": 4,
    "address_length": 9,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-elmxb.json",
    "name": "ascii-elmxb",
    "description": "Basic Latin alphabet, 12 consonants, 5 vowels, 9 syllables, max 1 consecutive",
    "consonants_count": 12,
    "vowels_count": 5,
    "address_length": 9,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-jaxqt.json",
    "name": "ascii-jaxqt",
    "description": "Basic Latin alphabet, 16 consonants, 5 vowels, 8 syllables, max 1 consecutive",
    "consonants_count": 16,
    "vowels_count": 5,
    "address_length": 8,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-fqwclj.json",
    "name": "ascii-fqwclj",
    "description": "Basic Latin alphabet, 20 consonants, 5 vowels, 8 syllables, max 1 consecutive",
    "consonants_count": 20,
    "vowels_count": 5,
    "address_length": 8,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-cjbnb.json",
    "name": "ascii-cjbnb",
    "description": "Basic Latin alphabet, 10 consonants, 5 vowels, 9 syllables, max 1 consecutive",
    "consonants_count": 10,
    "vowels_count": 5,
    "address_length": 9,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-cjnqd.json",
    "name": "ascii-cjnqd",
    "description": "Basic Latin alphabet, 11 consonants, 5 vowels, 9 syllables, max 1 consecutive",
    "consonants_count": 11,
    "vowels_count": 5,
    "address_length": 9,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-elpdz.json",
    "name": "ascii-elpdz",
    "description": "Basic Latin alphabet, 13 consonants, 5 vowels, 9 syllables, max 1 consecutive",
    "consonants_count": 13,
    "vowels_count": 5,
    "address_length": 9,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-fqwfmd.json",
    "name": "ascii-fqwfmd",
    "description": "Basic Latin alphabet, 21 consonants, 5 vowels, 8 syllables, max 1 consecutive",
    "consonants_count": 21,
    "vowels_count": 5,
    "address_length": 8,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  },
  {
    "filename": "ascii-fqsmnn.json",
    "name": "ascii-fqsmnn",
    "description": "Basic Latin alphabet, 20 consonants, 5 vowels, 8 syllables, max 1 consecutive",
    "consonants_count": 20,
    "vowels_count": 5,
    "address_length": 8,
    "max_consecutive": 1,
    "identifier": "",
    "auto_generated": true
  }
]

def get_config_info(config_name: str):
    """Get information about a configuration."""
    for config in AVAILABLE_CONFIGS:
        if config['name'] == config_name or config['filename'] == config_name:
            return config
    return None

def list_configs():
    """List all available configuration names."""
    return [config['name'] for config in AVAILABLE_CONFIGS]

def list_config_files():
    """List all configuration filenames."""
    return [config['filename'] for config in AVAILABLE_CONFIGS]
