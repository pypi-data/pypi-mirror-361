[tool.poetry]
name = "coder-mcp"
version = "1.0.1"
description = "High‑performance Managed Code Processor (MCP) server with AI‑powered code analysis and editing."
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Code Generators"
]
authors = ["Chris Baker <csbaker80@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "coder_mcp"}]

[tool.poetry.urls]
Source = "https://github.com/coder-mcp/coder-mcp"
Issues = "https://github.com/coder-mcp/coder-mcp/issues"

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
chardet = ">=5.0.0"
toml = ">=0.10.2"
packaging = ">=23.0"

# Core dependencies
mcp = ">=1.10.0"
pydantic = ">=2.0.0"

# Storage and caching
redis = ">=5.0.0"
hiredis = ">=2.3.0"

# Vector embeddings and ML
numpy = ">=1.24.0"
openai = ">=1.0.0"
hnswlib = ">=0.8.0"
sentence-transformers = ">=2.2.0"
transformers = ">=4.30.0"

# Async support
aiofiles = ">=23.0.0"

# Web framework
fastapi = ">=0.104.0"

# Utilities
python-dotenv = ">=1.0.0"
click = ">=8.1.0"
rich = ">=13.0.0"

# Code analysis
astroid = ">=3.0.0"
jinja2 = ">=3.1.0"

# Enhanced file editing
diff-match-patch = ">=20230430"
tree-sitter = ">=0.20.4"
python-levenshtein = ">=0.23.0"

# Security
defusedxml = ">=0.7.0"

[tool.poetry.group.dev]
optional = false

[tool.poetry.group.dev.dependencies]
# Development tools
black = ">=24.0.0"
isort = ">=5.13.0"
flake8 = ">=7.0.0"
mypy = ">=1.8.0"
pylint = ">=3.0.0"
bandit = {version = ">=1.7.0", extras = ["sarif"]}
pre-commit = ">=3.6.0"

# Type stubs
types-redis = ">=4.6.0"
types-aiofiles = ">=23.0.0"
types-toml = ">=0.10.8"
ruff = "^0.12.0"

[tool.poetry.group.test]
optional = false

[tool.poetry.group.test.dependencies]
# Core testing frameworks
pytest = ">=8.0.0"
pytest-asyncio = ">=0.23.0"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.12.0"
pytest-timeout = ">=2.2.0"
pytest-xdist = ">=3.5.0"

# Testing utilities
faker = ">=22.0.0"
freezegun = ">=1.4.0"
responses = ">=0.24.0"
jsonschema = ">=4.0.0"
deepdiff = ">=6.0.0"

# Test reporting
pytest-html = ">=4.1.0"
coverage = {extras = ["toml"], version = ">=7.4.0"}
psutil = "^7.0.0"
pytest-benchmark = "^5.1.0"

[tool.poetry.scripts]
coder-mcp = "coder_mcp.server:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Tool configurations

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312', 'py313']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-ra --strict-markers --cov=coder_mcp --cov-report=term-missing"

[tool.coverage.run]
source = ["coder_mcp"]
branch = true
omit = ["*/tests/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "W"]
fixable = ["ALL"]
