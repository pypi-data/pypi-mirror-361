name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on ${{ matrix.os }}-${{ matrix.arch }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          [
            ubuntu-24.04,
            ubuntu-24.04-arm,
            windows-2025,
            windows-11-arm,
            macos-13,
            macos-14,
            macos-15,
          ]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        arch: [x64, arm64]
        exclude:
          # x64 combinations not supported
          - os: ubuntu-24.04-arm
            arch: x64
          - os: windows-11-arm
            arch: x64
          # arm64 combinations not supported
          - os: ubuntu-24.04
            arch: arm64
          - os: windows-2025
            arch: arm64
          # Windows ARM64 older Python versions not supported
          - os: windows-11-arm
            python-version: "3.9"
          - os: windows-11-arm
            python-version: "3.10"
          # macOS 14 and 15 x64 don't support Python 3.9 and 3.10
          - os: macos-14
            arch: x64
            python-version: "3.9"
          - os: macos-14
            arch: x64
            python-version: "3.10"
          - os: macos-15
            arch: x64
            python-version: "3.9"
          - os: macos-15
            arch: x64
            python-version: "3.10"

    steps:
      - name: üîÑ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}

      - name: üì¶ Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/AppData/Local/pip/Cache
            ~/Library/Caches/pip
          key: ${{ runner.os }}-${{ matrix.arch }}-pip-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-${{ matrix.arch }}-pip-

      - name: üîß Install system dependencies (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: üîß Install system dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install cmake --formula

      - name: üîß Install system dependencies (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install make

      - name: ‚¨ÜÔ∏è Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: üèóÔ∏è Build package
        run: |
          make build-test

      - name: ‚úÖ Test import
        run: |
          python -c "import lbson; print('Import successful')"

      - name: üß™ Run tests
        run: |
          make test

      - name: üìä Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.arch }}-py${{ matrix.python-version }}
          path: |
            .pytest_cache/
            *.log
          if-no-files-found: ignore

  # Summary job with Python script
  test-summary:
    name: üìä Test Results Summary
    runs-on: ubuntu-24.04
    needs: [test]
    if: always()
    steps:
      - name: üîÑ Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: üìä Generate test results summary
        env:
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: |
          python .github/scripts/generate_summary.py
