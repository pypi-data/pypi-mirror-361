cd /Users/les/Projects/jinja2-async-environment && pdm run pytest tests/test_template_rendering.py -v
direnv: loading ~/Projects/jinja2-async-environment/.envrc                      
direnv: export +PDM_ACTIVE ~PATH
(jinja2-async-environment) [jinja2-async-environment] cd /Users/les/Projects/jinja2-async-environment && pdm run pytest tests/test_template_rendering.py -v
============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.3.5, pluggy-1.5.0 -- /Users/les/Projects/jinja2-async-environment/.venv/bin/python
cachedir: .pytest_cache
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
plugins: anyio-4.9.0, timeout-2.4.0, asyncio-0.26.0, mock-3.14.0, cov-6.1.1
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collected 7 items                                                                                                                                                     

tests/test_template_rendering.py::TestTemplateRendering::test_render_simple_template PASSED                                                                     [ 14%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance FAILED                                                           [ 28%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_include FAILED                                                               [ 42%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_block FAILED                                                                         [ 57%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_include FAILED                                                                       [ 71%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends FAILED                                                                       [ 85%]
tests/test_template_rendering.py::TestTemplateRendering::test_performance_with_large_template FAILED                                                            [100%]

============================================================================== FAILURES ===============================================================================
_____________________________________________________ TestTemplateRendering.test_render_template_with_inheritance _____________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1046539d0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104764190>

    @pytest.mark.asyncio
    async def test_render_template_with_inheritance(
        self, environment: AsyncEnvironment
    ) -> None:
>       template = await environment.get_template_async("child.html")

tests/test_template_rendering.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:44: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:110: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:137: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:86: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:769: in compile
    return self._compile(source, filename)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104764190>
source = "from jinja2.runtime import LoopContext, Macro, Markup, Namespace, TemplateNotFound, TemplateReference, TemplateRuntim..._0_message is missing else l_0_message))\n    yield '</p>'\n\nblocks = {'content': block_content}\ndebug_info = '1=12'"
filename = '<template>'

    def _compile(self, source: str, filename: str) -> CodeType:
        """Internal hook that can be overridden to hook a different compile
        method in.
    
        .. versionadded:: 2.5
        """
>       return compile(source, filename, "exec")
E         File "<template>", line 12
E       SyntaxError: 'await' outside async function

.venv/lib/python3.13/site-packages/jinja2/environment.py:709: SyntaxError
_______________________________________________________ TestTemplateRendering.test_render_template_with_include _______________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x10466b6f0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x1047642d0>

    @pytest.mark.asyncio
    async def test_render_template_with_include(
        self, environment: AsyncEnvironment
    ) -> None:
>       template = await environment.get_template_async("include.html")

tests/test_template_rendering.py:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:44: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:110: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:137: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:86: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:769: in compile
    return self._compile(source, filename)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x1047642d0>
source = "from jinja2.runtime import LoopContext, Macro, Markup, Namespace, TemplateNotFound, TemplateReference, TemplateRuntim...nder_func(template.new_context(context.get_all(), True, {})):\n        yield event\n\nblocks = {}\ndebug_info = '1=11'"
filename = '<template>'

    def _compile(self, source: str, filename: str) -> CodeType:
        """Internal hook that can be overridden to hook a different compile
        method in.
    
        .. versionadded:: 2.5
        """
>       return compile(source, filename, "exec")
E         File "<template>", line 11
E       SyntaxError: 'await' outside async function

.venv/lib/python3.13/site-packages/jinja2/environment.py:709: SyntaxError
____________________________________________________________ TestTemplateRendering.test_render_async_block ____________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x10466b950>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104764410>

    @pytest.mark.asyncio
    async def test_render_async_block(self, environment: AsyncEnvironment) -> None:
>       template = await environment.get_template_async("async_block.html")

tests/test_template_rendering.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:44: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:110: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:137: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:86: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:769: in compile
    return self._compile(source, filename)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104764410>
source = "from jinja2.runtime import LoopContext, Macro, Markup, Namespace, TemplateNotFound, TemplateReference, TemplateRuntim...'item') if l_0_item is missing else l_0_item))\n\nblocks = {'async_content': block_async_content}\ndebug_info = '1=11'"
filename = '<template>'

    def _compile(self, source: str, filename: str) -> CodeType:
        """Internal hook that can be overridden to hook a different compile
        method in.
    
        .. versionadded:: 2.5
        """
>       return compile(source, filename, "exec")
E         File "<template>", line 25
E       SyntaxError: 'async for' outside async function

.venv/lib/python3.13/site-packages/jinja2/environment.py:709: SyntaxError
___________________________________________________________ TestTemplateRendering.test_render_async_include ___________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1046da330>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104765a90>

    @pytest.mark.asyncio
    async def test_render_async_include(self, environment: AsyncEnvironment) -> None:
>       template = await environment.get_template_async("async_include.html")

tests/test_template_rendering.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:44: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:110: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:137: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:86: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:769: in compile
    return self._compile(source, filename)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104765a90>
source = "from jinja2.runtime import LoopContext, Macro, Markup, Namespace, TemplateNotFound, TemplateReference, TemplateRuntim...ew_context(context.get_all(), True, {})):\n        yield event\n    yield ' After'\n\nblocks = {}\ndebug_info = '1=12'"
filename = '<template>'

    def _compile(self, source: str, filename: str) -> CodeType:
        """Internal hook that can be overridden to hook a different compile
        method in.
    
        .. versionadded:: 2.5
        """
>       return compile(source, filename, "exec")
E         File "<template>", line 12
E       SyntaxError: 'await' outside async function

.venv/lib/python3.13/site-packages/jinja2/environment.py:709: SyntaxError
___________________________________________________________ TestTemplateRendering.test_render_async_extends ___________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x104745040>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104766490>

    @pytest.mark.asyncio
    async def test_render_async_extends(self, environment: AsyncEnvironment) -> None:
>       template = await environment.get_template_async("async_extends.html")

tests/test_template_rendering.py:102: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:44: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:110: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:137: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:86: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:769: in compile
    return self._compile(source, filename)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104766490>
source = "from jinja2.runtime import LoopContext, Macro, Markup, Namespace, TemplateNotFound, TemplateReference, TemplateRuntim...efined(name='item') if l_0_item is missing else l_0_item))\n\nblocks = {'content': block_content}\ndebug_info = '1=12'"
filename = '<template>'

    def _compile(self, source: str, filename: str) -> CodeType:
        """Internal hook that can be overridden to hook a different compile
        method in.
    
        .. versionadded:: 2.5
        """
>       return compile(source, filename, "exec")
E         File "<template>", line 12
E       SyntaxError: 'await' outside async function

.venv/lib/python3.13/site-packages/jinja2/environment.py:709: SyntaxError
_____________________________________________________ TestTemplateRendering.test_performance_with_large_template ______________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x104745260>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104767110>

    @pytest.mark.asyncio
    async def test_performance_with_large_template(
        self, environment: AsyncEnvironment
    ) -> None:
        large_template = "{% for i in range(1000) %}{{ i }}{% endfor %}"
    
        environment.loader.mapping["large.html"] = large_template  # type: ignore
    
>       template = await environment.get_template_async("large.html")

tests/test_template_rendering.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:44: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:110: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:137: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:86: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:769: in compile
    return self._compile(source, filename)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104767110>
source = "from jinja2.runtime import LoopContext, Macro, Markup, Namespace, TemplateNotFound, TemplateReference, TemplateRuntim... pass\n            yield str((undefined(name='i') if l_0_i is missing else l_0_i))\n\nblocks = {}\ndebug_info = '1=12'"
filename = '<template>'

    def _compile(self, source: str, filename: str) -> CodeType:
        """Internal hook that can be overridden to hook a different compile
        method in.
    
        .. versionadded:: 2.5
        """
>       return compile(source, filename, "exec")
E         File "<template>", line 14
E       SyntaxError: 'async for' outside async function

.venv/lib/python3.13/site-packages/jinja2/environment.py:709: SyntaxError
=========================================================================== tests coverage ============================================================================
__________________________________________________________ coverage: platform darwin, python 3.13.3-final-0 ___________________________________________________________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          45     20    56%
jinja2_async_environment/compiler.py        185     72    61%
jinja2_async_environment/environment.py      86     38    56%
jinja2_async_environment/loaders.py         218    141    35%
-------------------------------------------------------------
TOTAL                                       534    271    49%
======================================================================= short test summary info =======================================================================
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance -   File "<template>", line 12
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_include -   File "<template>", line 11
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_block -   File "<template>", line 25
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_include -   File "<template>", line 12
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends -   File "<template>", line 12
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_performance_with_large_template -   File "<template>", line 14
===================================================================== 6 failed, 1 passed in 1.22s =====================================================================
(jinja2-async-environment) [jinja2-async-environment]                                                                                                        main  ✭ ✱
