# LangChain framework test configuration example
name: "LangChain Agent Test"
file_path: "langchain_agent.py"
language: "python"
framework: "langchain"
description: "Test configuration for LangChain-based agent with framework specification"

# Agent configuration
agent:
  module: "langchain_agent"
  class: "LangChainAgent"
  method: "run_chain"

# Test configuration
auto_fix: false
create_pr: false
max_retries: 2

# Test steps
steps:
  - name: "Test LangChain chain execution"
    input:
      input: 
        - name: prompt
          type: string
          value: "Translate 'Hello world' to Spanish"
        - name: model
          type: string
          value: "gpt-3.5-turbo"
      method: "run_chain"
    expected_output:
      contains: "Hola"
    description: "Test the LangChain agent's ability to run chains"
    timeout: 60

  - name: "Test LangChain memory features"
    input:
      input:
        - name: conversation
          type: array
          value:
            - role: "user"
              content: "My name is Alice"
            - role: "assistant"
              content: "Nice to meet you, Alice!"
            - role: "user"
              content: "What's my name?"
      method: "run_with_memory"
    expected_output:
      contains: "Alice"
    description: "Test LangChain-specific memory functionality"
    timeout: 45

# Evaluation criteria
evaluation:
  evaluation_targets:
    - name: chain_execution
      source: return
      criteria: "The chain should execute successfully and return appropriate results"
      weight: 0.6
    - name: langchain_patterns
      source: return
      criteria: "The response should follow LangChain patterns and conventions"
      weight: 0.4
  settings:
    timeout: 60
    temperature: 0.1

# Dependencies specific to LangChain
dependencies:
  - "langchain"
  - "langchain.llms"
  - "langchain.chains"
  - "langchain.memory"

# Files that might need fixing
files_to_fix:
  - "langchain_agent.py"
  - "requirements.txt" 