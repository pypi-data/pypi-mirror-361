services:
{% for service in services %}
  {{ service.name }}:
    image: {{ service.image }}
    restart: unless-stopped
    command: ["serve", "--host", "0.0.0.0", "--num-workers", "{{ service.num_workers }}"]
    {%- if service.user %}
    user: "{{ service.user }}"
    {%- endif %}
    ports:
      - {{ service.port }}
    {% if service.environment.TESSERACT_DEBUG == "1" %}
      - "{{ service.debugpy_port }}:5678"
    {% endif %}
    {%- if service.volumes %}
    volumes:
    {%- for volume_source, volume_data in service.volumes.items() %}
      - {{ volume_source }}:{{ volume_data["bind"] }}
    {% endfor -%}
    {% endif %}
    healthcheck:
      test: python -c "import requests; requests.get('http://localhost:8000/health').raise_for_status()" || exit 1
      interval: 0.1s
      retries: 300
      start_period: 1s
    networks:
      - multi-tesseract-network
    {%- if service.environment %}
    environment:
    {%- for key, value in service.environment.items() %}
      {{ key }}: {{ value }}
    {% endfor -%}
    {% endif %}
    {%- if service.gpus %}
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: [gpu]
            {{ service.gpus }}
    {% endif %}
{% endfor %}


{%- if docker_volumes %}
volumes:
{%- for name, external in docker_volumes.items() %}
  {{ name }}:
    {%- if external %}
    external: true
    {% endif %}
{% endfor %}
{% endif %}

networks:
  multi-tesseract-network:
