name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

on: workflow_dispatch

jobs:
  #job1
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    - name: Check version of package file
      uses: antifree/json-to-variables@v1.0.1
      with:
        filename: 'package.json'
        prefix: package
    - name: create summery
      id: step1
      run: |
        echo "Package File ${{ env.package_version }}"
        echo "version=${{ env.package_version }}" >> "$GITHUB_OUTPUT"
        echo "### Versions :rocket:" >> $GITHUB_STEP_SUMMARY
        echo "Package File ${{ env.package_version }}" >> $GITHUB_STEP_SUMMARY
    - name: Set up Pythoni
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/


  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    # if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/Arenz-Group-Python/  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - build
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        OUTPUT1: ${{needs.build.outputs.output1}}
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        #'v${{ github.ref_name }}'
        'v$OUTPUT1'
        --repo 't_${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        #'${{ github.ref_name }}' dist/**
        'v$OUTPUT1' dist/**
        --repo '${{ github.repository }}'

