# -*- coding: utf-8 -*-
_ = __import__(__package__.split(".", 1)[0])._

# Form implementation generated from reading ui file 'plover/gui_qt/paper_tape.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_PaperTape(object):
    def setupUi(self, PaperTape):
        PaperTape.setObjectName("PaperTape")
        PaperTape.resize(247, 430)
        font = QtGui.QFont()
        font.setFamily("Monospace")
        PaperTape.setFont(font)
        PaperTape.setWindowTitle("")
        PaperTape.setSizeGripEnabled(True)
        self.verticalLayout = QtWidgets.QVBoxLayout(PaperTape)
        self.verticalLayout.setObjectName("verticalLayout")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.label = QtWidgets.QLabel(PaperTape)
        self.label.setObjectName("label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.styles = QtWidgets.QComboBox(PaperTape)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.styles.sizePolicy().hasHeightForWidth())
        self.styles.setSizePolicy(sizePolicy)
        self.styles.setObjectName("styles")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.styles)
        self.verticalLayout.addLayout(self.formLayout)
        self.header = QtWidgets.QLabel(PaperTape)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.header.sizePolicy().hasHeightForWidth())
        self.header.setSizePolicy(sizePolicy)
        self.header.setText("#STKPWHRAO*EUFRPBLGTSDZ")
        self.header.setObjectName("header")
        self.verticalLayout.addWidget(self.header)
        self.tape = QtWidgets.QListView(PaperTape)
        self.tape.setFrameShape(QtWidgets.QFrame.Panel)
        self.tape.setTabKeyNavigation(False)
        self.tape.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tape.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tape.setUniformItemSizes(True)
        self.tape.setObjectName("tape")
        self.verticalLayout.addWidget(self.tape)
        self.action_Clear = QtWidgets.QAction(PaperTape)
        icon = QtGui.QIcon()
        icon.addFile(":/trash.svg", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Clear.setIcon(icon)
        self.action_Clear.setObjectName("action_Clear")
        self.action_Save = QtWidgets.QAction(PaperTape)
        icon1 = QtGui.QIcon()
        icon1.addFile(":/save.svg", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Save.setIcon(icon1)
        self.action_Save.setObjectName("action_Save")
        self.action_ToggleOnTop = QtWidgets.QAction(PaperTape)
        self.action_ToggleOnTop.setCheckable(True)
        icon2 = QtGui.QIcon()
        icon2.addFile(":/pin.svg", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_ToggleOnTop.setIcon(icon2)
        self.action_ToggleOnTop.setObjectName("action_ToggleOnTop")
        self.action_SelectFont = QtWidgets.QAction(PaperTape)
        icon3 = QtGui.QIcon()
        icon3.addFile(":/font_selector.svg", QtCore.QSize(), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_SelectFont.setIcon(icon3)
        self.action_SelectFont.setObjectName("action_SelectFont")
        self.label.setBuddy(self.styles)

        self.retranslateUi(PaperTape)
        self.styles.activated['QString'].connect(PaperTape.on_style_changed) # type: ignore
        self.action_Clear.triggered.connect(PaperTape.on_clear) # type: ignore
        self.action_Save.triggered.connect(PaperTape.on_save) # type: ignore
        self.action_ToggleOnTop.triggered['bool'].connect(PaperTape.on_toggle_ontop) # type: ignore
        self.action_SelectFont.triggered.connect(PaperTape.on_select_font) # type: ignore

    def retranslateUi(self, PaperTape):
        # i18n: Widget: “PaperTape”, text.
        self.label.setText(_("Mode:"))
        # i18n: Widget: “PaperTape”, accessible name.
        self.styles.setAccessibleName(_("Mode"))
        # i18n: Widget: “PaperTape”, accessible description.
        self.styles.setAccessibleDescription(_("Select paper tape display mode."))
        # i18n: Widget: “PaperTape”, accessible name.
        self.tape.setAccessibleName(_("Tape"))
        # i18n: Widget: “PaperTape”, text.
        self.action_Clear.setText(_("&Clear"))
        # i18n: Widget: “PaperTape”, tool tip.
        self.action_Clear.setToolTip(_("Clear paper tape."))
        # i18n: Widget: “PaperTape”, shortcut.
        self.action_Clear.setShortcut(_("Ctrl+L"))
        # i18n: Widget: “PaperTape”, text.
        self.action_Save.setText(_("&Save"))
        # i18n: Widget: “PaperTape”, tool tip.
        self.action_Save.setToolTip(_("Save paper tape to file."))
        # i18n: Widget: “PaperTape”, shortcut.
        self.action_Save.setShortcut(_("Ctrl+S"))
        # i18n: Widget: “PaperTape”, text.
        self.action_ToggleOnTop.setText(_("&Toggle \"always on top\""))
        # i18n: Widget: “PaperTape”, tool tip.
        self.action_ToggleOnTop.setToolTip(_("Toggle \"always on top\"."))
        # i18n: Widget: “PaperTape”, shortcut.
        self.action_ToggleOnTop.setShortcut(_("Ctrl+T"))
        # i18n: Widget: “PaperTape”, text.
        self.action_SelectFont.setText(_("Select &font"))
        # i18n: Widget: “PaperTape”, tool tip.
        self.action_SelectFont.setToolTip(_("Open font selection dialog."))
from . import resources_rc
