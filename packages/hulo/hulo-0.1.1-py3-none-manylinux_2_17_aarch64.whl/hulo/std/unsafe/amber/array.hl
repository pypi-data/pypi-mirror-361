/// Returns index of the first value found in the specified array.
///
/// If the value is not found, the function returns -1.
pub fn array_find<T>(array: T[], value: T) -> num

/// Searches for a value in an array and returns an array with the index of the various items.
pub fn array_find_all<T>(array: T[], value: T) -> num[]

/// Checks if a value is in the array.
pub fn array_contains<T>(array: T[], value: T) -> bool

/// Returns the first element in the array; if the array is empty, the return
/// value is undefined.
pub fn array_first<T>(array: T[]) -> T

/// Returns the last element in the array; if the array is empty, the return
/// value is undefined.
pub fn array_last<T>(array: T[]) -> T

/// Removes an element at the index from the array; if the index is negative
/// or beyond the end, the return value is undefined, but the array will be
/// unchanged.
pub fn array_remove_at<T>(array: T[], index: num) -> void

/// Removes an element at the index from the array, and returns it; if the
/// index is negative or beyond the end, the return value is undefined, but
/// the array will be unchanged.
pub fn array_extract_at<T>(array: T[], index: num) -> T

/// Removes the last element from the array, and returns it; if the array
/// is empty, the return value is undefined, but the array will be unchanged.
pub fn array_pop<T>(array: T[]) -> T

/// Removes the first element from the array, and returns it; if the array
/// is empty, the return value is undefined, but the array will be unchanged.
pub fn array_shift<T>(array: T[]) -> T