Metadata-Version: 2.1
Name: eal_dist
Version: 25.7.10
Summary: Object tracking software for EAL
Home-page: https://easyaimlock.com
Author: EasyAimLock
Author-email: support@easyaimlock.com
Project-URL: Bug Tracker, https://easyaimlock.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: mediapipe

[EAL_DIST]
# EasyAimLock (EAL)
Easy Aim Lock is a computer vision object detection project based on deep learning models such as the ones 
typically found in facial recognition software or self-driving cars. Object classification is a technique 
that predicts the probability of different object categories (person, dog, cat, etc.) in an image, it essentially 
answers the question ‚ÄúWhats on the screen?‚Äù. Object localization can predict the probability of an object in the 
image along with its location in the image. This technique basically answers ‚ÄúWhere on the screen is it? Object 
detection combines the two techniques above to identify multiple objects in an image in real-time. Primarily developed for gaming but adaptable to various computer vision applications. EAL utilizes state-of-the-art machine learning models to enhance gaming experiences, accessibility, and automation.

## Core Philosophy

EasyAimLock aims to break digital barriers by providing powerful tools for accessibility, automation, and innovation through intelligent computer vision.

## Key Features

### Multiple Tracking Methods

- **AI Object Detection**: Real-time detection with YOLO, ONNX, and TensorRT models.
- **Pixel Box Tracker**: Tracks specific color patterns and shapes.
- **Template Matching**: Detects UI elements or specific images.
- **Minimap Awareness**: Provides tactical information based on minimap analysis.
- **Motion Sensing**: Action triggers based on pixel changes.

### Advanced Recoil Control

- Customizable 3-stage recoil control system.
- Speed Curve Editor for precision adjustments.
- Integrated Recoil Analyzer for visual fine-tuning.

### AI Model Training (Label Maker Pro)

- **Collect**: Capture or import image datasets.
- **Label**: Annotate objects with an intuitive UI.
- **Augment**: Enhance datasets with automatic augmentations.
- **Train**: Cloud or local model training.

### Extensive Customization

- User-friendly GUI with detailed settings control.
- Shareable settings (.esf files) and recoil curves.

### Hardware Compatibility

- Operates externally using the **Titan Two** hardware device.
- Compatible with PC and consoles via video capture.

### Community Driven

- Access community-shared AI models.
- Share and benefit from community recoil curves.

## How It Works

EAL operates externally without modifying game files:

1. **Video Feed**: Game footage captured externally.
2. **AI Analysis**: Real-time object detection and tracking.
3. **Input Calculation**: AI determines optimal controller inputs.
4. **Hardware Input**: Commands sent via Titan Two device.

## Minimum Hardware Requirements

- Windows PC or BOOTCAMP on MAC
- 80GB free HDD/SSD space
- Titan Two ConsoleTuner Device TITAN
- Remote Play or Capture Card (USB Options: CHEAP | BETTER | BEST)

### Important Performance Notes

- EAL works on any machine for basic tasks.
- For AI object tracking, an NVIDIA GPU (30 series or higher) is recommended to avoid poor FPS.
- Test with the free trial before purchasing.

### Capture Cards Known to Work

- **AverMedia**: Live Gamer MINI (GC311), Live Gamer ULTRA (GC553), Live Gamer HD 2 (GC570)
- **Elgato**: Game Capture HD60/4K Pro, HD60 X/4K, HD60 S, HD60 S+, Game Capture 4K60 Pro MK.2
- **Others**: Pengo 4K HDMI Grabber, Razer Ripsaw HD, Ezcap Live Gamer Raw

*Note: While EAL functions without a GPU, it becomes limited to color and template matching from Pixel Labs instead of AI models.*

## Installation

1. Run the provided **EasyInstaller.exe**.
2. Connect Titan Two and capture hardware.
3. Launch EAL via **Gtuner IV** software.
4. Configure settings using the GUI.

## Detailed Features

<details>
<summary><strong>üéØ Aim Controls</strong></summary>

- Custom detection zones.
- Variable speed and smooth aiming with Speed Curve Editor.
- Confidence threshold tuning.
- Friendly target avoidance.

</details>

<details>
<summary><strong>üí• Automated Actions</strong></summary>

- Auto Shoot and macro recording.
- Region-specific targeting.
- Motion-based triggers.

</details>

<details>
<summary><strong>üîß Weapon Management</strong></summary>

- Manage weapon profiles in CSV.
- Advanced anti-recoil.
- OCR-based weapon detection.

</details>

<details>
<summary><strong>‚öñÔ∏è AI Model Management</strong></summary>

- Load and manage different AI models.
- Encrypt custom models.
- Integrated model format converter.

</details>

<details>
<summary><strong>‚ú® Additional Tools</strong></summary>

- Match Tab for screen image triggers.
- Minimap tactical overlays.
- GUI and system customization.

</details>

## Disclaimer

**EasyAimLock.com provides computer vision tools "as is" to enhance your gaming experience. We make no warranties regarding functionality, compatibility, or suitability for any purpose, and we are not liable for any damages or violations resulting from their use. It is the user's responsibility to ensure that using our tools complies with the terms of service of the games they play. All usage must be ethical and comply with applicable laws and regulations. EasyAimLock.com is not affiliated with any game publishers or developers. By using our tools, you agree to these terms.**

### Hash Token

```text

