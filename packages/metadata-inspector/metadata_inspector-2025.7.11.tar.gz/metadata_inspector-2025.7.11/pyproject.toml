[build-system]
requires = ["flit_core >=3.2"]
build-backend = "flit_core.buildapi"

[project]
name = "metadata_inspector"
authors = [{name = "DKRZ, Clint", email = "freva@dkrz.de"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
               "Development Status :: 5 - Production/Stable",
               "Environment :: Console",
               "Intended Audience :: Developers",
               "Intended Audience :: Science/Research",
               "License :: OSI Approved :: BSD License",
               "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: 3.10",
                "Topic :: Scientific/Engineering :: Physics",
                "Topic :: Scientific/Engineering :: Atmospheric Science",

]
dynamic = ["version"]
description = "Inspect metadata of weather/climate datasets"
requires-python = ">=3.11"
dependencies = [
    "cftime",
    "dask[diagnostics]",
    "hurry.filesize",
    "h5netcdf",
    "netCDF4",
    "numpy>=1.20.3",
    "requests",
    "xarray",
    "s3fs",
    "fsspec",
    "zarr>3",
]
[project.optional-dependencies]
dev = ["flit", "tox"]
tests = [ "black",
            "pytest",
            "pandas",
            "mock",
            "numpy",
            "requests-mock",
            "pytest-env",
            "pytest-cov",
            "testpath",
            "flake8",
            "mypy",
            "types-mock",
            "types-PyYAML",
            "types-requests",
            "types-setuptools",
        ]

[project.urls]
Documentation = "https://github.com/freva-org/metadata-inspektor.git"
Issues = "https://github.com/freva-org/metadata-inspektor/issues"
Source = "https://github.com/freva-org/metadata-inspektor.git"
Home = "https://github.com/freva-org/metadata-inspektor.git"

[project.scripts]
metadata-inspector=  "metadata_inspector:cli"



[package-data]
metadata_inspector = ["py.typed"]

[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list = types, lint, test
[testenv]
parallel_show_output = false
[testenv:test]
deps = -e .[tests]

commands =
    python3 -m pytest -vv \
        --cov=./src/metadata_inspector --cov-report=html:coverage_report \
        --junitxml report.xml --cov-report xml \
        ./src/metadata_inspector/tests
        python3 -m coverage report

[testenv:docs]
deps = .[doc]
setenv =
    LC_ALL = C
    LANG = C
allowlist_externals = make
commands = make -C docs clean
           make -C docs html
[testenv:lint]
deps = .
       black
       isort
       flake8
commands =
    python -m isort --check --profile black -t py311 -l 79 src
    python -m flake8 src/metadata_inspector --count --max-complexity=15 --max-line-length=88 --statistics --doctests
[testenv:types]
deps = .
       mypy
       types-requests
       pytest-stub
commands = mypy --install-types --non-interactive
[testenv:release]
deps = git-python
       packaging
       tomli
       requests
commands = python3 release.py tag freva_deployment
[testenv:build]
deps = -e .
       pyinstaller
       cryptography
commands = pyinstaller --clean --noconfirm deploy-freva.spec
       """
