[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

[project]
name = "clangd"
dynamic = ["version"]
authors = [{name = "Dan Ilan"}]
license = { text = "Apache 2.0" }
description = "binaries for clangd, a clang-based C++ language server (LSP)"
readme = "README.md"
classifiers = [
        "Environment :: No Input/Output (Daemon)",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: Apache Software License",
        "Operating System :: OS Independent",
        "Programming Language :: C",
        "Programming Language :: C++",
        "Topic :: Software Development",
]

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
regex = '^(?P<value>\d+\.\d+\.\d+(\.[1-9]\d*)?)'
input = "clangd_version.txt"

[project.urls]
Documentation = "https://clangd.llvm.org/"
Source = "https://github.com/jmpfar/clangd-wheel"

[project.scripts]
"clangd" = "clangd:clangd"

[tool.scikit-build]
wheel.packages = ["clangd"]
wheel.py-api = "py2.py3"
cmake.version = ">=3.16.0"
ninja.version = ">=1.10.0"
cmake.verbose = true
logging.level = "DEBUG"

[tool.cibuildwheel]
# Super-verbose output for debugging purpose
build-verbosity = 3
# Set CMAKE_GENERATOR env var which is respected by scikit-build-core to use Ninja on all platforms
environment = "CMAKE_GENERATOR=Ninja"

# Testing commands for our wheels
before-test = [
    "git config --global user.name Name",
    "git config --global user.email foo@bar.com"
]
test-requires = ["pytest", "pytest-git"]
test-command = "pytest {package}/test"
