[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "alchemy-h8"
version = "0.1.3"
description = "Advanced SQLAlchemy extension with connection pooling, rate limiting, and security features"
readme = "CONNECTION_ARCHITECTURE.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Harut", email = "har.avetisyan2002@gmail.com"},
]
keywords = [
    "sqlalchemy",
    "database",
    "rate-limiting",
    "connection-pooling",
    "postgresql",
    "async"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = [
    # Core database dependencies
    "sqlalchemy>=2.0.41",
    "asyncpg>=0.30.0",
    "greenlet>=3.2.3",

    # Utility dependencies
    "pydantic>=2.11.7",
    "structlog>=25.4.0",
    "tenacity>=9.1.2",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.4.1",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=5.0.0",

    # Linting & Type checking
    "black>=24.4.0",
    "isort>=5.13.2",
    "mypy>=1.8.0",
    "flake8>=7.0.0",
    "sqlalchemy-stubs>=0.4",

    # Documentation
    "sphinx>=7.3.7",
    "sphinx-rtd-theme>=2.0.0",
]

test = [
    "pytest>=8.4.1",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=5.0.0",
]

[project.urls]
Documentation = "https://github.com/Harut8/alchemy_h8#readme"
Issues = "https://github.com/Harut8/alchemy_h8/issues"
Source = "https://github.com/Harut8/alchemy_h8"

[tool.hatch.build.targets.wheel]
packages = ["src/alchemy_h8"]

[tool.ruff]
# Exclude common directories that are typically not part of the source code or are generated by tools.
exclude = [
    "tests",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
]

# Set the maximum line length to 133 characters.
line-length = 500

# Define the number of spaces used for indentation, aligning with Black's style.
indent-width = 4

# The minimum Python version to target, e.g., when considering automatic code upgrades,
# like rewriting type annotations
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (F) and a subset of the pycodestyle (E)  codes by default.
# pycodestyle warnings (W)
# Activate Security Rules (S) to replace bandit
# Enable the isort rules (I) to replace isort
# flake8-bugbear (B)
# flake8-simplify (SIM)
select = [
    "C",  # mccabe rules
    "F",  # pyflakes rules
    "E",  # pycodestyle error rules
    "W",  # pycodestyle warning rules
    "B",  # flake8-bugbear rules
    "I",  # isort rules
]
ignore = ["B008"] # List any rules to be ignored, currently empty.
task-tags = ["HACK"]
# Allow auto-fixing of all enabled rules when using the `--fix` option.
fixable = ["ALL"]
unfixable = [] # Specify rules that cannot be auto-fixed, if any.

[tool.ruff.format]
# Enforce double quotes for strings, following Black's style.
quote-style = "double"

# Use spaces for indentation, in line with Black's formatting style.
indent-style = "space"

# Keep magic trailing commas, a feature of Black's formatting.
skip-magic-trailing-comma = false

# Automatically detect and use the appropriate line ending style.
line-ending = "auto"
[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel", "sqlalchemy.orm.DeclarativeBase"]
[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "pydantic.validator",
    "declared_attr",
    "expression",
    "comparator",
]
[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=alchemy_h8 --cov-report=term-missing --asyncio-mode=auto"
