[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sb-libs-py"
version = "0.1.0"
description = "Python 라이브러리성 코드 공유용"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    {name = "archmagece"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.3",
    "mypy>=1.16.1",
    "lxml>=5.2.0",
    "pre-commit>=4.2.0",
    "build>=1.2.2",
    "twine>=6.1.0",
]
docs = [
    "sphinx>=8.2.3",
    "sphinx-rtd-theme>=3.0.2",
]

[project.urls]
Homepage = "https://github.com/archmagece/scripton/sb-libs-py"
Repository = "https://github.com/archmagece/scripton/sb-libs-py"

[tool.hatch.build.targets.wheel]
packages = ["src/sb_libs"]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/sb_libs",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=10",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]