[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcpturbo-core"
version = "2.0.0"
description = "Multi-agent Communication Protocol - Core Components v2"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Federico Monfasani", email = "fmonfasani@gmail.com"}
]
keywords = ["mcpturbo", "agents", "mcp", "automation", "ai", "llm", "orchestration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
requires-python = ">=3.9"

dependencies = [
    # Core dependencies
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    
    # Async HTTP client for external APIs
    "aiohttp>=3.8.0",
    
    # Configuration and serialization
    "pyyaml>=6.0",
    
    # Enhanced error handling and retry logic
    "tenacity>=8.0.0",
    
    # Datetime utilities
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
]

# Testing dependencies
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",  # For testing HTTP clients
    "respx>=0.20.0",  # For mocking HTTP requests
]

# Documentation dependencies
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

# Performance monitoring
monitoring = [
    "prometheus-client>=0.16.0",
    "structlog>=23.0.0",
]

# All extras
all = [
    "mcpturbo-core[dev,test,docs,monitoring]"
]

[project.urls]
Homepage = "https://github.com/fmonfasani/mcpturbo"
Repository = "https://github.com/fmonfasani/mcpturbo"
Issues = "https://github.com/fmonfasani/mcpturbo/issues"
Documentation = "https://mcpturbo.dev/docs/core"
Changelog = "https://github.com/fmonfasani/mcpturbo/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["mcpturbo_core*"]

[tool.setuptools.package-data]
mcpturbo_core = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]  
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcpturbo_core"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aiohttp.*",
    "tenacity.*",
    "yaml.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--cov=mcpturbo_core",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "external: marks tests that require external services",
]

# Coverage configuration
[tool.coverage.run]
source = ["mcpturbo_core"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 configuration (in setup.cfg format)
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    "*.egg-info",
]