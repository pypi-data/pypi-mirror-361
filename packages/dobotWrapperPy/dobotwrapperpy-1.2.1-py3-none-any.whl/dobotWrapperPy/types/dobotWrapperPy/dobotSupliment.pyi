import enum

class Direction(enum.Enum):
    POSITIVE = 1
    NEGATIVE = -1

class Grid:
    row_size: int
    column_size: int
    current_x: int
    current_y: int
    def __init__(self, row_size: int, column_size: int) -> None: ...
    def increment_on_row(self) -> None: ...
    def increment_on_column(self) -> None: ...
    def decrement_on_row(self) -> None: ...
    def decrement_on_column(self) -> None: ...
    def calculate_offset(self, distance_between_pos: float, dir_x: Direction, dir_y: Direction) -> tuple[float, float]: ...

class DobotSupliment:
    @staticmethod
    def calculate_r(x: float, y: float, offset: float = 0) -> float: ...
    @staticmethod
    def calculate_pos_on_grid(grid: Grid, start_x: float, start_y: float, distance_between_pos: float, dir_x: Direction, dir_y: Direction) -> tuple[float, float]: ...
