Metadata-Version: 2.4
Name: txtify
Version: 0.0.2
Summary: A versatile Python tool to convert documents (PPTX, DOCX, PDF, XLSX) to plain text, ideal for providing context to AI code assistants like GitHub Copilot and Amazon CodeWhisperer.
Author-email: Ray Rada <rayrada1@gmail.com>, Anthony Furst <anthony.furst@afs.com>
License-Expression: MIT
License-File: LICENSE.txt
Keywords: ai,code generation,context,converter,document,documentation,excel,github copilot,llm,pdf,powerpoint,text,word
Requires-Python: >=3.8
Requires-Dist: click
Requires-Dist: docx2txt
Requires-Dist: pandas
Requires-Dist: pypdf2
Requires-Dist: python-pptx
Requires-Dist: xlrd
Description-Content-Type: text/markdown

txtify
txtify is a simple yet powerful command-line tool and Python library designed to effortlessly convert various document formats (PowerPoint, Word, PDF, and Excel) into clean, plain text files. It's ideal for extracting content for analysis, archiving, or providing crucial context to AI assistants like GitHub Copilot and Amazon CodeWhisperer, allowing them to better understand your project's domain knowledge, requirements, and existing documentation.

Table of Contents
‚ú® Features

ü§ñ Providing Context to AI Code Assistants

üöÄ Installation

üí° Usage (Command Line Interface)

Convert a Single File

Convert Multiple Files

Convert an Entire Directory

Specify an Output Directory

üìÇ Supported File Formats

üóÑÔ∏è Output

üìú License

‚ú® Features
Multi-Format Support: Converts .pptx (PowerPoint), .docx (Word), .pdf (Portable Document Format), and .xlsx (Excel) files.

Batch Processing: Convert multiple files or entire directories at once.

Clean Text Output: Extracts core textual content, making documents easily searchable and readable for both humans and AI.

Intuitive CLI: Simple command-line interface for quick and easy conversions.

Preserves Structure: When converting directories, the original folder structure is replicated in the output.

ü§ñ Providing Context to AI Code Assistants
One of the most powerful use cases for txtify is to prepare your project's non-code documentation (e.g., design documents, requirement specifications, meeting notes, data dictionaries) for consumption by AI code generation tools like GitHub Copilot, Amazon CodeWhisperer, or similar large language model (LLM) based assistants.

Why this is useful:

AI code assistants perform significantly better when they have more context about your project. By converting your .pptx, .docx, .pdf, and .xlsx files into plain .txt files within your project's codebase, you can:

Expand AI's Knowledge Base: Allow the AI to "read" and understand domain-specific terminology, project goals, architectural decisions, and detailed requirements that might otherwise be locked away in binary document formats.

Improve Code Relevance: The AI can generate more relevant and accurate code suggestions, function names, and comments by leveraging the textual context derived from your documentation.

Reduce Hallucinations: With more accurate information, the AI is less likely to "hallucinate" or generate code based on incorrect assumptions.

Seamless Integration: Simply place the converted .txt files in a directory accessible to your IDE (and thus, your AI assistant), and they can often automatically index and use this information.

Example Workflow:

Convert your documentation:

txtify ./docs_and_requirements/ -o ./ai_context/

Integrate with your project: Place the ai_context/ folder directly within your main project repository.

Let your AI assistant learn: Your AI assistant will now have access to the wealth of information contained in these plain text files, enabling it to provide more intelligent and context-aware code suggestions.

üöÄ Installation
You can install txtify directly from PyPI using pip:

pip install txtify

üí° Usage (Command Line Interface)
txtify can be used directly from your terminal.

Convert a Single File
Pass the path to your document as an argument:

txtify my_project_spec.docx

This will create a plain text file named my_project_spec.txt inside a new output/ directory by default.

Convert Multiple Files
You can specify several files at once:

txtify requirements.pdf architecture.pptx data_schema.xlsx

This will convert requirements.pdf, architecture.pptx, and data_schema.xlsx to their respective .txt versions in the output/ directory.

Convert an Entire Directory
Provide the path to a directory, and txtify will scan it (and its subdirectories) for all supported document types:

txtify project_documentation/

All convertible files found within project_documentation/ (and its subfolders) will be processed. The original directory structure will be mirrored in the output/ folder. For example, project_documentation/meetings/q1_notes.pptx would become output/project_documentation/meetings/q1_notes.txt.

Specify an Output Directory
Use the -o or --output option to choose a different location for your converted files:

txtify legacy_reports/ -o contextual_data/

This will save all converted text files from legacy_reports/ into the contextual_data/ directory.

üìÇ Supported File Formats
txtify currently supports conversion for the following file types:

PowerPoint Presentations: .pptx

Word Documents: .docx

PDF Documents: .pdf

Excel Workbooks: .xlsx (converted to a CSV-like plain text format, useful for data extraction)

üóÑÔ∏è Output
Converted files will always have a .txt extension. By default, they are saved to a directory named output/ in your current working directory. You can customize this output directory using the -o or --output option.

If you convert an entire directory, the relative path from the input directory will be preserved in the output directory.

üìú License
txtify is distributed under the terms of the MIT License.