#60 : What is a Partner? 
------------------------

Ticket reopened :blogref:`20130202` after reading 
`Two scoops of Django <https://django.2scoops.org/>`_.

We want :mod:`lino_xl.lib.contacts` to be flexible 
enough to handle (or be an extensible base for) any application 
which deals with "Partners": 
Organizations, Companies, Persons, 
Families, Customers, Providers, Households...

The crucial question is: do we need a common table of all "partners"

Partners
(1) the MTI parent or (2) a refering model?

Observations

- Legal documents like invoices, offers, contracts,...
  refer to a single and well identified "party" 
  or **Partner**. 
  We call them **Partner Documents**.
  
- The Partner is *either* a **Person** (*personne physique*) 
  *or* an **Organization** (*personne morale*)
  (or a Family, a Partner List or some other application-specific model, 
  but Person and Organization are the omnipresent examples).
  
  A Partner is *either* a Person *or* an Organization, not both.
  Edge case is for example a company who gets purchase invoices 
  from a freelancer (a physical person). 
  
- A minimal accounting application 
  does not require to differentiate between 
  "customers" and "providers": a Customer is a Partner who received 
  at least one Sales Document, a Provider is a Partner who "received" 
  at least one Purchase Document.
  Bigger applications may want to their own table for 
  customers and/or providers, containing things like payment terms
  
- A partner document, besides the mandatory (legally responsible), 
  partner, can have an optional second 
  field to designate a "contact person". 
  If the partner itself is a person, this field 
  usually remains empty.

- A Contact person is a Person that has a given Role in a given Company.
  
- Persons can have different Roles in different Companies, and 
  different contact information 
  (phone, gsm, email, postal address) per role.
  OTOH a Person can have many roles that do *not* have their own 
  contact information.
  
- The term "contact information" is rather general. 
  We should differentate:

  - a *mobile phone number* is usually assigned to a given 
    Person or Company. If a Person has different roles in different 
    Companies, she will usually still have the same mobild phone number.
  - a *phone number* is usually linked to a physical/geographical 
    place and a postal address.
  - Every Partner (be it a Person or a Company) 
    should have a known "official" address.
  - an *email address* can be used for different partners
  
- An application might need to specify 
  alternate contact information on a Partner Document. 
  For example a separate delivery address.
  A delivery address is a group of contact information, 
  including postal address, email, phone numbers)
  
  In that case we suggest to create a Partner for each 
  delivery address and to add a ForeignKey "parent" to 
  the Partner model.
  Applications can also add a slave table 
  "Delivery addresses" to the Partner detail.
  
- Applications might want to provide a table of Persons 
  who are not Partners. For example a bibliography database has a list 
  of Authors and might not even use the ``contacts`` 
  module. That's why we have PersonMixin and Born, and why the 
  contacts module doesn't itself define a concrete models for 
  Persons and Companies.

- It is not useful to have an alphabetic list that melts together 
  all Companies and Persons. But e.g. accountng applications 
  need a list of Partners. 
  
  Any Person, Company, Family or User can become a Partner 
  ("get a partner account"). A given Person, Company or Family 
  cannot have *more than one* Partner account.

Conclusions

The current :mod:`lino_xl.lib.contacts` reflects these ideas 
almost perfectly, except that some names are wrong 
and some details. To do:

- move PersonMixin to a new module lino.mixins.person since it 
  is available without the contacts module.
- Rename "Contact" to "Partner"
- Change Role.company(FK to Company) into Role.partner(FK to Partner)
- (later) rename "Role" to "Contact" and "RoleType" to "Role"
- (even later) 
