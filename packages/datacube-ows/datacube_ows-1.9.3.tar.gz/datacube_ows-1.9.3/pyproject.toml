# pyproject.toml
[tool.mypy]
python_version = "3.10"
allow_redefinition = true
enable_error_code = ["explicit-override"]
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
console_output_style = "times"

[tool.ruff]
src = ["datacube_ows", "docs", "tests", "integration_tests"]

[tool.ruff.lint]
select = [
    "A",  # Don't shadow built-ins
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "E",  # pycodestyle errors
    "EXE", # flake8-executable
    "I",  # isort
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "UP", # pyupgrade
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "T10", # flake8-debugger
]
ignore = [
    "B026",
    "E501",
    "RUF012",
    "RUF022",
]

[tool.ruff.lint.per-file-ignores]
# Stay close to the generated file for readthedocs, so ignore some rules.
"docs/conf.py" = ["A001", "E402"]
# Using pytest_namespace requires assignment before importing pytest.
"integration_tests/conftest.py" = ["E402"]
# Multiline string, no good place for adding a noqa.
"integration_tests/cfg/ows_test_cfg.py" = ["RUF001"]
# Third-party software, keep pristine.
"licenseheaders.py" = ["B", "C", "I", "SIM", "UP"]

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[build-system]
requires = ["setuptools>=65.5.1", "wheel>=0.38.1", "setuptools_scm[toml]>3.4"]

[tool.setuptools_scm]
write_to = "datacube_ows/_version.py"
fallback_version = "1.9.3"
