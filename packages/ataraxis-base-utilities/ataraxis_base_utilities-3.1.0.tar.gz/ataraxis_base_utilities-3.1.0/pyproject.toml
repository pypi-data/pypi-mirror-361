# Defines the build system used for the project. For pure-python projects, uses the hatchling build system, which is
# used internally by scikit-build for our C-extension projects. Therefore, there is clear continuity between our
# c-extension and pure-python projects.
[build-system]
requires = ["hatchling>=1,<2"]
build-backend = "hatchling.build"

# Project metadata section. Provides the general ID information about the project.
[project]
name = "ataraxis-base-utilities"
version = "3.1.0"
description = "Provides a minimalistic set of shared utility functions used to support most other Sun Lab projects."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
authors = [
    { name = "Ivan Kondratyev" },
]
maintainers = [
    { name = "Ivan Kondratyev", email = "ik278@cornell.edu" },
]

# The list of keywords that describe the project
keywords = ["utilities", "utility-classes", "console", "ataraxis", "logging"]

# Additional classifiers used by PyPI to group repositories.
classifiers = [
    # Development status
    "Development Status :: 5 - Production/Stable",
    # Intended audience and project topic
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    # License
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    # Supported Python Versions
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    # Supported Operating Systems
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X"
]

# Runtime project dependencies. This overlaps with 'condarun' optional list.
dependencies = [
    "click>=8,<9",
    "loguru>=0,<1",
    "numpy>=2,<3",
]

[project.urls]
Homepage = "https://github.com/Sun-Lab-NBB/ataraxis-base-utilities"
Documentation = "https://ataraxis-base-utilities-api-docs.netlify.app/"

# Specifies additional dependencies that can be installed alongside the main library. Also, this is the section that
# stores conda, condarun and noconda lists that facilitate setting up dependencies via conda where possible.
[project.optional-dependencies]

# Runtime dependencies known to be installable with conda for all development platforms
# (OSX ARM64, WIN AMD64, LIN AMD64). This specification is used by ataraxis-automation to resolve as many
# project dependencies with conda over pip as possible.
condarun = [
    "click>=8,<9",
    "loguru>=0,<1",
    "numpy>=2,<3",
]

# Dependencies known to be installable with conda for all development platforms (OSX ARM64, WIN AMD64, LIN AMD64).
conda = [
    # Testing
    "pytest>=8,<9",
    "pytest-cov>=6,<7",
    "pytest-xdist>=3,<4",

    # Coverage Reports
    "coverage>=7,<8",
    "junitparser>=4,<5",

    # Documentation
    "sphinx>=8,<9",
    "importlib_metadata>=8,<9",
    "sphinx-rtd-theme>=3,<4",
    "sphinx-click>=6,<7",
    "sphinx-autodoc-typehints>=3,<4",

    # Linting and Stub-generation
    "mypy>=1,<2",
    "ruff>=0,<1",

    # Building
    "hatchling>=1,<2",

    # Distribution
    "twine>=6,<7",
]

# Dependencies known to not be installable with conda for at least one supported development platform
# (OSX ARM64, WIN AMD64, LIN AMD64).
noconda = [
    # Tox
    "tox>=4,<5",
    "tox-uv>=1,<2",
    "uv>=0,<1",

    # Documentation
    "sphinx-rtd-dark-mode>=1,<2",

    # Building
    "build>=1,<2",

    # Automation
    "ataraxis-automation>=5,<6",
]

# A shorthand specification that installs tox and all packages required for development tasks. This specification can
# be used by developers to quickly install all necessary components for working on this project. Has to be installed
# from pip.
dev = [
    "ataraxis-base-utilities[conda]",
    "ataraxis-base-utilities[noconda]"
]

# In the future, callable scripts can be added here
[project.scripts]

# Specifies files that should not be included in the source-code distribution, but are also not part of gitignore.
[tool.hatch.build.targets.sdist]
exclude = [".github", "recipe"]

# Specifies the library structure.
[tool.hatch.build.targets.wheel]
packages = ["src/ataraxis_base_utilities"]  # Specifies the library root directory to distribute.

# Ruff Configuration.
[tool.ruff]
line-length = 120         # Maximum column length is set to 120 for this project.
indent-width = 4          # Same as black, indents are 4 spaces
target-version = "py311"  # Targets the lowest supported version of python
src = ["src"]             # The name of the source directory

# Excludes 'service' .py files, such as the sphinx configuration file from linting.
extend-exclude = ["conf.py"]

# Checks for all potential violations and uses the exclusions below to target-disable specific ones.
lint.select = ["ALL"]

# General ignore directives
lint.ignore = [
    "COM812",  # Conflicts with the formatter
    "ISC001",  # Conflicts with the formatter
    "PT001",   # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT023",   # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "D107",    # Project-specific, __init__ is documented inside the main class docstring where applicable
    "D205",    # Bugs out for file descriptions
    "PLW0603", # While global statement usage is not ideal, it greatly streamlines certain development patterns
]

# Additional formatting configurations
[tool.ruff.format]
quote-style = "double"             # Uses double quotes for strings
indent-style = "space"             # Uses space for indents
skip-magic-trailing-comma = false  # Like black, ignores trailing commas
line-ending = "auto"               # Automatically detects and standardizes line ending character

# Docstrings and comments' line length
[tool.ruff.lint.pycodestyle]
max-doc-length = 120  # Maximum documentation line length, the same as code

# Docstrings style
[tool.ruff.lint.pydocstyle]
convention = "google"

# Additional, file-specific 'ignore' directives
[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401", # Imported but unused
    "F403", # Wildcard imports
]

[tool.ruff.lint.isort]
case-sensitive = true              # Takes case into account when sorting imports
combine-as-imports = true          # Combines multiple "as" imports for the same package
force-wrap-aliases = true          # Wraps "as" imports so that each uses a separate line (after combining for package)
force-sort-within-sections = true  # Forces "as" and "from" imports for the same package to be close
length-sort = true                 # Places shorter imports first

# MyPy configuration section.
[tool.mypy]
disallow_untyped_defs = true  # Enforces function annotation
warn_unused_ignores = true    # Warns against using 'type: ignore' for packages that have type stubs available.
exclude = [
    "ataraxis-base-utilities-\\d+", # Ignores temporary folder created by setuptools when building the sdist
    "venv.*/",                      # Ignores virtual environments
    "build/",                       # Ignores the sdist directory
    "dist/",                        # Ignores the wheel directory
    "docs/",                        # Ignores the sphinx / doxygen directory
    "stubs/",                       # Ignores stubs directory (stubgen output target)
    "recipe/",                      # Ignores recipe directory (grayskull output target)
    "tests/",                       # Ignores the test directory.
]

# This is used by the 'test' tox tasks to aggregate coverage data produced during pytest runtimes.
[tool.coverage.paths]
source = ["src/", ".tox/*/lib/python*/site-packages/"]  # Maps coverage measured in site-packages to source files in src

# Same as above, specifies the output directory for the coverage .html report
[tool.coverage.html]
directory = "reports/coverage_html"
