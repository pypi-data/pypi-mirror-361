[1m========================================================================= test session starts =========================================================================[0m
platform darwin -- Python 3.13.5, pytest-8.4.0, pluggy-1.6.0 -- /Users/les/Projects/jinja2-async-environment/.venv/bin/python
cachedir: .pytest_cache
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
plugins: xdist-3.7.0, anyio-4.9.0, timeout-2.4.0, cov-6.2.1, mock-3.14.1, benchmark-5.1.0, asyncio-1.0.0
timeout: 300.0s
timeout method: thread
timeout func_only: False
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
[1mcollecting ... [0m[1mcollected 2 items                                                                                                                                                     [0m

tests/test_environment_additional.py::test_get_template_async_with_cache_miss [31mFAILED[0m[31m                                                                            [ 50%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_miss_and_globals [31mFAILED[0m[31m                                                                [100%][0m[31m[1m
ERROR: Coverage failure: total of 22 is less than fail-under=42
[0m

============================================================================== FAILURES ===============================================================================
[31m[1m_______________________________________________________________ test_get_template_async_with_cache_miss _______________________________________________________________[0m

self = <AsyncMock name='mock.load_async' id='4576082112'>, args = (<jinja2_async_environment.environment.AsyncEnvironment object at 0x110c16510>, 'template.html', {})
kwargs = {}, msg = "Expected 'load_async' to be called once. Called 0 times."

    [0m[94mdef[39;49;00m[90m [39;49;00m[92massert_called_once_with[39;49;00m([96mself[39;49;00m, /, *args, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""assert that the mock was called exactly once and that that call was[39;49;00m
    [33m    with the specified arguments."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.call_count == [94m1[39;49;00m:[90m[39;49;00m
            msg = ([33m"[39;49;00m[33mExpected [39;49;00m[33m'[39;49;00m[33m%s[39;49;00m[33m'[39;49;00m[33m to be called once. Called [39;49;00m[33m%s[39;49;00m[33m times.[39;49;00m[33m%s[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                   % ([96mself[39;49;00m._mock_name [95mor[39;49;00m [33m'[39;49;00m[33mmock[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
                      [96mself[39;49;00m.call_count,[90m[39;49;00m
                      [96mself[39;49;00m._calls_repr()))[90m[39;49;00m
>           [94mraise[39;49;00m [96mAssertionError[39;49;00m(msg)[90m[39;49;00m
[1m[31mE           AssertionError: Expected 'load_async' to be called once. Called 0 times.[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:990: AssertionError

[33mDuring handling of the above exception, another exception occurred:[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x110c16510>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_miss[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache miss."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the loader.load_async method[39;49;00m[90m[39;49;00m
        loader.load_async = AsyncMock(return_value=template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
        result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Verify the result and that load_async was called[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m result [95mis[39;49;00m template[90m[39;49;00m
>       loader.load_async.assert_called_once_with(async_env, [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, {})[90m[39;49;00m
[1m[31mE       AssertionError: Expected 'load_async' to be called once. Called 0 times.[0m

[1m[31mtests/test_environment_additional.py[0m:374: AssertionError
[31m[1m_________________________________________________________ test_get_template_async_with_cache_miss_and_globals _________________________________________________________[0m

self = <AsyncMock name='mock.load_async' id='4577005584'>
args = (<jinja2_async_environment.environment.AsyncEnvironment object at 0x110c02ad0>, 'template.html', {'var1': 'processed1', 'var2': 'processed2'}), kwargs = {}
msg = "Expected 'load_async' to be called once. Called 0 times."

    [0m[94mdef[39;49;00m[90m [39;49;00m[92massert_called_once_with[39;49;00m([96mself[39;49;00m, /, *args, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""assert that the mock was called exactly once and that that call was[39;49;00m
    [33m    with the specified arguments."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.call_count == [94m1[39;49;00m:[90m[39;49;00m
            msg = ([33m"[39;49;00m[33mExpected [39;49;00m[33m'[39;49;00m[33m%s[39;49;00m[33m'[39;49;00m[33m to be called once. Called [39;49;00m[33m%s[39;49;00m[33m times.[39;49;00m[33m%s[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                   % ([96mself[39;49;00m._mock_name [95mor[39;49;00m [33m'[39;49;00m[33mmock[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
                      [96mself[39;49;00m.call_count,[90m[39;49;00m
                      [96mself[39;49;00m._calls_repr()))[90m[39;49;00m
>           [94mraise[39;49;00m [96mAssertionError[39;49;00m(msg)[90m[39;49;00m
[1m[31mE           AssertionError: Expected 'load_async' to be called once. Called 0 times.[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:990: AssertionError

[33mDuring handling of the above exception, another exception occurred:[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x110c02ad0>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_miss_and_globals[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache miss and globals."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the loader.load_async method[39;49;00m[90m[39;49;00m
        loader.load_async = AsyncMock(return_value=template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the make_globals method[39;49;00m[90m[39;49;00m
        globals_dict = {[33m"[39;49;00m[33mvar1[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mvar2[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue2[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        processed_globals = {[33m"[39;49;00m[33mvar1[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mprocessed1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mvar2[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mprocessed2[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        async_env.make_globals = MagicMock(return_value=processed_globals)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async with globals[39;49;00m[90m[39;49;00m
        result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, globals_dict)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Verify the result and that load_async was called with processed globals[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m result [95mis[39;49;00m template[90m[39;49;00m
        async_env.make_globals.assert_called_once_with(globals_dict)[90m[39;49;00m
>       loader.load_async.assert_called_once_with(async_env, [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, processed_globals)[90m[39;49;00m
[1m[31mE       AssertionError: Expected 'load_async' to be called once. Called 0 times.[0m

[1m[31mtests/test_environment_additional.py[0m:406: AssertionError
=========================================================================== tests coverage ============================================================================
__________________________________________________________ coverage: platform darwin, python 3.13.5-final-0 ___________________________________________________________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          56     29    48%
jinja2_async_environment/compiler.py        393    334    15%
jinja2_async_environment/environment.py     147     99    33%
jinja2_async_environment/loaders.py         320    252    21%
-------------------------------------------------------------
TOTAL                                       916    714    22%
[31m[1mFAIL Required test coverage of 42% not reached. Total coverage: 22.05%
[0m[36m[1m======================================================================= short test summary info =======================================================================[0m
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_miss[0m - AssertionError: Expected 'load_async' to be called once. Called 0 times.
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_miss_and_globals[0m - AssertionError: Expected 'load_async' to be called once. Called 0 times.
[31m========================================================================== [31m[1m2 failed[0m[31m in 0.77s[0m[31m ==========================================================================[0m
