[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastmcp-mysql"
version = "0.1.2"
description = "FastMCP server for MySQL database operations"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "박제권(Jae Kwon Park)", email = "jaypark@gmail.com" },
]
keywords = ["mcp", "mysql", "database", "fastmcp", "ai", "llm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "fastmcp>=0.1.0",
    "aiomysql>=0.2.0",
    "pydantic>=2.0",
    "pydantic-settings>=2.0",
    "python-dotenv>=1.0.0",
    "sqlparse>=0.4.0",
    "cachetools>=5.3.0",
    "numpy>=1.24.0",
]

[project.urls]
"Homepage" = "https://github.com/jinto/fastmcp-mysql"
"Bug Reports" = "https://github.com/jinto/fastmcp-mysql/issues"
"Source" = "https://github.com/jinto/fastmcp-mysql"

[project.scripts]
fastmcp-mysql = "fastmcp_mysql.__main__:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
    "pytest-mock>=3.10",
]

[tool.hatch.version]
path = "src/fastmcp_mysql/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/fastmcp_mysql"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=fastmcp_mysql --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/fastmcp_mysql"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "W",    # pycodestyle warnings
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
]
ignore = ["E501", "SIM117", "SIM105", "SIM102", "E722"]  # line too long, nested with statements, try-except-pass, nested if, bare except

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true
ignore_missing_imports = true

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.2",
]
