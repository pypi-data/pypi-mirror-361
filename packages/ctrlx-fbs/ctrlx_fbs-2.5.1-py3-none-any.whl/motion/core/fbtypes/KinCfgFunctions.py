# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# configuration for specific functions of this axis
class KinCfgFunctions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KinCfgFunctions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsKinCfgFunctions(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # KinCfgFunctions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # configuration of monitoring of the safe limited speed in the drive by the motion kernel
    # KinCfgFunctions
    def KinCfgDriveSls(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from motion.core.fbtypes.KinCfgDriveSLS import KinCfgDriveSLS
            obj = KinCfgDriveSLS()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # configuration of motion kernel kinematics function 'belt synchronization'
    # KinCfgFunctions
    def KinCfgBeltSyncAll(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from motion.core.fbtypes.KinCfgBeltSyncAll import KinCfgBeltSyncAll
            obj = KinCfgBeltSyncAll()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def KinCfgFunctionsStart(builder): builder.StartObject(2)
def Start(builder):
    return KinCfgFunctionsStart(builder)
def KinCfgFunctionsAddKinCfgDriveSls(builder, kinCfgDriveSls): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(kinCfgDriveSls), 0)
def AddKinCfgDriveSls(builder, kinCfgDriveSls):
    return KinCfgFunctionsAddKinCfgDriveSls(builder, kinCfgDriveSls)
def KinCfgFunctionsAddKinCfgBeltSyncAll(builder, kinCfgBeltSyncAll): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(kinCfgBeltSyncAll), 0)
def AddKinCfgBeltSyncAll(builder, kinCfgBeltSyncAll):
    return KinCfgFunctionsAddKinCfgBeltSyncAll(builder, kinCfgBeltSyncAll)
def KinCfgFunctionsEnd(builder): return builder.EndObject()
def End(builder):
    return KinCfgFunctionsEnd(builder)
import motion.core.fbtypes.KinCfgBeltSyncAll
import motion.core.fbtypes.KinCfgDriveSLS
try:
    from typing import Optional
except:
    pass

class KinCfgFunctionsT(object):

    # KinCfgFunctionsT
    def __init__(self):
        self.kinCfgDriveSls = None  # type: Optional[motion.core.fbtypes.KinCfgDriveSLS.KinCfgDriveSLST]
        self.kinCfgBeltSyncAll = None  # type: Optional[motion.core.fbtypes.KinCfgBeltSyncAll.KinCfgBeltSyncAllT]

    @classmethod
    def InitFromBuf(cls, buf, pos):
        kinCfgFunctions = KinCfgFunctions()
        kinCfgFunctions.Init(buf, pos)
        return cls.InitFromObj(kinCfgFunctions)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, kinCfgFunctions):
        x = KinCfgFunctionsT()
        x._UnPack(kinCfgFunctions)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.kinCfgDriveSls == other.kinCfgDriveSls and \
            self.kinCfgBeltSyncAll == other.kinCfgBeltSyncAll

    # KinCfgFunctionsT
    def _UnPack(self, kinCfgFunctions):
        if kinCfgFunctions is None:
            return
        if kinCfgFunctions.KinCfgDriveSls() is not None:
            self.kinCfgDriveSls = motion.core.fbtypes.KinCfgDriveSLS.KinCfgDriveSLST.InitFromObj(kinCfgFunctions.KinCfgDriveSls())
        if kinCfgFunctions.KinCfgBeltSyncAll() is not None:
            self.kinCfgBeltSyncAll = motion.core.fbtypes.KinCfgBeltSyncAll.KinCfgBeltSyncAllT.InitFromObj(kinCfgFunctions.KinCfgBeltSyncAll())

    # KinCfgFunctionsT
    def Pack(self, builder):
        if self.kinCfgDriveSls is not None:
            kinCfgDriveSls = self.kinCfgDriveSls.Pack(builder)
        if self.kinCfgBeltSyncAll is not None:
            kinCfgBeltSyncAll = self.kinCfgBeltSyncAll.Pack(builder)
        KinCfgFunctionsStart(builder)
        if self.kinCfgDriveSls is not None:
            KinCfgFunctionsAddKinCfgDriveSls(builder, kinCfgDriveSls)
        if self.kinCfgBeltSyncAll is not None:
            KinCfgFunctionsAddKinCfgBeltSyncAll(builder, kinCfgBeltSyncAll)
        kinCfgFunctions = KinCfgFunctionsEnd(builder)
        return kinCfgFunctions
