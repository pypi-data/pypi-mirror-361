Metadata-Version: 2.4
Name: kworker
Version: 0.1.2
Summary: Асинхронный клиент для взаимодействия с закрытым API kwork.ru
Author-email: tinokil <zemedeuk@gmail.com>
Maintainer-email: tinokil <zemedeuk@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/Tinokil/kworker
Project-URL: Bug Reports, https://github.com/Tinokil/kworker/issues
Project-URL: Repository, https://github.com/Tinokil/kworker
Project-URL: Changelog, https://github.com/Tinokil/kworker/blob/main/CHANGELOG.md
Project-URL: Releases, https://github.com/Tinokil/kworker/releases
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Framework :: Pydantic
Classifier: Framework :: Pydantic :: 2
Classifier: Framework :: AsyncIO
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: aiohttp>=3.12.0
Requires-Dist: aiohttp-socks>=0.10.0
Requires-Dist: pydantic>=2.11.0

# kworker

[![PyPI version](https://badge.fury.io/py/kworker.svg)](https://badge.fury.io/py/kworker)
[![Python versions](https://img.shields.io/pypi/pyversions/kworker.svg)](https://pypi.org/project/kworker/)
[![License](https://img.shields.io/pypi/l/kworker.svg)](https://pypi.org/project/kworker/)
[![GitHub stars](https://img.shields.io/github/stars/Tinokil/kworker.svg)](https://github.com/Tinokil/kworker/stargazers)
[![GitHub release date](https://img.shields.io/github/release-date/Tinokil/kworker.svg)](https://github.com/Tinokil/kworker/releases)


## Зачем нужен kworker
Предоставить удобное взаимодействие с API фриланс биржи kwork.ru

## Как установить kworker
`python -m pip install kworker`

## Начало работы с kworker
```python
import asyncio
from kworker import KworkAPI

async def main():
    try:
        client = KworkAPI(login="example@email.com", password="123456", phone_last='1234')
        # Получение информации о себе
        me = await client.get_me()
        print(f"Авторизован: {me.username} (ID: {me.id})")
        # Отправка своего запрос
        await client.request(method="post", api_method="user", id="10101", token=await client.token)
    finally:
        await client.close()

asyncio.run(main())
```

## Поддержка  
- **Баги и предложения**: [GitHub Issues](https://github.com/Tinokil/kworker/issues)  
- **Telegram**: [@maaks11](https://t.me/maaks11)
