# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, performs a Codacy security scan
# and integrates the results with the
# GitHub Advanced Security code scanning feature.  For more information on
# the Codacy security scan action usage and parameters, see
# https://github.com/codacy/codacy-analysis-cli-action.
# For more information on Codacy Analysis CLI in general, see
# https://github.com/codacy/codacy-analysis-cli.

name: Codacy Security Scan

on:
  push:
    branches: [ "main" ] # Adjusted to your branches
  pull_request:
    branches: [ "main" ] # Adjusted to your branches
  schedule:
    - cron: '42 1 * * 2'

permissions:
  contents: read
  security-events: write

jobs:
  codacy-security-scan:
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Using a version tag

      # This step is NOT from their example and was specific to your earlier workflow.
      # It's generally not needed as Codacy handles its own tool images.
      # - name: Verify Docker images
      #   run: |
      #     docker pull codacy/codacy-eslint:5.9.1 || exit 1
      #     docker pull codacy/codacy-jackson-linter:5.2.1 || exit 1

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@v4.4.5 # Using a version tag
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }} # Keep if you use project tokens
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          # Optional: Use if you want the step to pass regardless of issue count,
          # deferring failure to GitHub Code Scanning.
          # However, this might mask the ESLint tool failure if it doesn't cause a non-zero exit from the CLI itself.
          max-allowed-issues: 2147483647

      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v3 # Using a version tag
        with:
          sarif_file: results.sarif
