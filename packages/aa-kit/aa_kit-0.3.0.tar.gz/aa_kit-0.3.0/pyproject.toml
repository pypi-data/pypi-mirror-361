[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aa-kit"
version = "0.3.0"
description = "The Universal AI Agent Framework for the MCP Era"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Harsh Joshi", email = "harsh.joshi.pth@gmail.com"}
]
maintainers = [
    {name = "Harsh Joshi", email = "harsh.joshi.pth@gmail.com"}
]
keywords = ["ai", "agents", "mcp", "llm", "openai", "anthropic", "framework"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.8.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "uvicorn>=0.20.0",
    "fastapi>=0.95.0",
    "websockets>=11.0.0",
    "redis>=4.5.0",
    "aiosqlite>=0.19.0",
    "asyncpg>=0.28.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.0.260",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-mermaid2-plugin>=0.6.0",
]
all = [
    "aa-kit[dev,docs]"
]

[project.urls]
"Homepage" = "https://aa-kit.dev"
"Documentation" = "https://docs.aa-kit.dev"
"Repository" = "https://github.com/josharsh/aa-kit"
"Bug Reports" = "https://github.com/josharsh/aa-kit/issues"
"Funding" = "https://github.com/sponsors/josharsh"

[project.scripts]
aa-kit = "aakit.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["aakit*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["aakit"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async",
]