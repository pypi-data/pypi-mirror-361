fn test_initialize() {
    let s = set([1, 1, 2, 3])

    assert_eq($s.len(), 3)
    assert(1 in $s)
    assert($s.to_list(), [1, 2, 3])
}

fn test_curd() {
    let s = {1, 2, 3}

    $s.add(4)
    assert_eq(#s, 4)
    assert(4 in $s)

    $s.remove(2)
    assert_eq(#s, 3)
    assert(2 in $s)

    $s.clear()
    assert($s.is_empty())
}

fn test_operate() {
    let a = {1, 2, 3}
    let b = {3, 4, 5}

    echo $a.union($b)       // {1, 2, 3, 4, 5}
    echo $a.intersect($b)   // {3}
    echo $a.difference($b)  // {1, 2}

    echo $a | $b  // {1, 2, 3, 4, 5}
    echo $a & $b  // {3}
    echo $a / $b  // {1, 2}

    assert !$a.is_subset({1, 2}) // false
    assert $a.is_subset({1, 2, 3, 4}) // true
    assert $a.is_superset({1, 2}) // true
}