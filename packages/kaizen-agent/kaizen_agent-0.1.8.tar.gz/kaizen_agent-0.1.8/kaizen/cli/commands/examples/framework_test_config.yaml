# Framework-aware test configuration example
name: "LlamaIndex Agent Test"
file_path: "llamaindex_agent.py"
language: "python"
framework: "llamaindex"
description: "Test configuration for LlamaIndex-based agent with framework specification"

# Agent configuration
agent:
  module: "llamaindex_agent"
  class: "LlamaIndexAgent"
  method: "process_query"

# Test configuration
auto_fix: false
create_pr: false
max_retries: 2

# Test steps
steps:
  - name: "Test LlamaIndex query processing"
    input:
      input: 
        - name: query
          type: string
          value: "What is the capital of France?"
        - name: context
          type: string
          value: "France is a country in Europe."
      method: "process_query"
    expected_output:
      contains: "Paris"
    description: "Test the LlamaIndex agent's ability to process queries"
    timeout: 60

  - name: "Test framework-specific features"
    input:
      input:
        - name: operation
          type: string
          value: "retrieve_documents"
        - name: query
          type: string
          value: "machine learning"
      method: "retrieve_documents"
    expected_output:
      status: "success"
    description: "Test LlamaIndex-specific document retrieval functionality"
    timeout: 45

# Evaluation criteria
evaluation:
  evaluation_targets:
    - name: accuracy
      source: return
      criteria: "The response should be accurate and relevant to the query"
      weight: 0.7
    - name: framework_compliance
      source: return
      criteria: "The response should follow LlamaIndex patterns and conventions"
      weight: 0.3
  settings:
    timeout: 60
    temperature: 0.1

# Dependencies specific to LlamaIndex
dependencies:
  - "llama_index"
  - "llama_index.llms"
  - "llama_index.embeddings"

# Files that might need fixing
files_to_fix:
  - "llamaindex_agent.py"
  - "requirements.txt" 