# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: interest_rate_swap.proto
# Protobuf Python Version: 5.29.5
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    5,
    '',
    'interest_rate_swap.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import business_days_pb2 as business__days__pb2
import currencies_pb2 as currencies__pb2
import date_pb2 as date__pb2
import daycount_conventions_pb2 as daycount__conventions__pb2
import decimal_pb2 as decimal__pb2
import metadata_pb2 as metadata__pb2
import period_pb2 as period__pb2
import rate_indices_pb2 as rate__indices__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18interest_rate_swap.proto\x12@tf_quant_finance.experimental.pricing_platform.instrument_protos\x1a\x13\x62usiness_days.proto\x1a\x10\x63urrencies.proto\x1a\ndate.proto\x1a\x1a\x64\x61ycount_conventions.proto\x1a\rdecimal.proto\x1a\x0emetadata.proto\x1a\x0cperiod.proto\x1a\x12rate_indices.proto\"\xc7\x07\n\x0b\x46loatingLeg\x12\\\n\x08\x63urrency\x18\x01 \x01(\x0e\x32J.tf_quant_finance.experimental.pricing_platform.instrument_protos.Currency\x12\x62\n\x10\x63oupon_frequency\x18\x02 \x01(\x0b\x32H.tf_quant_finance.experimental.pricing_platform.instrument_protos.Period\x12\x62\n\x0fnotional_amount\x18\x03 \x01(\x0b\x32I.tf_quant_finance.experimental.pricing_platform.instrument_protos.Decimal\x12q\n\x13\x64\x61ycount_convention\x18\x04 \x01(\x0e\x32T.tf_quant_finance.experimental.pricing_platform.instrument_protos.DayCountConvention\x12x\n\x17\x62usiness_day_convention\x18\x05 \x01(\x0e\x32W.tf_quant_finance.experimental.pricing_platform.instrument_protos.BusinessDayConvention\x12\x17\n\x0fsettlement_days\x18\x06 \x01(\x05\x12\x65\n\rbank_holidays\x18\x07 \x01(\x0e\x32N.tf_quant_finance.experimental.pricing_platform.instrument_protos.BankHolidays\x12\x61\n\x0freset_frequency\x18\x08 \x01(\x0b\x32H.tf_quant_finance.experimental.pricing_platform.instrument_protos.Period\x12g\n\x12\x66loating_rate_type\x18\t \x01(\x0b\x32K.tf_quant_finance.experimental.pricing_platform.instrument_protos.RateIndex\x12Y\n\x06spread\x18\n \x01(\x0b\x32I.tf_quant_finance.experimental.pricing_platform.instrument_protos.Decimal\"\xfc\x05\n\x08\x46ixedLeg\x12\\\n\x08\x63urrency\x18\x01 \x01(\x0e\x32J.tf_quant_finance.experimental.pricing_platform.instrument_protos.Currency\x12\x62\n\x10\x63oupon_frequency\x18\x02 \x01(\x0b\x32H.tf_quant_finance.experimental.pricing_platform.instrument_protos.Period\x12\x62\n\x0fnotional_amount\x18\x03 \x01(\x0b\x32I.tf_quant_finance.experimental.pricing_platform.instrument_protos.Decimal\x12q\n\x13\x64\x61ycount_convention\x18\x04 \x01(\x0e\x32T.tf_quant_finance.experimental.pricing_platform.instrument_protos.DayCountConvention\x12x\n\x17\x62usiness_day_convention\x18\x05 \x01(\x0e\x32W.tf_quant_finance.experimental.pricing_platform.instrument_protos.BusinessDayConvention\x12\x17\n\x0fsettlement_days\x18\x06 \x01(\x05\x12\x65\n\rbank_holidays\x18\x07 \x01(\x0e\x32N.tf_quant_finance.experimental.pricing_platform.instrument_protos.BankHolidays\x12]\n\nfixed_rate\x18\x08 \x01(\x0b\x32I.tf_quant_finance.experimental.pricing_platform.instrument_protos.Decimal\"\xd9\x01\n\x07SwapLeg\x12\x65\n\x0c\x66loating_leg\x18\x01 \x01(\x0b\x32M.tf_quant_finance.experimental.pricing_platform.instrument_protos.FloatingLegH\x00\x12_\n\tfixed_leg\x18\x02 \x01(\x0b\x32J.tf_quant_finance.experimental.pricing_platform.instrument_protos.FixedLegH\x00\x42\x06\n\x04type\"\xba\x05\n\x10InterestRateSwap\x12^\n\x0e\x65\x66\x66\x65\x63tive_date\x18\x02 \x01(\x0b\x32\x46.tf_quant_finance.experimental.pricing_platform.instrument_protos.Date\x12]\n\rmaturity_date\x18\x03 \x01(\x0b\x32\x46.tf_quant_finance.experimental.pricing_platform.instrument_protos.Date\x12\\\n\x08\x63urrency\x18\x04 \x01(\x0e\x32J.tf_quant_finance.experimental.pricing_platform.instrument_protos.Currency\x12^\n\x0breceive_leg\x18\x05 \x01(\x0b\x32I.tf_quant_finance.experimental.pricing_platform.instrument_protos.SwapLeg\x12Z\n\x07pay_leg\x18\x06 \x01(\x0b\x32I.tf_quant_finance.experimental.pricing_platform.instrument_protos.SwapLeg\x12\x65\n\rbank_holidays\x18\x07 \x01(\x0e\x32N.tf_quant_finance.experimental.pricing_platform.instrument_protos.BankHolidays\x12\x66\n\x08metadata\x18\x08 \x01(\x0b\x32T.tf_quant_finance.experimental.pricing_platform.instrument_protos.InstrumentMetadatab\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'interest_rate_swap_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_FLOATINGLEG']._serialized_start=239
  _globals['_FLOATINGLEG']._serialized_end=1206
  _globals['_FIXEDLEG']._serialized_start=1209
  _globals['_FIXEDLEG']._serialized_end=1973
  _globals['_SWAPLEG']._serialized_start=1976
  _globals['_SWAPLEG']._serialized_end=2193
  _globals['_INTERESTRATESWAP']._serialized_start=2196
  _globals['_INTERESTRATESWAP']._serialized_end=2894
# @@protoc_insertion_point(module_scope)
