# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SafeAreasExecErrReactionSettings(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SafeAreasExecErrReactionSettings()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSafeAreasExecErrReactionSettings(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SafeAreasExecErrReactionSettings
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SafeAreasExecErrReactionSettings
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 1

def SafeAreasExecErrReactionSettingsStart(builder): builder.StartObject(1)
def Start(builder):
    return SafeAreasExecErrReactionSettingsStart(builder)
def SafeAreasExecErrReactionSettingsAddType(builder, type): builder.PrependInt8Slot(0, type, 1)
def AddType(builder, type):
    return SafeAreasExecErrReactionSettingsAddType(builder, type)
def SafeAreasExecErrReactionSettingsEnd(builder): return builder.EndObject()
def End(builder):
    return SafeAreasExecErrReactionSettingsEnd(builder)

class SafeAreasExecErrReactionSettingsT(object):

    # SafeAreasExecErrReactionSettingsT
    def __init__(self):
        self.type = 1  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        safeAreasExecErrReactionSettings = SafeAreasExecErrReactionSettings()
        safeAreasExecErrReactionSettings.Init(buf, pos)
        return cls.InitFromObj(safeAreasExecErrReactionSettings)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, safeAreasExecErrReactionSettings):
        x = SafeAreasExecErrReactionSettingsT()
        x._UnPack(safeAreasExecErrReactionSettings)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.type == other.type

    # SafeAreasExecErrReactionSettingsT
    def _UnPack(self, safeAreasExecErrReactionSettings):
        if safeAreasExecErrReactionSettings is None:
            return
        self.type = safeAreasExecErrReactionSettings.Type()

    # SafeAreasExecErrReactionSettingsT
    def Pack(self, builder):
        SafeAreasExecErrReactionSettingsStart(builder)
        SafeAreasExecErrReactionSettingsAddType(builder, self.type)
        safeAreasExecErrReactionSettings = SafeAreasExecErrReactionSettingsEnd(builder)
        return safeAreasExecErrReactionSettings
