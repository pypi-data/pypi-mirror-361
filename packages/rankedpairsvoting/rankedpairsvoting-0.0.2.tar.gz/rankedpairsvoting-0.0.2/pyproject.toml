[build-system]
requires = ["setuptools >= 77.0.3"]
build-backend = "setuptools.build_meta"

[project]
name = "rankedpairsvoting"
version = "0.0.2"
authors = [
  { name="Daniel Navarro Puche", email="daniel.np.contact+gh@gmail.com" },
]
description = "A Python implementation of the Ranked Pairs voting method (Tideman's method)"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
keywords = ["voting", "election", "condorcet", "ranked-pairs", "tideman", "social-choice"]
license = "MIT"
license-files = ["LICENSE"]

[project.urls]
Homepage = "https://github.com/hakai-vulpes/ranked-pairs-voting"
Documentation = "https://github.com/hakai-vulpes/ranked-pairs-voting/blob/main/README.md"
Repository = "https://github.com/hakai-vulpes/ranked-pairs-voting.git"
Issues = "https://github.com/hakai-vulpes/ranked-pairs-voting/issues"
Changelog = "https://github.com/hakai-vulpes/ranked-pairs-voting/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]

[tool.coverage.run]
source = ["rankedpairsvoting"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"