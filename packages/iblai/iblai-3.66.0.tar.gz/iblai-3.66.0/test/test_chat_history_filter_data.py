# coding: utf-8

"""
    ibl-data-manager

    API for iblai

    The version of the OpenAPI document: 3.6.0-ai-plus
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iblai.models.chat_history_filter_data import ChatHistoryFilterData

class TestChatHistoryFilterData(unittest.TestCase):
    """ChatHistoryFilterData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatHistoryFilterData:
        """Test ChatHistoryFilterData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChatHistoryFilterData`
        """
        model = ChatHistoryFilterData()
        if include_optional:
            return ChatHistoryFilterData(
                topics = [
                    iblai.models.topic_model.TopicModel(
                        name = '', )
                    ],
                date_ranges = [
                    iblai.models.date_range.DateRange(
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
                sentiment = [
                    ''
                    ]
            )
        else:
            return ChatHistoryFilterData(
                topics = [
                    iblai.models.topic_model.TopicModel(
                        name = '', )
                    ],
        )
        """

    def testChatHistoryFilterData(self):
        """Test ChatHistoryFilterData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
