Metadata-Version: 2.4
Name: django-forms-ext
Version: 1.2.1
Summary: Extensions for Django's Forms.
Home-page: http://github.com/imtapps/django-forms-ext
Author: IMT Software Services
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Framework :: Django :: 1.11
Classifier: Framework :: Django :: 2.2
Classifier: Framework :: Django :: 3.2
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Django :: 5.2
License-File: LICENSE
Requires-Dist: django<6,>=1.11
Requires-Dist: six<2,>=1.10.0
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: summary



These are extensions for Django's forms.

Currently this contains the following:

Fields
=========

- ForeignKeyChoiceField

    When you have a formset that has a foreign key, Django will
    fire off a new (identical) query to build the choices for
    that field for each form in the formset by default. Using this
    field will allow you to run the query once for the choices and
    re-use that queryset for each form in the formset.

- CommaSeparatedField

    Django has a comma separated integer field, but not just strings.
    Stupid, I know... we created one for use with strings

- QuerysetChoiceField

    When you want to build a select box with a queryset but don't want
    a model instance when saving, use this thing.

- USSocialSecurityNumberField

    Check that a field conforms to the US Social Security number format.
    Includes evaluation of invalid number ranges, and invalid pattern rules.
    Permits Lexis Nexis test SSNs.

Views
=========
- FormSetView

    Django 1.3's generic views do not include a FormSet view. That's
    what this is.
