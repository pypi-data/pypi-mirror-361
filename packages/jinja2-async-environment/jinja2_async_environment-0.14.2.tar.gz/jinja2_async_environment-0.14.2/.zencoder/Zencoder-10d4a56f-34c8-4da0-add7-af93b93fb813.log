[1m========================================================================= test session starts =========================================================================[0m
platform darwin -- Python 3.13.5, pytest-8.4.1, pluggy-1.6.0 -- /Users/les/Projects/jinja2-async-environment/.venv/bin/python
cachedir: .pytest_cache
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
plugins: xdist-3.7.0, anyio-4.9.0, timeout-2.4.0, cov-6.2.1, mock-3.14.1, benchmark-5.1.0, asyncio-1.0.0
timeout: 300.0s
timeout method: thread
timeout func_only: False
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
[1mcollecting ... [0m[1mcollected 5 items                                                                                                                                                     [0m

tests/test_escape_filter.py::TestEscapeFilter::test_explicit_escape_filter [31mFAILED[0m[31m                                                                               [ 20%][0m
tests/test_escape_filter.py::TestEscapeFilter::test_autoescape [31mFAILED[0m[31m                                                                                           [ 40%][0m
tests/test_escape_filter.py::TestEscapeFilter::test_multiple_escapes [31mFAILED[0m[31m                                                                                     [ 60%][0m
tests/test_escape_filter.py::TestEscapeFilter::test_nested_expression_escape [31mFAILED[0m[31m                                                                             [ 80%][0m
tests/test_escape_filter.py::TestEscapeFilter::test_escape_with_non_string_values [31mFAILED[0m[31m                                                                        [100%][0m[31m[1m
ERROR: Coverage failure: total of 26 is less than fail-under=42
[0m

============================================================================== FAILURES ===============================================================================
[31m[1m____________________________________________________________ TestEscapeFilter.test_explicit_escape_filter _____________________________________________________________[0m

self = <tests.test_escape_filter.TestEscapeFilter object at 0x10ad5dd10>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10ad6ae40>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_explicit_escape_filter[39;49;00m([96mself[39;49;00m, environment: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test that the escape filter works when explicitly used."""[39;49;00m[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33mescape_test.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_escape_filter.py[0m:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:119: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:193: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:264: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:113: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:42: in _generate
    [0mgenerator = [96mself[39;49;00m.code_generator_class([90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:106: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m([90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10ad6be00>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10ad6ae40>, name = 'escape_test.html', filename = 'escape_test.html'
stream = <_io.StringIO object at 0x10ad85a80>, defer_init = False, optimized = True

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__init__[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        environment: [33m"[39;49;00m[33mEnvironment[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
        name: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        filename: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        stream: t.Optional[t.TextIO] = [94mNone[39;49;00m,[90m[39;49;00m
        defer_init: [96mbool[39;49;00m = [94mFalse[39;49;00m,[90m[39;49;00m
        optimized: [96mbool[39;49;00m = [94mTrue[39;49;00m,[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
        [94mif[39;49;00m stream [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            stream = StringIO()[90m[39;49;00m
        [96mself[39;49;00m.environment = environment[90m[39;49;00m
        [96mself[39;49;00m.name = name[90m[39;49;00m
        [96mself[39;49;00m.filename = filename[90m[39;49;00m
        [96mself[39;49;00m.stream = stream[90m[39;49;00m
        [96mself[39;49;00m.created_block_context = [94mFalse[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.defer_init = defer_init[90m[39;49;00m
        [96mself[39;49;00m.optimizer: t.Optional[Optimizer] = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m optimized:[90m[39;49;00m
            [96mself[39;49;00m.optimizer = Optimizer(environment)[90m[39;49;00m
    [90m[39;49;00m
        [90m# aliases for imports[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.import_aliases: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# a registry for all blocks.  Because blocks are moved out[39;49;00m[90m[39;49;00m
        [90m# into the global python scope they are registered here[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.blocks: t.Dict[[96mstr[39;49;00m, nodes.Block] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# the number of extends statements so far[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.extends_so_far = [94m0[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# some templates have a rootlevel extends.  In this case we[39;49;00m[90m[39;49;00m
        [90m# can safely assume that we're a child template and do some[39;49;00m[90m[39;49;00m
        [90m# more optimizations.[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.has_known_extends = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# the current line number[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.code_lineno = [94m1[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# registry of all filters and tests (global, not block local)[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.tests: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
>       [96mself[39;49;00m.filters: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
        ^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:343: AttributeError
[31m[1m__________________________________________________________________ TestEscapeFilter.test_autoescape ___________________________________________________________________[0m

self = <tests.test_escape_filter.TestEscapeFilter object at 0x10ad5e210>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10ad5f250>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_autoescape[39;49;00m([96mself[39;49;00m, environment: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test that autoescape works when enabled in the environment."""[39;49;00m[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33mautoescape_test.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_escape_filter.py[0m:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:119: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:193: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:264: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:113: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:42: in _generate
    [0mgenerator = [96mself[39;49;00m.code_generator_class([90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:106: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m([90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10aedcf50>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10ad5f250>, name = 'autoescape_test.html', filename = 'autoescape_test.html'
stream = <_io.StringIO object at 0x10ad86800>, defer_init = False, optimized = True

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__init__[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        environment: [33m"[39;49;00m[33mEnvironment[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
        name: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        filename: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        stream: t.Optional[t.TextIO] = [94mNone[39;49;00m,[90m[39;49;00m
        defer_init: [96mbool[39;49;00m = [94mFalse[39;49;00m,[90m[39;49;00m
        optimized: [96mbool[39;49;00m = [94mTrue[39;49;00m,[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
        [94mif[39;49;00m stream [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            stream = StringIO()[90m[39;49;00m
        [96mself[39;49;00m.environment = environment[90m[39;49;00m
        [96mself[39;49;00m.name = name[90m[39;49;00m
        [96mself[39;49;00m.filename = filename[90m[39;49;00m
        [96mself[39;49;00m.stream = stream[90m[39;49;00m
        [96mself[39;49;00m.created_block_context = [94mFalse[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.defer_init = defer_init[90m[39;49;00m
        [96mself[39;49;00m.optimizer: t.Optional[Optimizer] = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m optimized:[90m[39;49;00m
            [96mself[39;49;00m.optimizer = Optimizer(environment)[90m[39;49;00m
    [90m[39;49;00m
        [90m# aliases for imports[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.import_aliases: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# a registry for all blocks.  Because blocks are moved out[39;49;00m[90m[39;49;00m
        [90m# into the global python scope they are registered here[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.blocks: t.Dict[[96mstr[39;49;00m, nodes.Block] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# the number of extends statements so far[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.extends_so_far = [94m0[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# some templates have a rootlevel extends.  In this case we[39;49;00m[90m[39;49;00m
        [90m# can safely assume that we're a child template and do some[39;49;00m[90m[39;49;00m
        [90m# more optimizations.[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.has_known_extends = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# the current line number[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.code_lineno = [94m1[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# registry of all filters and tests (global, not block local)[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.tests: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
>       [96mself[39;49;00m.filters: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
        ^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:343: AttributeError
[31m[1m_______________________________________________________________ TestEscapeFilter.test_multiple_escapes ________________________________________________________________[0m

self = <tests.test_escape_filter.TestEscapeFilter object at 0x10ad67230>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10ad5ead0>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_multiple_escapes[39;49;00m([96mself[39;49;00m, environment: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test that multiple escape filters in the same template work correctly."""[39;49;00m[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33mmultiple_escapes.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_escape_filter.py[0m:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:119: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:193: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:264: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:113: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:42: in _generate
    [0mgenerator = [96mself[39;49;00m.code_generator_class([90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:106: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m([90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10aedd950>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10ad5ead0>, name = 'multiple_escapes.html', filename = 'multiple_escapes.html'
stream = <_io.StringIO object at 0x10ad86c80>, defer_init = False, optimized = True

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__init__[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        environment: [33m"[39;49;00m[33mEnvironment[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
        name: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        filename: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        stream: t.Optional[t.TextIO] = [94mNone[39;49;00m,[90m[39;49;00m
        defer_init: [96mbool[39;49;00m = [94mFalse[39;49;00m,[90m[39;49;00m
        optimized: [96mbool[39;49;00m = [94mTrue[39;49;00m,[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
        [94mif[39;49;00m stream [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            stream = StringIO()[90m[39;49;00m
        [96mself[39;49;00m.environment = environment[90m[39;49;00m
        [96mself[39;49;00m.name = name[90m[39;49;00m
        [96mself[39;49;00m.filename = filename[90m[39;49;00m
        [96mself[39;49;00m.stream = stream[90m[39;49;00m
        [96mself[39;49;00m.created_block_context = [94mFalse[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.defer_init = defer_init[90m[39;49;00m
        [96mself[39;49;00m.optimizer: t.Optional[Optimizer] = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m optimized:[90m[39;49;00m
            [96mself[39;49;00m.optimizer = Optimizer(environment)[90m[39;49;00m
    [90m[39;49;00m
        [90m# aliases for imports[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.import_aliases: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# a registry for all blocks.  Because blocks are moved out[39;49;00m[90m[39;49;00m
        [90m# into the global python scope they are registered here[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.blocks: t.Dict[[96mstr[39;49;00m, nodes.Block] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# the number of extends statements so far[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.extends_so_far = [94m0[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# some templates have a rootlevel extends.  In this case we[39;49;00m[90m[39;49;00m
        [90m# can safely assume that we're a child template and do some[39;49;00m[90m[39;49;00m
        [90m# more optimizations.[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.has_known_extends = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# the current line number[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.code_lineno = [94m1[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# registry of all filters and tests (global, not block local)[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.tests: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
>       [96mself[39;49;00m.filters: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
        ^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:343: AttributeError
[31m[1m___________________________________________________________ TestEscapeFilter.test_nested_expression_escape ____________________________________________________________[0m

self = <tests.test_escape_filter.TestEscapeFilter object at 0x10ad67490>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10aede710>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_nested_expression_escape[39;49;00m([96mself[39;49;00m, environment: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test that escape filter works with nested expressions."""[39;49;00m[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33mnested_escapes.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_escape_filter.py[0m:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:119: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:193: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:264: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:113: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:42: in _generate
    [0mgenerator = [96mself[39;49;00m.code_generator_class([90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:106: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m([90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10ae3f230>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10aede710>, name = 'nested_escapes.html', filename = 'nested_escapes.html'
stream = <_io.StringIO object at 0x10ad86e00>, defer_init = False, optimized = True

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__init__[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        environment: [33m"[39;49;00m[33mEnvironment[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
        name: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        filename: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        stream: t.Optional[t.TextIO] = [94mNone[39;49;00m,[90m[39;49;00m
        defer_init: [96mbool[39;49;00m = [94mFalse[39;49;00m,[90m[39;49;00m
        optimized: [96mbool[39;49;00m = [94mTrue[39;49;00m,[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
        [94mif[39;49;00m stream [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            stream = StringIO()[90m[39;49;00m
        [96mself[39;49;00m.environment = environment[90m[39;49;00m
        [96mself[39;49;00m.name = name[90m[39;49;00m
        [96mself[39;49;00m.filename = filename[90m[39;49;00m
        [96mself[39;49;00m.stream = stream[90m[39;49;00m
        [96mself[39;49;00m.created_block_context = [94mFalse[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.defer_init = defer_init[90m[39;49;00m
        [96mself[39;49;00m.optimizer: t.Optional[Optimizer] = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m optimized:[90m[39;49;00m
            [96mself[39;49;00m.optimizer = Optimizer(environment)[90m[39;49;00m
    [90m[39;49;00m
        [90m# aliases for imports[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.import_aliases: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# a registry for all blocks.  Because blocks are moved out[39;49;00m[90m[39;49;00m
        [90m# into the global python scope they are registered here[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.blocks: t.Dict[[96mstr[39;49;00m, nodes.Block] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# the number of extends statements so far[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.extends_so_far = [94m0[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# some templates have a rootlevel extends.  In this case we[39;49;00m[90m[39;49;00m
        [90m# can safely assume that we're a child template and do some[39;49;00m[90m[39;49;00m
        [90m# more optimizations.[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.has_known_extends = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# the current line number[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.code_lineno = [94m1[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# registry of all filters and tests (global, not block local)[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.tests: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
>       [96mself[39;49;00m.filters: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
        ^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:343: AttributeError
[31m[1m_________________________________________________________ TestEscapeFilter.test_escape_with_non_string_values _________________________________________________________[0m

self = <tests.test_escape_filter.TestEscapeFilter object at 0x10ad53e30>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10aede350>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_escape_with_non_string_values[39;49;00m([96mself[39;49;00m, environment: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test that escape filter works with non-string values."""[39;49;00m[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33mescape_test.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_escape_filter.py[0m:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:119: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:193: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:264: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:113: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:42: in _generate
    [0mgenerator = [96mself[39;49;00m.code_generator_class([90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:106: in __init__
    [0m[96msuper[39;49;00m().[92m__init__[39;49;00m([90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10b234510>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x10aede350>, name = 'escape_test.html', filename = 'escape_test.html'
stream = <_io.StringIO object at 0x10ad87580>, defer_init = False, optimized = True

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__init__[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        environment: [33m"[39;49;00m[33mEnvironment[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
        name: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        filename: t.Optional[[96mstr[39;49;00m],[90m[39;49;00m
        stream: t.Optional[t.TextIO] = [94mNone[39;49;00m,[90m[39;49;00m
        defer_init: [96mbool[39;49;00m = [94mFalse[39;49;00m,[90m[39;49;00m
        optimized: [96mbool[39;49;00m = [94mTrue[39;49;00m,[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
        [94mif[39;49;00m stream [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            stream = StringIO()[90m[39;49;00m
        [96mself[39;49;00m.environment = environment[90m[39;49;00m
        [96mself[39;49;00m.name = name[90m[39;49;00m
        [96mself[39;49;00m.filename = filename[90m[39;49;00m
        [96mself[39;49;00m.stream = stream[90m[39;49;00m
        [96mself[39;49;00m.created_block_context = [94mFalse[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.defer_init = defer_init[90m[39;49;00m
        [96mself[39;49;00m.optimizer: t.Optional[Optimizer] = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m optimized:[90m[39;49;00m
            [96mself[39;49;00m.optimizer = Optimizer(environment)[90m[39;49;00m
    [90m[39;49;00m
        [90m# aliases for imports[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.import_aliases: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# a registry for all blocks.  Because blocks are moved out[39;49;00m[90m[39;49;00m
        [90m# into the global python scope they are registered here[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.blocks: t.Dict[[96mstr[39;49;00m, nodes.Block] = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# the number of extends statements so far[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.extends_so_far = [94m0[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# some templates have a rootlevel extends.  In this case we[39;49;00m[90m[39;49;00m
        [90m# can safely assume that we're a child template and do some[39;49;00m[90m[39;49;00m
        [90m# more optimizations.[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.has_known_extends = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# the current line number[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.code_lineno = [94m1[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# registry of all filters and tests (global, not block local)[39;49;00m[90m[39;49;00m
        [96mself[39;49;00m.tests: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
>       [96mself[39;49;00m.filters: t.Dict[[96mstr[39;49;00m, [96mstr[39;49;00m] = {}[90m[39;49;00m
        ^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:343: AttributeError
=========================================================================== tests coverage ============================================================================
__________________________________________________________ coverage: platform darwin, python 3.13.5-final-0 ___________________________________________________________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          56     29    48%
jinja2_async_environment/compiler.py        391    329    16%
jinja2_async_environment/environment.py     135     80    41%
jinja2_async_environment/loaders.py         320    231    28%
-------------------------------------------------------------
TOTAL                                       902    669    26%
[31m[1mFAIL Required test coverage of 42% not reached. Total coverage: 25.83%
[0m[36m[1m======================================================================= short test summary info =======================================================================[0m
[31mFAILED[0m tests/test_escape_filter.py::[1mTestEscapeFilter::test_explicit_escape_filter[0m - AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter
[31mFAILED[0m tests/test_escape_filter.py::[1mTestEscapeFilter::test_autoescape[0m - AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter
[31mFAILED[0m tests/test_escape_filter.py::[1mTestEscapeFilter::test_multiple_escapes[0m - AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter
[31mFAILED[0m tests/test_escape_filter.py::[1mTestEscapeFilter::test_nested_expression_escape[0m - AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter
[31mFAILED[0m tests/test_escape_filter.py::[1mTestEscapeFilter::test_escape_with_non_string_values[0m - AttributeError: property 'filters' of 'AsyncCodeGenerator' object has no setter
[31m========================================================================== [31m[1m5 failed[0m[31m in 2.03s[0m[31m ==========================================================================[0m
