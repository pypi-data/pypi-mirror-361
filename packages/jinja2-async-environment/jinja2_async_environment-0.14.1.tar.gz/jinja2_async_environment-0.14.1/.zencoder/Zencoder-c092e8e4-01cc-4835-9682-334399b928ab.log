[1m========================================================================= test session starts =========================================================================[0m
platform darwin -- Python 3.13.5, pytest-8.4.0, pluggy-1.6.0 -- /Users/les/Projects/jinja2-async-environment/.venv/bin/python
cachedir: .pytest_cache
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
plugins: xdist-3.7.0, anyio-4.9.0, timeout-2.4.0, cov-6.2.1, mock-3.14.1, benchmark-5.1.0, asyncio-1.0.0
timeout: 300.0s
timeout method: thread
timeout func_only: False
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
[1mcollecting ... [0m[1mcollected 13 items                                                                                                                                                    [0m

tests/test_compiler_additional.py::test_async_frame_init [31mFAILED[0m[31m                                                                                                 [  7%][0m
tests/test_compiler_additional.py::test_async_frame_copy [31mFAILED[0m[31m                                                                                                 [ 15%][0m
tests/test_compiler_additional.py::test_async_code_generator_init [31mFAILED[0m[31m                                                                                        [ 23%][0m
tests/test_compiler_additional.py::test_visit_block [31mFAILED[0m[31m                                                                                                      [ 30%][0m
tests/test_compiler_additional.py::test_visit_extends [31mFAILED[0m[31m                                                                                                    [ 38%][0m
tests/test_compiler_additional.py::test_visit_include [31mFAILED[0m[31m                                                                                                    [ 46%][0m
tests/test_compiler_additional.py::test_func_code_generator [31mFAILED[0m[31m                                                                                              [ 53%][0m
tests/test_compiler_additional.py::test_return_buffer_contents [31mFAILED[0m[31m                                                                                           [ 61%][0m
tests/test_compiler_additional.py::test_visit_asyncfor [31mFAILED[0m[31m                                                                                                   [ 69%][0m
tests/test_compiler_additional.py::test_visit_asynccall [31mFAILED[0m[31m                                                                                                  [ 76%][0m
tests/test_compiler_additional.py::test_visit_asyncfilterblock [31mFAILED[0m[31m                                                                                           [ 84%][0m
tests/test_compiler_additional.py::test_visit_asyncwith [31mFAILED[0m[31m                                                                                                  [ 92%][0m
tests/test_compiler_additional.py::test_visit_asyncblock [31mFAILED[0m[31m                                                                                                 [100%][0m[31m[1m
ERROR: Coverage failure: total of 25 is less than fail-under=42
[0m

============================================================================== FAILURES ===============================================================================
[31m[1m________________________________________________________________________ test_async_frame_init ________________________________________________________________________[0m

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_async_frame_init[39;49;00m() -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test initialization of AsyncFrame."""[39;49;00m[90m[39;49;00m
>       frame = AsyncFrame()[90m[39;49;00m
                ^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: AsyncFrame.__init__() missing 1 required positional argument: 'eval_ctx'[0m

[1m[31mtests/test_compiler_additional.py[0m:27: TypeError
[31m[1m________________________________________________________________________ test_async_frame_copy ________________________________________________________________________[0m

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_async_frame_copy[39;49;00m() -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the copy method of AsyncFrame."""[39;49;00m[90m[39;49;00m
>       frame = AsyncFrame()[90m[39;49;00m
                ^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: AsyncFrame.__init__() missing 1 required positional argument: 'eval_ctx'[0m

[1m[31mtests/test_compiler_additional.py[0m:45: TypeError
[31m[1m___________________________________________________________________ test_async_code_generator_init ____________________________________________________________________[0m

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_async_code_generator_init[39;49;00m() -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test initialization of AsyncCodeGenerator."""[39;49;00m[90m[39;49;00m
        env = MagicMock()[90m[39;49;00m
        env.is_async = [94mTrue[39;49;00m[90m[39;49;00m
        generator = AsyncCodeGenerator(env, [33m"[39;49;00m[33mtest_template[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtest.py[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [94massert[39;49;00m generator.environment [95mis[39;49;00m env[90m[39;49;00m
        [94massert[39;49;00m generator.name == [33m"[39;49;00m[33mtest_template[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m generator.filename == [33m"[39;49;00m[33mtest.py[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m generator.stream [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
>       [94massert[39;49;00m generator.extends_so_far [95mis[39;49;00m [94mFalse[39;49;00m[90m[39;49;00m
[1m[31mE       assert 0 is False[0m
[1m[31mE        +  where 0 = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fcef620>.extends_so_far[0m

[1m[31mtests/test_compiler_additional.py[0m:87: AssertionError
[31m[1m__________________________________________________________________________ test_visit_block ___________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fce3b10>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_block[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Block method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Block node[39;49;00m[90m[39;49;00m
        block_node = MagicMock(spec=nodes.Block)[90m[39;49;00m
        block_node.name = [33m"[39;49;00m[33mtest_block[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        block_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.buffer = [][90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Block[39;49;00m[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Block[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Block(block_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:397: in visit_Block
    [0m[94mif[39;49;00m frame.toplevel:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4561226112'>, name = 'toplevel'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'toplevel'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m_________________________________________________________________________ test_visit_extends __________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fe54910>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_extends[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Extends method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Extends node[39;49;00m[90m[39;49;00m
        extends_node = MagicMock(spec=nodes.Extends)[90m[39;49;00m
        extends_node.template = MagicMock(spec=nodes.Const)[90m[39;49;00m
        extends_node.template.value = [33m"[39;49;00m[33mbase.html[39;49;00m[33m"[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.require_output_check = [94mFalse[39;49;00m[90m[39;49;00m
        frame.toplevel = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Extends[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Extends[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Extends(extends_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fe54910>, node = <MagicMock spec='Extends' id='4561230144'>
frame = <MagicMock spec='AsyncFrame' id='4561230816'>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mvisit_Extends[39;49;00m([96mself[39;49;00m, node: nodes.Extends, frame: Frame) -> [94mNone[39;49;00m:[90m[39;49;00m
        frame = t.cast(AsyncFrame, frame)[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m frame.require_output_check:[90m[39;49;00m
>           [94mraise[39;49;00m CompilerExit()[90m[39;49;00m
[1m[31mE           jinja2.compiler.CompilerExit[0m

[1m[31mjinja2_async_environment/compiler.py[0m:439: CompilerExit
[31m[1m_________________________________________________________________________ test_visit_include __________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fe54e10>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_include[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Include method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Include node[39;49;00m[90m[39;49;00m
        include_node = MagicMock(spec=nodes.Include)[90m[39;49;00m
        include_node.template = MagicMock(spec=nodes.Const)[90m[39;49;00m
        include_node.template.value = [33m"[39;49;00m[33mincluded.html[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        include_node.ignore_missing = [94mFalse[39;49;00m[90m[39;49;00m
        include_node.with_context = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Include[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Include[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Include(include_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:165: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:467: in visit_Include
    [0m[96mself[39;49;00m.writeline([33m"[39;49;00m[33mtemplate = await environment.get_template_async([39;49;00m[33m"[39;49;00m, node)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:471: in writeline
    [0m[96mself[39;49;00m.newline(node, extra)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:477: in newline
    [0m[94mif[39;49;00m node [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mand[39;49;00m node.lineno != [96mself[39;49;00m._last_line:[90m[39;49;00m
                            ^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='Include' id='4561233168'>, name = 'lineno'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'lineno'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m______________________________________________________________________ test_func_code_generator _______________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fce3c50>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_func_code_generator[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the function code generator methods."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Test the function code generator methods[39;49;00m[90m[39;49;00m
>       [94massert[39;49;00m async_code_generator.func_code_generator(frame) == [33m"[39;49;00m[33masync def[39;49;00m[33m"[39;49;00m[90m[39;49;00m
[1m[31mE       AssertionError: assert 'async ' == 'async def'[0m
[1m[31mE         [0m
[1m[31mE         [0m[91m- async def[39;49;00m[90m[39;49;00m[0m
[1m[31mE         ?       ---[90m[39;49;00m[0m
[1m[31mE         [92m+ async [39;49;00m[90m[39;49;00m[0m

[1m[31mtests/test_compiler_additional.py[0m:179: AssertionError
[31m[1m_____________________________________________________________________ test_return_buffer_contents _____________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fce2c10>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_return_buffer_contents[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the return_buffer_contents method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.buffer = [[33m"[39;49;00m[33mbuffer_item1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mbuffer_item2[39;49;00m[33m"[39;49;00m][90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Test the return_buffer_contents method[39;49;00m[90m[39;49;00m
>       async_code_generator.return_buffer_contents(frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:98: in return_buffer_contents
    [0m[96mself[39;49;00m.writeline([33m"[39;49;00m[33mreturn [39;49;00m[33m'[39;49;00m[33m'[39;49;00m[33m.join([39;49;00m[33m%s[39;49;00m[33m)[39;49;00m[33m"[39;49;00m % frame.buffer)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fce2c10>, x = "return ''.join(['buffer_item1', 'buffer_item2'])"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m_________________________________________________________________________ test_visit_asyncfor _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fe54cd0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncfor[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_AsyncFor method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock AsyncFor node[39;49;00m[90m[39;49;00m
        asyncfor_node = MagicMock(spec=nodes.For)  [90m# Using For as a base since AsyncFor doesn't exist[39;49;00m[90m[39;49;00m
        asyncfor_node.target = MagicMock(spec=nodes.Name)[90m[39;49;00m
        asyncfor_node.target.name = [33m"[39;49;00m[33mitem[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        asyncfor_node.iter = MagicMock(spec=nodes.Name)[90m[39;49;00m
        asyncfor_node.iter.name = [33m"[39;49;00m[33mitems[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        asyncfor_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
        asyncfor_node.else_ = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_AsyncFor[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.pull_locals = MagicMock(return_value=[96mset[39;49;00m())[90m[39;49;00m
        async_code_generator.push_frame = MagicMock(return_value=frame)[90m[39;49;00m
        async_code_generator.pop_frame = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Patch the visit method to handle the target and iter[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m patch.object(async_code_generator, [33m'[39;49;00m[33mvisit[39;49;00m[33m'[39;49;00m) [94mas[39;49;00m mock_visit:[90m[39;49;00m
            [90m# Call visit_AsyncFor[39;49;00m[90m[39;49;00m
>           async_code_generator.visit_For(asyncfor_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:320: in visit_For
    [0m[94mif[39;49;00m node.recursive:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='For' id='4561229808'>, name = 'recursive'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'recursive'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m________________________________________________________________________ test_visit_asynccall _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fe54910>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asynccall[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Call method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Call node[39;49;00m[90m[39;49;00m
        call_node = MagicMock(spec=nodes.Call)[90m[39;49;00m
        call_node.node = MagicMock(spec=nodes.Name)[90m[39;49;00m
        call_node.node.name = [33m"[39;49;00m[33masync_function[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        call_node.args = [][90m[39;49;00m
        call_node.kwargs = [][90m[39;49;00m
        call_node.dyn_args = [94mNone[39;49;00m[90m[39;49;00m
        call_node.dyn_kwargs = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Call[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Call[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Call(call_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:253: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:50: in new_func
    [0m[94mif[39;49;00m [96mself[39;49;00m.optimizer [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mand[39;49;00m [95mnot[39;49;00m frame.eval_ctx.volatile:[90m[39;49;00m
                                          ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4561235520'>, name = 'eval_ctx'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'eval_ctx'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m_____________________________________________________________________ test_visit_asyncfilterblock _____________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fce2d50>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncfilterblock[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_FilterBlock method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock FilterBlock node[39;49;00m[90m[39;49;00m
        filterblock_node = MagicMock(spec=nodes.FilterBlock)[90m[39;49;00m
        filterblock_node.filter = MagicMock(spec=nodes.Filter)[90m[39;49;00m
        filterblock_node.filter.name = [33m"[39;49;00m[33mfilter_name[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        filterblock_node.filter.node = [94mNone[39;49;00m[90m[39;49;00m
        filterblock_node.filter.args = [][90m[39;49;00m
        filterblock_node.filter.kwargs = [][90m[39;49;00m
        filterblock_node.filter.dyn_args = [94mNone[39;49;00m[90m[39;49;00m
        filterblock_node.filter.dyn_kwargs = [94mNone[39;49;00m[90m[39;49;00m
        filterblock_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
        frame.buffer = [][90m[39;49;00m
        frame.eval_ctx = MagicMock()[90m[39;49;00m
        frame.eval_ctx.autoescape = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_FilterBlock[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_FilterBlock[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_FilterBlock(filterblock_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:286: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:1365: in visit_FilterBlock
    [0m[96mself[39;49;00m.start_write(frame, node)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:427: in start_write
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mframe.buffer[33m}[39;49;00m[33m.append([39;49;00m[33m"[39;49;00m, node)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:471: in writeline
    [0m[96mself[39;49;00m.newline(node, extra)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:477: in newline
    [0m[94mif[39;49;00m node [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mand[39;49;00m node.lineno != [96mself[39;49;00m._last_line:[90m[39;49;00m
                            ^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='FilterBlock' id='4560190304'>, name = 'lineno'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'lineno'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m________________________________________________________________________ test_visit_asyncwith _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fce2210>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncwith[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_With method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock With node[39;49;00m[90m[39;49;00m
        with_node = MagicMock(spec=nodes.With)[90m[39;49;00m
        with_node.targets = [(MagicMock(spec=nodes.Name), MagicMock(spec=nodes.Name))][90m[39;49;00m
        with_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_With[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_With[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_With(with_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:310: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:1374: in visit_With
    [0m[94mfor[39;49;00m target, expr [95min[39;49;00m [96mzip[39;49;00m(node.targets, node.values):[90m[39;49;00m
                                          ^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='With' id='4561236864'>, name = 'values'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'values'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m________________________________________________________________________ test_visit_asyncblock ________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x10fe54a50>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncblock[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Block method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Block node[39;49;00m[90m[39;49;00m
        block_node = MagicMock(spec=nodes.Block)[90m[39;49;00m
        block_node.name = [33m"[39;49;00m[33masync_block[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        block_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
        block_node.scoped = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
        frame.buffer = [][90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Block[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Block[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Block(block_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:336: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:397: in visit_Block
    [0m[94mif[39;49;00m frame.toplevel:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4561867776'>, name = 'toplevel'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'toplevel'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
=========================================================================== tests coverage ============================================================================
__________________________________________________________ coverage: platform darwin, python 3.13.5-final-0 ___________________________________________________________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          56     29    48%
jinja2_async_environment/compiler.py        356    275    23%
jinja2_async_environment/environment.py     121     88    27%
jinja2_async_environment/loaders.py         320    252    21%
-------------------------------------------------------------
TOTAL                                       853    644    25%
[31m[1mFAIL Required test coverage of 42% not reached. Total coverage: 24.50%
[0m[36m[1m======================================================================= short test summary info =======================================================================[0m
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_async_frame_init[0m - TypeError: AsyncFrame.__init__() missing 1 required positional argument: 'eval_ctx'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_async_frame_copy[0m - TypeError: AsyncFrame.__init__() missing 1 required positional argument: 'eval_ctx'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_async_code_generator_init[0m - assert 0 is False
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_block[0m - AttributeError: Mock object has no attribute 'toplevel'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_extends[0m - jinja2.compiler.CompilerExit
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_include[0m - AttributeError: Mock object has no attribute 'lineno'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_func_code_generator[0m - AssertionError: assert 'async ' == 'async def'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_return_buffer_contents[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncfor[0m - AttributeError: Mock object has no attribute 'recursive'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asynccall[0m - AttributeError: Mock object has no attribute 'eval_ctx'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncfilterblock[0m - AttributeError: Mock object has no attribute 'lineno'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncwith[0m - AttributeError: Mock object has no attribute 'values'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncblock[0m - AttributeError: Mock object has no attribute 'toplevel'
[31m========================================================================= [31m[1m13 failed[0m[31m in 2.12s[0m[31m ==========================================================================[0m
