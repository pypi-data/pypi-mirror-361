# automatically generated by the FlatBuffers compiler, do not modify

# namespace: API

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class RenderableId(object):
    __slots__ = ['_tab']

    # RenderableId
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RenderableId
    def GranuleLevel(self): return self._tab.Get(flatbuffers.number_types.BoolFlags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # RenderableId
    def SourceId(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # RenderableId
    def CollectionId(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # RenderableId
    def GranuleId(self): return self._tab.Get(flatbuffers.number_types.Uint64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))
    # RenderableId
    def VariableId(self): return self._tab.Get(flatbuffers.number_types.Uint32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(24))

def CreateRenderableId(builder, granuleLevel, sourceId, collectionId, granuleId, variableId):
    builder.Prep(8, 32)
    builder.Pad(4)
    builder.PrependUint32(variableId)
    builder.PrependUint64(granuleId)
    builder.Pad(4)
    builder.PrependUint32(collectionId)
    builder.PrependUint32(sourceId)
    builder.Pad(3)
    builder.PrependBool(granuleLevel)
    return builder.Offset()
