################################################################################
#
# Copyright 2025 ByteDance Ltd. and/or its affiliates. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from bytecheckpoint.utilities.server import (
    report_service_pb2 as bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2,
)


class ByteCheckpointReportServiceStub:
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Gather = channel.unary_unary(
            "/ByteCheckpointReportService/Gather",
            request_serializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGatherRequest.SerializeToString,
            response_deserializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGatherResponse.FromString,
        )
        self.Broadcast = channel.unary_unary(
            "/ByteCheckpointReportService/Broadcast",
            request_serializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointBroadcastRequest.SerializeToString,
            response_deserializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointBroadcastResponse.FromString,
        )
        self.GetStatus = channel.unary_unary(
            "/ByteCheckpointReportService/GetStatus",
            request_serializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGetStatusRequest.SerializeToString,
            response_deserializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGetStatusResponse.FromString,
        )


class ByteCheckpointReportServiceServicer:
    """Missing associated documentation comment in .proto file."""

    def Gather(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Broadcast(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ByteCheckpointReportServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Gather": grpc.unary_unary_rpc_method_handler(
            servicer.Gather,
            request_deserializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGatherRequest.FromString,
            response_serializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGatherResponse.SerializeToString,
        ),
        "Broadcast": grpc.unary_unary_rpc_method_handler(
            servicer.Broadcast,
            request_deserializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointBroadcastRequest.FromString,
            response_serializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointBroadcastResponse.SerializeToString,
        ),
        "GetStatus": grpc.unary_unary_rpc_method_handler(
            servicer.GetStatus,
            request_deserializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGetStatusRequest.FromString,
            response_serializer=bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGetStatusResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("ByteCheckpointReportService", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ByteCheckpointReportService:
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Gather(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ByteCheckpointReportService/Gather",
            bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGatherRequest.SerializeToString,
            bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGatherResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Broadcast(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ByteCheckpointReportService/Broadcast",
            bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointBroadcastRequest.SerializeToString,
            bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointBroadcastResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetStatus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ByteCheckpointReportService/GetStatus",
            bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGetStatusRequest.SerializeToString,
            bytecheckpoint_dot_utilities_dot_server_dot_report__service__pb2.ByteCheckpointGetStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
