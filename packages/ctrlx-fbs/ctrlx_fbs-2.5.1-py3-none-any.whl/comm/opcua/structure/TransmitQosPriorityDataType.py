# automatically generated by the FlatBuffers compiler, do not modify

# namespace: structure

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TransmitQosPriorityDataType(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TransmitQosPriorityDataType()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTransmitQosPriorityDataType(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TransmitQosPriorityDataType
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TransmitQosPriorityDataType
    def PriorityLabel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def TransmitQosPriorityDataTypeStart(builder): builder.StartObject(1)
def Start(builder):
    return TransmitQosPriorityDataTypeStart(builder)
def TransmitQosPriorityDataTypeAddPriorityLabel(builder, priorityLabel): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(priorityLabel), 0)
def AddPriorityLabel(builder, priorityLabel):
    return TransmitQosPriorityDataTypeAddPriorityLabel(builder, priorityLabel)
def TransmitQosPriorityDataTypeEnd(builder): return builder.EndObject()
def End(builder):
    return TransmitQosPriorityDataTypeEnd(builder)

class TransmitQosPriorityDataTypeT(object):

    # TransmitQosPriorityDataTypeT
    def __init__(self):
        self.priorityLabel = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        transmitQosPriorityDataType = TransmitQosPriorityDataType()
        transmitQosPriorityDataType.Init(buf, pos)
        return cls.InitFromObj(transmitQosPriorityDataType)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, transmitQosPriorityDataType):
        x = TransmitQosPriorityDataTypeT()
        x._UnPack(transmitQosPriorityDataType)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.priorityLabel == other.priorityLabel

    # TransmitQosPriorityDataTypeT
    def _UnPack(self, transmitQosPriorityDataType):
        if transmitQosPriorityDataType is None:
            return
        self.priorityLabel = transmitQosPriorityDataType.PriorityLabel()

    # TransmitQosPriorityDataTypeT
    def Pack(self, builder):
        if self.priorityLabel is not None:
            priorityLabel = builder.CreateString(self.priorityLabel)
        TransmitQosPriorityDataTypeStart(builder)
        if self.priorityLabel is not None:
            TransmitQosPriorityDataTypeAddPriorityLabel(builder, priorityLabel)
        transmitQosPriorityDataType = TransmitQosPriorityDataTypeEnd(builder)
        return transmitQosPriorityDataType
