[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "goldfish-backend"
version = "0.1.3"
description = "AI-First Personal Knowledge Management - Shared Backend"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
authors = [
    { name = "Goldfish Team" },
]
keywords = ["ai", "knowledge", "management", "backend", "notes", "entities"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing",
]

dependencies = [
    "sqlmodel>=0.0.24",
    "pydantic[email]>=2.11.7",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.5.0",
    "alembic>=1.16.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "faker>=37.4.0",
    "httpx>=0.27.0",
    "black>=24.0.0",
    "ruff>=0.6.0",
    "mypy>=1.8.0",
]

[project.urls]
Homepage = "https://github.com/linxichen/goldfish"
Repository = "https://github.com/linxichen/goldfish"
Documentation = "https://github.com/linxichen/goldfish/tree/main/goldfish-backend"
"Bug Reports" = "https://github.com/linxichen/goldfish/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/goldfish_backend"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
target-version = "py311"
line-length = 100
extend-exclude = ["migrations"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "E712", # comparison to True/False should be `is` or `is not` (needed for SQLAlchemy)
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]