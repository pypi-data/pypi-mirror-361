[build-system]
requires = ["hatchling>=1.26.1"]
build-backend = "hatchling.build"

[project]
name = "s3func"
authors = [
  { name = "Mike Kittridge", email = "mullenkamp1@gmail.com" }
]
description = "Simple functions for working with S3"
readme = "README.md"
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
]
requires-python = ">=3.9"
dependencies = ['boto3<1.36',
                'urllib3>=2',
                'orjson',
]

[project.urls]
Documentation = "https://mullenkamp.github.io/s3func/"
Source = "https://github.com/mullenkamp/s3func"

[dependency-groups]
dev = [
  "spyder-kernels==2.5.2",
  "black",
  "mypy",
  "ruff",
  "pytest",
  "pytest-cov",
]

[tool.hatch]

[tool.hatch.version]
path = "s3func/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
include = [
    "/s3func",
]
exclude = [
  '/s3func/tests/*.csv',
  '/s3func/tests/*.blt'
]

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py310"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["s3func"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["s3func", "tests"]
branch = true
parallel = true
omit = [
  "src/s3func/__about__.py",
]

[tool.coverage.paths]
s3func = ["src/s3func", "*/s3func/src/s3func"]
tests = ["tests", "*/s3func/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
