cd /Users/les/Projects/jinja2-async-environment && .venv/bin/pytest -v
direnv: loading ~/Projects/jinja2-async-environment/.envrc                      
direnv: export +PDM_ACTIVE ~PATH
(jinja2-async-environment) [jinja2-async-environment] cd /Users/les/Projects/jinja2-async-environment && .venv/bin/pytest -v
============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.3.5, pluggy-1.5.0 -- /Users/les/Projects/jinja2-async-environment/.venv/bin/python
cachedir: .pytest_cache
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
testpaths: tests, jinja2_async_environment
plugins: anyio-4.9.0, timeout-2.4.0, asyncio-0.26.0, mock-3.14.0, cov-6.1.1
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collected 96 items                                                             

tests/test_bccache.py::TestAsyncBytecodeCache::test_get_cache_key PASSED [  1%]
tests/test_bccache.py::TestAsyncBytecodeCache::test_get_source_checksum PASSED [  2%]
tests/test_bccache.py::TestAsyncBytecodeCache::test_not_implemented_methods PASSED [  3%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_init PASSED     [  4%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_first_loader PASSED [  5%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_second_loader PASSED [  6%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_shared_template PASSED [  7%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_nonexistent_template PASSED [  8%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_with_path_object PASSED [  9%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_list_templates_async PASSED [ 10%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_load_async FAILED [ 11%]
tests/test_compiler.py::TestAsyncFrame::test_copy PASSED                 [ 12%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_block_has_known_extends PASSED [ 13%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_block_normal PASSED [ 14%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_exit_on_no_output_check PASSED [ 15%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_fail_on_non_toplevel PASSED [ 16%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_multiple_times PASSED [ 17%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_with_known_extends PASSED [ 18%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_normal PASSED [ 19%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_set_has_known_extends PASSED [ 20%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_include_ignore_missing PASSED [ 21%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_include_with_context PASSED [ 22%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_include_without_context PASSED [ 23%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_import_common PASSED [ 25%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_init PASSED         [ 26%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_get_source_async_existing_template PASSED [ 27%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_get_source_async_nonexistent_template PASSED [ 28%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_get_source_async_with_path_object PASSED [ 29%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_list_templates_async PASSED [ 30%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_load_async FAILED   [ 31%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_uptodate_function PASSED [ 32%]
tests/test_environment.py::TestAsyncEnvironment::test_init PASSED        [ 33%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_not_implemented PASSED [ 34%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_not_implemented PASSED [ 35%]
tests/test_environment.py::TestAsyncEnvironment::test_get_or_select_template_not_implemented PASSED [ 36%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_async_with_template_object PASSED [ 37%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_async_with_parent PASSED [ 38%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_async_with_globals PASSED [ 39%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_with_empty_list PASSED [ 40%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_with_undefined PASSED [ 41%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_with_template_object PASSED [ 42%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_with_parent PASSED [ 43%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_not_found PASSED [ 44%]
tests/test_environment.py::TestAsyncEnvironment::test_get_or_select_template_async_with_string PASSED [ 45%]
tests/test_environment.py::TestAsyncEnvironment::test_get_or_select_template_async_with_template_object PASSED [ 46%]
tests/test_environment.py::TestAsyncEnvironment::test_get_or_select_template_async_with_list PASSED [ 47%]
tests/test_environment.py::TestAsyncEnvironment::test_load_template_async_with_template_object PASSED [ 48%]
tests/test_environment.py::TestAsyncEnvironment::test_load_template_async_with_string PASSED [ 50%]
tests/test_environment.py::TestAsyncEnvironment::test_load_template_async_with_iterable PASSED [ 51%]
tests/test_environment.py::TestAsyncEnvironment::test_load_template_async_with_iterable_all_not_found PASSED [ 52%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_no_loader PASSED [ 53%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_with_cache_hit PASSED [ 54%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_with_cache_hit_and_globals PASSED [ 55%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_with_cache_miss PASSED [ 56%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_init PASSED [ 57%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_with_sync_function PASSED [ 58%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_with_async_function PASSED [ 59%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_with_string_function PASSED [ 60%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_nonexistent_template PASSED [ 61%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_with_path_object PASSED [ 62%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_load_async FAILED [ 63%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_invalid_return_type PASSED [ 64%]
tests/test_loaders.py::TestAsyncBaseLoader::test_init_with_single_path PASSED [ 65%]
tests/test_loaders.py::TestAsyncBaseLoader::test_init_with_multiple_paths PASSED [ 66%]
tests/test_loaders.py::TestAsyncBaseLoader::test_not_implemented_methods PASSED [ 67%]
tests/test_loaders.py::TestAsyncBaseLoader::test_load PASSED             [ 68%]
tests/test_loaders.py::TestAsyncBaseLoader::test_load_with_bytes PASSED  [ 69%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_init_package_not_found PASSED [ 70%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_init_loader_not_found PASSED [ 71%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_init_template_root_not_found FAILED [ 72%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_init_success FAILED [ 73%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_get_source_async_not_found PASSED [ 75%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_get_source_async_success FAILED [ 76%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_get_source_async_with_archive PASSED [ 77%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_regular FAILED [ 78%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_zip PASSED [ 79%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_zip_no_files FAILED [ 80%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_init_with_client PASSED [ 81%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_init_with_configs PASSED [ 82%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_cache_key PASSED [ 83%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_source_checksum PASSED [ 84%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_bucket_name PASSED [ 85%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_load_bytecode_hit PASSED [ 86%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_load_bytecode_miss PASSED [ 87%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_dump_bytecode PASSED [ 88%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_bucket PASSED [ 89%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_set_bucket PASSED [ 90%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_bucket_async PASSED [ 91%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_set_bucket_async PASSED [ 92%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_simple_template FAILED [ 93%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance FAILED [ 94%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_include FAILED [ 95%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_block FAILED [ 96%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_include FAILED                                                                     [ 97%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends FAILED                                                                     [ 98%]
tests/test_template_rendering.py::TestTemplateRendering::test_performance_with_large_template FAILED                                                          [100%]

============================================================================= FAILURES ==============================================================================
_______________________________________________________________ TestAsyncChoiceLoader.test_load_async _______________________________________________________________

self = <tests.test_choice_loader.TestAsyncChoiceLoader object at 0x1046ff050>
choice_loader = <jinja2_async_environment.loaders.AsyncChoiceLoader object at 0x104891370>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x1047e3e00>

    @pytest.mark.asyncio
    async def test_load_async(
        self, choice_loader: AsyncChoiceLoader, environment: AsyncEnvironment
    ) -> None:
>       template = await choice_loader.load_async(environment, "index.html")

tests/test_choice_loader.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/loaders.py:85: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:764: in compile
    source = self._generate(source, name, filename, defer_init=defer_init)
jinja2_async_environment/environment.py:41: in _generate
    ).generate(source)  # type: ignore
jinja2_async_environment/compiler.py:63: in generate
    self.blockvisit(node.body, frame)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:449: in blockvisit
    self.visit(node, frame)
.venv/lib/python3.13/site-packages/jinja2/visitor.py:40: in visit
    return f(node, *args, **kwargs)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:1568: in visit_Output
    self._output_child_pre(item, frame, finalize)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1047e3770>, node = TemplateData(data='<h1>Hello from dict1</h1>')
frame = <jinja2_async_environment.compiler.AsyncFrame object at 0x1048c1010>
finalize = _FinalizeInfo(const=<function CodeGenerator._default_finalize at 0x1044e9580>, src=None)

    def _output_child_pre(
        self, node: nodes.Expr, frame: Frame, finalize: _FinalizeInfo
    ) -> None:
        """Output extra source code before visiting a child of an
        ``Output`` node.
        """
>       if frame.eval_ctx.volatile:
E       AttributeError: 'NoneType' object has no attribute 'volatile'

.venv/lib/python3.13/site-packages/jinja2/compiler.py:1482: AttributeError
________________________________________________________________ TestAsyncDictLoader.test_load_async ________________________________________________________________

self = <tests.test_dict_loader.TestAsyncDictLoader object at 0x1047a9590>, loader = <jinja2_async_environment.loaders.AsyncDictLoader object at 0x104826ba0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x1047d79d0>

    @pytest.mark.asyncio
    async def test_load_async(
        self, loader: AsyncDictLoader, environment: AsyncEnvironment
    ) -> None:
>       template = await loader.load_async(environment, "index.html")

tests/test_dict_loader.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/loaders.py:85: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:764: in compile
    source = self._generate(source, name, filename, defer_init=defer_init)
jinja2_async_environment/environment.py:41: in _generate
    ).generate(source)  # type: ignore
jinja2_async_environment/compiler.py:63: in generate
    self.blockvisit(node.body, frame)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:449: in blockvisit
    self.visit(node, frame)
.venv/lib/python3.13/site-packages/jinja2/visitor.py:40: in visit
    return f(node, *args, **kwargs)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:1568: in visit_Output
    self._output_child_pre(item, frame, finalize)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1047ee650>, node = TemplateData(data='<h1>Hello, ')
frame = <jinja2_async_environment.compiler.AsyncFrame object at 0x1047be8d0>
finalize = _FinalizeInfo(const=<function CodeGenerator._default_finalize at 0x1044e9580>, src=None)

    def _output_child_pre(
        self, node: nodes.Expr, frame: Frame, finalize: _FinalizeInfo
    ) -> None:
        """Output extra source code before visiting a child of an
        ``Output`` node.
        """
>       if frame.eval_ctx.volatile:
E       AttributeError: 'NoneType' object has no attribute 'volatile'

.venv/lib/python3.13/site-packages/jinja2/compiler.py:1482: AttributeError
______________________________________________________________ TestAsyncFunctionLoader.test_load_async ______________________________________________________________

self = <tests.test_function_loader.TestAsyncFunctionLoader object at 0x1047aa250>
sync_loader = <jinja2_async_environment.loaders.AsyncFunctionLoader object at 0x104891370>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1c690>

    @pytest.mark.asyncio
    async def test_load_async(
        self, sync_loader: AsyncFunctionLoader, environment: AsyncEnvironment
    ) -> None:
>       template = await sync_loader.load_async(environment, "index.html")

tests/test_function_loader.py:147: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/loaders.py:85: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:764: in compile
    source = self._generate(source, name, filename, defer_init=defer_init)
jinja2_async_environment/environment.py:41: in _generate
    ).generate(source)  # type: ignore
jinja2_async_environment/compiler.py:63: in generate
    self.blockvisit(node.body, frame)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:449: in blockvisit
    self.visit(node, frame)
.venv/lib/python3.13/site-packages/jinja2/visitor.py:40: in visit
    return f(node, *args, **kwargs)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:1568: in visit_Output
    self._output_child_pre(item, frame, finalize)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1047efa80>, node = TemplateData(data='<h1>Hello, ')
frame = <jinja2_async_environment.compiler.AsyncFrame object at 0x1047bfb90>
finalize = _FinalizeInfo(const=<function CodeGenerator._default_finalize at 0x1044e9580>, src=None)

    def _output_child_pre(
        self, node: nodes.Expr, frame: Frame, finalize: _FinalizeInfo
    ) -> None:
        """Output extra source code before visiting a child of an
        ``Output`` node.
        """
>       if frame.eval_ctx.volatile:
E       AttributeError: 'NoneType' object has no attribute 'volatile'

.venv/lib/python3.13/site-packages/jinja2/compiler.py:1482: AttributeError
_____________________________________________________ TestAsyncPackageLoader.test_init_template_root_not_found ______________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x1047ecd60>, mock_import_module = <MagicMock id='4371251952'>

    def test_init_template_root_not_found(self, mock_import_module: MagicMock) -> None:
        mock_spec = MagicMock()
        mock_spec.loader = MagicMock()
        mock_spec.submodule_search_locations = []
        mock_spec.origin = None
        with (
            patch("importlib.util.find_spec", return_value=mock_spec),
            patch("jinja2_async_environment.loaders.import_module", mock_import_module),
        ):
>           with pytest.raises(
                ValueError,
                match="was not installed in a way that PackageLoader understands",
            ):
E           Failed: DID NOT RAISE <class 'ValueError'>

tests/test_package_loader.py:108: Failed
_____________________________________________________________ TestAsyncPackageLoader.test_init_success ______________________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x1047ece90>
package_loader = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x104974050>

    def test_init_success(self, package_loader: AsyncPackageLoader) -> None:
        assert package_loader.package_name == "test_package"
        assert package_loader.package_path == AsyncPath("templates")
        assert package_loader.encoding == "utf-8"
>       assert package_loader._archive is None
E       AssertionError: assert <MagicMock name='mock().loader.archive' id='4371265728'> is None
E        +  where <MagicMock name='mock().loader.archive' id='4371265728'> = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x104974050>._archive

tests/test_package_loader.py:122: AssertionError
_______________________________________________________ TestAsyncPackageLoader.test_get_source_async_success ________________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x1047aa7a0>
package_loader = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x1047cd250>

    @pytest.mark.asyncio
    async def test_get_source_async_success(
        self, package_loader: AsyncPackageLoader
    ) -> None:
        with patch.object(
            package_loader._loader,
            "get_data",
            return_value=b"<h1>Template content</h1>",
        ):
>           source, filename, uptodate = await package_loader.get_source_async(
                "template.html"
            )

tests/test_package_loader.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x1047cd250>, template = 'template.html'

    async def get_source_async(self, template: str | AsyncPath) -> SourceType:
        template_path: AsyncPath = (
            AsyncPath(template) if isinstance(template, str) else template
        )
        path = self._template_root / template_path
        if self._archive:
            if not await path.is_file():
>               raise TemplateNotFound(path.name)
E               jinja2.exceptions.TemplateNotFound: template.html

jinja2_async_environment/loaders.py:215: TemplateNotFound
_____________________________________________________ TestAsyncPackageLoader.test_list_templates_async_regular ______________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x104844350>
package_loader = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x104a21370>

    @pytest.mark.asyncio
    async def test_list_templates_async_regular(
        self, package_loader: AsyncPackageLoader
    ) -> None:
        with patch("anyio.Path.rglob") as mock_rglob:
            mock_rglob.return_value.__aiter__.return_value = [
                AsyncPath("/path/to/package/templates/template1.html"),
                AsyncPath("/path/to/package/templates/template2.html"),
                AsyncPath("/path/to/package/templates/subdir/template3.html"),
            ]
            templates = await package_loader.list_templates_async()
>           assert len(templates) == 3
E           assert 0 == 3
E            +  where 0 = len([])

tests/test_package_loader.py:213: AssertionError
___________________________________________________ TestAsyncPackageLoader.test_list_templates_async_zip_no_files ___________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x104848320>, mock_find_spec = <MagicMock id='4375885344'>
mock_import_module = <MagicMock id='4370341504'>

    @pytest.mark.asyncio
    async def test_list_templates_async_zip_no_files(
        self, mock_find_spec: MagicMock, mock_import_module: MagicMock
    ) -> None:
        mock_zipimporter = MagicMock()
        mock_zipimporter.archive = "/path/to/archive.zip"
    
        mock_spec = MagicMock()
        mock_spec.loader = mock_zipimporter
        mock_spec.submodule_search_locations = ["/path/to/package"]
    
        mock_path = AsyncPath("/path/to/package/templates")
    
        with (
            patch("importlib.util.find_spec", return_value=mock_spec),
            patch("jinja2_async_environment.loaders.import_module", mock_import_module),
            patch("anyio.Path.is_file", return_value=True),
            patch.object(AsyncPath, "is_dir", return_value=True),
            patch("anyio.Path.__truediv__", return_value=mock_path),
        ):
            loader = AsyncPackageLoader(
                "test_package",
                AsyncPath("/templates"),
                package_path=AsyncPath("templates"),
            )
    
>           with pytest.raises(TypeError, match="does not have the required metadata"):
E           Failed: DID NOT RAISE <class 'TypeError'>

tests/test_package_loader.py:281: Failed
_________________________________________________________ TestTemplateRendering.test_render_simple_template _________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1047d5a90>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e710>

    @pytest.mark.asyncio
    async def test_render_simple_template(self, environment: AsyncEnvironment) -> None:
>       template = await environment.get_template_async("simple.html")

tests/test_template_rendering.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:104: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:170: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:197: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:85: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:764: in compile
    source = self._generate(source, name, filename, defer_init=defer_init)
jinja2_async_environment/environment.py:41: in _generate
    ).generate(source)  # type: ignore
jinja2_async_environment/compiler.py:63: in generate
    self.blockvisit(node.body, frame)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:449: in blockvisit
    self.visit(node, frame)
.venv/lib/python3.13/site-packages/jinja2/visitor.py:40: in visit
    return f(node, *args, **kwargs)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:1568: in visit_Output
    self._output_child_pre(item, frame, finalize)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x1049748a0>, node = TemplateData(data='<h1>Hello, ')
frame = <jinja2_async_environment.compiler.AsyncFrame object at 0x1049550d0>
finalize = _FinalizeInfo(const=<function CodeGenerator._default_finalize at 0x1044e9580>, src=None)

    def _output_child_pre(
        self, node: nodes.Expr, frame: Frame, finalize: _FinalizeInfo
    ) -> None:
        """Output extra source code before visiting a child of an
        ``Output`` node.
        """
>       if frame.eval_ctx.volatile:
E       AttributeError: 'NoneType' object has no attribute 'volatile'

.venv/lib/python3.13/site-packages/jinja2/compiler.py:1482: AttributeError
____________________________________________________ TestTemplateRendering.test_render_template_with_inheritance ____________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1047d5950>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e490>

    @pytest.mark.asyncio
    async def test_render_template_with_inheritance(
        self, environment: AsyncEnvironment
    ) -> None:
>       template = await environment.get_template_async("child.html")

tests/test_template_rendering.py:57: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:104: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:170: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:197: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:91: in load_async
    return environment.template_class.from_code(
.venv/lib/python3.13/site-packages/jinja2/environment.py:1229: in from_code
    rv = cls._from_namespace(environment, namespace, globals)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

cls = <class 'jinja2.environment.Template'>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e490>
namespace = {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute... <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e490>, 'root': <function root at 0x10496bb00>}
globals = ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x10449c22...<class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>})

    @classmethod
    def _from_namespace(
        cls,
        environment: Environment,
        namespace: t.MutableMapping[str, t.Any],
        globals: t.MutableMapping[str, t.Any],
    ) -> "Template":
        t: Template = object.__new__(cls)
        t.environment = environment
        t.globals = globals
>       t.name = namespace["name"]
E       KeyError: 'name'

.venv/lib/python3.13/site-packages/jinja2/environment.py:1257: KeyError
______________________________________________________ TestTemplateRendering.test_render_template_with_include ______________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1047ed350>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e850>

    @pytest.mark.asyncio
    async def test_render_template_with_include(
        self, environment: AsyncEnvironment
    ) -> None:
>       template = await environment.get_template_async("include.html")

tests/test_template_rendering.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:104: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:170: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:197: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:91: in load_async
    return environment.template_class.from_code(
.venv/lib/python3.13/site-packages/jinja2/environment.py:1229: in from_code
    rv = cls._from_namespace(environment, namespace, globals)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

cls = <class 'jinja2.environment.Template'>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e850>
namespace = {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute... <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e850>, 'root': <function root at 0x104969c60>}
globals = ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x10449c22...<class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>})

    @classmethod
    def _from_namespace(
        cls,
        environment: Environment,
        namespace: t.MutableMapping[str, t.Any],
        globals: t.MutableMapping[str, t.Any],
    ) -> "Template":
        t: Template = object.__new__(cls)
        t.environment = environment
        t.globals = globals
>       t.name = namespace["name"]
E       KeyError: 'name'

.venv/lib/python3.13/site-packages/jinja2/environment.py:1257: KeyError
___________________________________________________________ TestTemplateRendering.test_render_async_block ___________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1047ed480>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e350>

    @pytest.mark.asyncio
    async def test_render_async_block(self, environment: AsyncEnvironment) -> None:
>       template = await environment.get_template_async("async_block.html")

tests/test_template_rendering.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:104: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:170: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:197: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:91: in load_async
    return environment.template_class.from_code(
.venv/lib/python3.13/site-packages/jinja2/environment.py:1229: in from_code
    rv = cls._from_namespace(environment, namespace, globals)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

cls = <class 'jinja2.environment.Template'>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e350>
namespace = {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute... <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e350>, 'root': <function root at 0x104944220>}
globals = ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x10449c22...<class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>})

    @classmethod
    def _from_namespace(
        cls,
        environment: Environment,
        namespace: t.MutableMapping[str, t.Any],
        globals: t.MutableMapping[str, t.Any],
    ) -> "Template":
        t: Template = object.__new__(cls)
        t.environment = environment
        t.globals = globals
>       t.name = namespace["name"]
E       KeyError: 'name'

.venv/lib/python3.13/site-packages/jinja2/environment.py:1257: KeyError
__________________________________________________________ TestTemplateRendering.test_render_async_include __________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1048196d0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1e5d0>

    @pytest.mark.asyncio
    async def test_render_async_include(self, environment: AsyncEnvironment) -> None:
>       template = await environment.get_template_async("async_include.html")

tests/test_template_rendering.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:104: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:170: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:197: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:85: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:764: in compile
    source = self._generate(source, name, filename, defer_init=defer_init)
jinja2_async_environment/environment.py:41: in _generate
    ).generate(source)  # type: ignore
jinja2_async_environment/compiler.py:63: in generate
    self.blockvisit(node.body, frame)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:449: in blockvisit
    self.visit(node, frame)
.venv/lib/python3.13/site-packages/jinja2/visitor.py:40: in visit
    return f(node, *args, **kwargs)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:1568: in visit_Output
    self._output_child_pre(item, frame, finalize)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x104976190>, node = TemplateData(data='Before ')
frame = <jinja2_async_environment.compiler.AsyncFrame object at 0x104955010>
finalize = _FinalizeInfo(const=<function CodeGenerator._default_finalize at 0x1044e9580>, src=None)

    def _output_child_pre(
        self, node: nodes.Expr, frame: Frame, finalize: _FinalizeInfo
    ) -> None:
        """Output extra source code before visiting a child of an
        ``Output`` node.
        """
>       if frame.eval_ctx.volatile:
E       AttributeError: 'NoneType' object has no attribute 'volatile'

.venv/lib/python3.13/site-packages/jinja2/compiler.py:1482: AttributeError
__________________________________________________________ TestTemplateRendering.test_render_async_extends __________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1047aae00>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1f390>

    @pytest.mark.asyncio
    async def test_render_async_extends(self, environment: AsyncEnvironment) -> None:
>       template = await environment.get_template_async("async_extends.html")

tests/test_template_rendering.py:99: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:104: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:170: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:197: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:91: in load_async
    return environment.template_class.from_code(
.venv/lib/python3.13/site-packages/jinja2/environment.py:1229: in from_code
    rv = cls._from_namespace(environment, namespace, globals)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

cls = <class 'jinja2.environment.Template'>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1f390>
namespace = {'__builtins__': {'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'Attribute... <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1f390>, 'root': <function root at 0x104944900>}
globals = ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x10449c22...<class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>})

    @classmethod
    def _from_namespace(
        cls,
        environment: Environment,
        namespace: t.MutableMapping[str, t.Any],
        globals: t.MutableMapping[str, t.Any],
    ) -> "Template":
        t: Template = object.__new__(cls)
        t.environment = environment
        t.globals = globals
>       t.name = namespace["name"]
E       KeyError: 'name'

.venv/lib/python3.13/site-packages/jinja2/environment.py:1257: KeyError
____________________________________________________ TestTemplateRendering.test_performance_with_large_template _____________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x1047aaf10>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x104e1f890>

    @pytest.mark.asyncio
    async def test_performance_with_large_template(
        self, environment: AsyncEnvironment
    ) -> None:
        large_template = "{% for i in range(1000) %}{{ i }}{% endfor %}"
    
        environment.loader.mapping["large.html"] = large_template  # type: ignore
    
>       template = await environment.get_template_async("large.html")

tests/test_template_rendering.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
jinja2_async_environment/environment.py:104: in get_template_async
    return await self._load_template_async(name, globals)
jinja2_async_environment/environment.py:170: in _load_template_async
    return await self._get_template_async(name, globals)
jinja2_async_environment/environment.py:197: in _get_template_async
    template = await self.loader.load_async(self, name, self.make_globals(globals))
jinja2_async_environment/loaders.py:85: in load_async
    code = environment.compile(source_str, name)
.venv/lib/python3.13/site-packages/jinja2/environment.py:764: in compile
    source = self._generate(source, name, filename, defer_init=defer_init)
jinja2_async_environment/environment.py:41: in _generate
    ).generate(source)  # type: ignore
jinja2_async_environment/compiler.py:63: in generate
    self.blockvisit(node.body, frame)
.venv/lib/python3.13/site-packages/jinja2/compiler.py:449: in blockvisit
    self.visit(node, frame)
.venv/lib/python3.13/site-packages/jinja2/visitor.py:40: in visit
    return f(node, *args, **kwargs)
jinja2_async_environment/compiler.py:91: in visit_For
    self.visit(node.iter, frame)
.venv/lib/python3.13/site-packages/jinja2/visitor.py:40: in visit
    return f(node, *args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x104974c30>
node = Call(node=Name(name='range', ctx='load'), args=[Const(value=1000)], kwargs=[], dyn_args=None, dyn_kwargs=None)
frame = <jinja2_async_environment.compiler.AsyncFrame object at 0x104955cd0>, kwargs = {}

    def new_func(
        self: "CodeGenerator", node: nodes.Expr, frame: "Frame", **kwargs: t.Any
    ) -> t.Any:
        # Only optimize if the frame is not volatile
>       if self.optimizer is not None and not frame.eval_ctx.volatile:
E       AttributeError: 'NoneType' object has no attribute 'volatile'

.venv/lib/python3.13/site-packages/jinja2/compiler.py:50: AttributeError
========================================================================== tests coverage ===========================================================================
_________________________________________________________ coverage: platform darwin, python 3.13.3-final-0 __________________________________________________________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          45      0   100%
jinja2_async_environment/compiler.py        182     43    76%
jinja2_async_environment/environment.py     113     19    83%
jinja2_async_environment/loaders.py         218     61    72%
-------------------------------------------------------------
TOTAL                                       558    123    78%
====================================================================== short test summary info ======================================================================
FAILED tests/test_choice_loader.py::TestAsyncChoiceLoader::test_load_async - AttributeError: 'NoneType' object has no attribute 'volatile'
FAILED tests/test_dict_loader.py::TestAsyncDictLoader::test_load_async - AttributeError: 'NoneType' object has no attribute 'volatile'
FAILED tests/test_function_loader.py::TestAsyncFunctionLoader::test_load_async - AttributeError: 'NoneType' object has no attribute 'volatile'
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_init_template_root_not_found - Failed: DID NOT RAISE <class 'ValueError'>
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_init_success - AssertionError: assert <MagicMock name='mock().loader.archive' id='4371265728'> is None
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_get_source_async_success - jinja2.exceptions.TemplateNotFound: template.html
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_regular - assert 0 == 3
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_zip_no_files - Failed: DID NOT RAISE <class 'TypeError'>
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_simple_template - AttributeError: 'NoneType' object has no attribute 'volatile'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance - KeyError: 'name'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_include - KeyError: 'name'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_block - KeyError: 'name'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_include - AttributeError: 'NoneType' object has no attribute 'volatile'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends - KeyError: 'name'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_performance_with_large_template - AttributeError: 'NoneType' object has no attribute 'volatile'
=================================================================== 15 failed, 81 passed in 3.83s ===================================================================
(jinja2-async-environment) [jinja2-async-environment]                                                                                                      main  ✭ ✱
