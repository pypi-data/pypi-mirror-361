import os
import logging

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (–≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç)
LIB_DIR = os.path.dirname(os.path.abspath(__file__))

# –ü–æ–¥–ø–∞–ø–∫–∞ logs –≤ –∫–æ—Ä–Ω–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
LOG_DIR = os.path.join(LIB_DIR, "logs")

def setup_logging(log_file_name="library.log"):
    """
    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ logs/ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –≤ —Ñ–∞–π–ª (–±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏).
    
    Args:
        log_file_name (str): –ò–º—è –ª–æ–≥-—Ñ–∞–π–ª–∞. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 'library.log'.
    
    Returns:
        logging.Logger: –ì–æ—Ç–æ–≤—ã–π –ª–æ–≥–≥–µ—Ä.
    """
    os.makedirs(LOG_DIR, exist_ok=True)
    log_path = os.path.join(LOG_DIR, log_file_name)

    logger = logging.getLogger(f"LibraryLogger::{log_file_name}")
    logger.setLevel(logging.INFO)
    logger.propagate = False  # –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–æ–≤ –≤ root-–ª–æ–≥–≥–µ—Ä–µ

    # –û—á–∏—Å—Ç–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã
    if logger.hasHandlers():
        logger.handlers.clear()

    formatter = logging.Formatter('%(asctime)s - %(message)s', datefmt='%Y-%m-%d %H:%M:%S')

    # üìÇ –§–∞–π–ª-–ª–æ–≥ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞, –∞ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å)
    file_handler = logging.FileHandler(log_path, encoding='utf-8', mode='a')
    file_handler.setFormatter(formatter)
    logger.addHandler(file_handler)

    # üñ• –ö–æ–Ω—Å–æ–ª—å (–¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –æ—Ç–ª–∞–¥–∫–∏)
    console_handler = logging.StreamHandler()
    console_handler.setFormatter(formatter)
    logger.addHandler(console_handler)

    return logger
