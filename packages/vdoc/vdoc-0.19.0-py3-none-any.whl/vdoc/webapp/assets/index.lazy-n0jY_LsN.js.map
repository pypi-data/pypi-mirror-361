{"version":3,"file":"index.lazy-n0jY_LsN.js","sources":["../../../../node_modules/@mui/material/esm/CardActions/cardActionsClasses.js","../../../../node_modules/@mui/material/esm/CardActions/CardActions.js","../../../ui/interfacesAndTypes/LinkButton.tsx","../../../ui/helpers/Projects.ts","../../../ui/routes/index.lazy.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardActionsUtilityClass } from \"./cardActionsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  variants: [{\n    props: {\n      disableSpacing: false\n    },\n    style: {\n      '& > :not(style) ~ :not(style)': {\n        marginLeft: 8\n      }\n    }\n  }]\n});\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n    disableSpacing = false,\n    className,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disableSpacing\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import * as React from 'react'\nimport { createLink, LinkComponent } from '@tanstack/react-router'\nimport { Button, ButtonProps } from '@mui/material'\n\nconst MUILinkComponent = React.forwardRef<HTMLAnchorElement, ButtonProps>((props, ref) => {\n  return <Button component={'a'} ref={ref} {...props} />\n})\n\nconst CreatedLinkComponent = createLink(MUILinkComponent)\n\nexport const LinkButton: LinkComponent<typeof MUILinkComponent> = (props) => {\n  return <CreatedLinkComponent {...props} />\n}\n","import type { Project, ProjectCategory } from '../interfacesAndTypes/Project'\n\nexport function groupProjectsByCategories(\n  projects: Project[],\n  projectCategories: ProjectCategory[]\n): Record<string, Project[]> {\n  const grouped: Record<string, Project[]> = {}\n  const categoriesCopy = [...projectCategories, { id: null, name: 'Misc' }].sort((a, b) => {\n    if (a.id === null) return 1\n    if (b.id === null) return -1\n    return a.id - b.id\n  })\n\n  categoriesCopy.forEach((category) => {\n    const filteredProjects = projects.filter((project) => project.category_id === category.id)\n    if (filteredProjects.length > 0) {\n      grouped[category.name] = filteredProjects\n    }\n  })\n\n  return grouped\n}\n","import { useMemo } from 'react'\nimport { createLazyFileRoute } from '@tanstack/react-router'\nimport { LinkButton } from '../interfacesAndTypes/LinkButton'\nimport { groupProjectsByCategories } from '../helpers/Projects'\nimport { Box, Container, Card, CardActions, CardContent, Grid, Typography } from '@mui/material'\nimport testIDs from '../interfacesAndTypes/testIDs'\nimport { Project, ProjectCategory } from '../interfacesAndTypes/Project'\n\nexport const Route = createLazyFileRoute('/')({\n  component: Index,\n})\n\nfunction Index() {\n  const [projects, projectCategories]: [Project[], ProjectCategory[]] = Route.useLoaderData()\n\n  const getGroupedProjects = useMemo(() => {\n    return groupProjectsByCategories(projects, projectCategories)\n  }, [projects, projectCategories])\n  return (\n    <Container sx={{ mt: 2 }}>\n      {Object.entries(getGroupedProjects).map(([category, projects]) => (\n        <Box key={category} sx={{ mb: 4 }} data-testid={testIDs.landingPage.projectCategories.projectCategory.main}>\n          <Typography\n            variant=\"h6\"\n            sx={{ mb: 2, textTransform: 'uppercase' }}\n            data-testid={testIDs.landingPage.projectCategories.projectCategory.title}\n          >\n            {category}\n          </Typography>\n          <Box sx={{ flexGrow: 1 }}>\n            <Grid\n              container\n              direction=\"row\"\n              sx={{\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n              }}\n              spacing={2}\n              data-testid={testIDs.landingPage.projectCategories.projectCategory.projects.main}\n            >\n              {projects.map((project) => (\n                <IndexProjectCard key={project.name} project={project} />\n              ))}\n            </Grid>\n          </Box>\n        </Box>\n      ))}\n    </Container>\n  )\n}\n\nfunction IndexProjectCard({ project }: { project: Project }) {\n  return (\n    <Grid size={{ xs: 6, md: 4, lg: 3 }}>\n      <Card\n        sx={{ minHeight: 120 }}\n        data-testid={testIDs.landingPage.projectCategories.projectCategory.projects.projectCard.main}\n      >\n        <CardContent>\n          <Typography\n            gutterBottom\n            sx={{ color: 'text.secondary', fontSize: 14 }}\n            data-testid={testIDs.landingPage.projectCategories.projectCategory.projects.projectCard.title}\n          >\n            {project.display_name}\n          </Typography>\n        </CardContent>\n        <CardActions\n          data-testid={testIDs.landingPage.projectCategories.projectCategory.projects.projectCard.actions.main}\n        >\n          <LinkButton\n            data-testid={\n              testIDs.landingPage.projectCategories.projectCategory.projects.projectCard.actions.documentationLink\n            }\n            to={`/$projectName/$version/$`}\n            params={{ projectName: project.name, version: 'latest', _splat: '' }}\n            size=\"small\"\n          >\n            Documentation\n          </LinkButton>\n        </CardActions>\n      </Card>\n    </Grid>\n  )\n}\n"],"names":["getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","useUtilityClasses","ownerState","classes","disableSpacing","composeClasses","CardActionsRoot","styled","props","styles","CardActions","React.forwardRef","inProps","ref","useDefaultProps","className","other","clsx","MUILinkComponent","Button","CreatedLinkComponent","createLink","LinkButton","jsx","groupProjectsByCategories","projects","projectCategories","grouped","a","b","category","filteredProjects","project","Route","createLazyFileRoute","Index","getGroupedProjects","useMemo","Container","jsxs","Box","testIDs","Typography","Grid","IndexProjectCard","Card","CardContent"],"mappings":"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","x_google_ignoreList":[0,1]}