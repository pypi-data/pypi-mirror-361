[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "atr-dan"
version = "0.2.2rc2"
description = "Teklia DAN"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Teklia", email = "contact@teklia.com" },
]
dependencies = [
    "albumentations==1.4.19",
    "arkindex-export==0.1.12",
    "flashlight-text==0.0.7",
    "imageio==2.26.1",
    "imagesize==1.4.1",
    "lxml==5.2.1",
    "matplotlib==3.8.3",
    "mdutils==1.6.0",
    "nltk==3.9.1",
    "numpy==1.26.0",
    "PyYAML==6.0.2",
    "scipy==1.12.0",
    "sentencepiece==0.2.0",
    "teklia-line-image-extractor==0.6.0",
    "teklia-nerval==0.3.3",
    "tenacity==8.2.3",
    "tensorboard==2.17.0",
    "torch==2.4.0",
    "torchaudio==2.4.0",
    "torchvision==0.19.0",
    "tqdm==4.66.5",
    "wandb==0.17.0",
]

keywords = ["python", "HTR", "OCR", "NER", "machine learning", "pytorch"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: CeCILL-C Free Software License Agreement (CECILL-C)",
    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    # Topics
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
]

[project.optional-dependencies]
mlflow = [
    "mlflow-skinny==2.2.2",
    "pandas==2.2.3",
    "boto3==1.26.124",
]

[project.scripts]
teklia-dan = "dan.cli:main"

[project.urls]
Homepage = "https://atr.pages.teklia/dan/"
Documentation = "https://atr.pages.teklia/dan/"
Repository = "https://gitlab.teklia.com/atr/dan"
"Bug Tracker" = "https://gitlab.teklia.com/atr/dan/issues"
Maintainers = "https://teklia.com"

[tool.setuptools]
license-files = ["LICENSE", "LICENCE"]

[tool.setuptools.packages]
find = {}

[tool.ruff]
exclude = [".git", "__pycache__"]
target-version = "py312"

[tool.ruff.lint]
ignore = ["E501"]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # Flake8 Debugger
    "T1",
    # Isort
    "I",
    # Pathlib usage
    "PTH",
    # Implicit Optional
    "RUF013"
]

[tool.ruff.lint.isort]
known-first-party = ["arkindex_export", "line_image_extractor"]
known-third-party = [
    "albumentations",
    "cv2",
    "editdistance",
    "imageio",
    "nerval",
    "numpy",
    "scipy",
    "tensorboard",
    "torch",
    "torchvision",
    "tqdm",
    "wandb",
    "yaml"
]
