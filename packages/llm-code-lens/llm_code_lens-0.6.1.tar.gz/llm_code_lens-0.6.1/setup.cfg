# setup.cfg
[metadata]
name = llm_code_lens
version = "0.6.1"
description = Ultra-fast intelligent code analysis tool for LLM context generation with Tree-sitter
long_description = file: README.md
long_description_content_type = text/markdown
author = Arsen Apostolov
author_email = arsen.apostolov@gmail.com
url = https://github.com/SikamikanikoBG/codelens.git
project_urls =
    Bug Tracker = https://github.com/SikamikanikoBG/codelens/issues
    Documentation = https://github.com/SikamikanikoBG/codelens/blob/main/README.md
    Source Code = https://github.com/SikamikanikoBG/codelens
keywords = code analysis, llm, tree-sitter, static analysis, sql analysis, performance
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Topic :: Software Development :: Code Generators
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Text Processing :: Linguistic

[options]
package_dir =
    = src
packages = find:
python_requires = >=3.8
install_requires =
    # Core CLI and UI
    click>=8.0.0
    rich>=10.0.0
    
    # Ultra-fast parsing engine (10-100x performance improvement)
    tree-sitter>=0.20.0
    tree-sitter-python>=0.20.0
    tree-sitter-javascript>=0.20.0
    tree-sitter-typescript>=0.20.0
    
    # Ultra-fast file filtering (10-50x performance improvement)
    pathspec>=0.11.0
    
    # Token processing and utilities
    tiktoken>=0.5.0
    packaging>=22.0.0
    requests>=2.28.0
    pyperclip>=1.8.0
    
    # Python project support
    tomli>=2.0.0; python_version<"3.11"
    
    # Optional SQL Server connectivity (conditional)
    pyodbc>=4.0.39; platform_system!="Darwin"
    
    # Platform-specific dependencies
    windows-curses; platform_system=="Windows"

[options.packages.find]
where = src

[options.entry_points]
console_scripts =
    llmcl = llm_code_lens.cli:main

[options.extras_require]
dev = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
    black>=23.0.0
    isort>=5.13.0
    radon>=5.0.0
    mypy>=1.0.0

# Fast installation (excludes SQL Server support)
fast = 
    click>=8.0.0
    rich>=10.0.0
    tree-sitter>=0.20.0
    tree-sitter-python>=0.20.0
    tree-sitter-javascript>=0.20.0
    tree-sitter-typescript>=0.20.0
    pathspec>=0.11.0
    tiktoken>=0.5.0
    packaging>=22.0.0
    requests>=2.28.0
    pyperclip>=1.8.0
    tomli>=2.0.0; python_version<"3.11"
    windows-curses; platform_system=="Windows"

# Full installation with SQL support
full = 
    click>=8.0.0
    rich>=10.0.0
    tree-sitter>=0.20.0
    tree-sitter-python>=0.20.0
    tree-sitter-javascript>=0.20.0
    tree-sitter-typescript>=0.20.0
    pathspec>=0.11.0
    tiktoken>=0.5.0
    packaging>=22.0.0
    requests>=2.28.0
    pyperclip>=1.8.0
    tomli>=2.0.0; python_version<"3.11"
    pyodbc>=4.0.39
    windows-curses; platform_system=="Windows"

# Performance testing and profiling
perf = 
    pytest-benchmark>=4.0.0
    memory-profiler>=0.60.0
    line-profiler>=4.0.0

[bdist_wheel]
universal = 0

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
markers =
    slow: marks tests as slow
    integration: marks tests as integration tests
    treesitter: marks tests requiring Tree-sitter
    performance: marks performance benchmark tests
addopts = 
    --verbose
    --cov=llm_code_lens
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=85

[coverage:run]
source = src/llm_code_lens
omit = 
    */tests/*
    */test_*
    */conftest.py
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
