/**
 * Returns the absolute value of a number.
 *
 * The absolute value of a number is its unsigned magnitude.
 *
 * For example, Abs(-1) and Abs(1) both return 1.
 * The following example uses the Abs function to compute the absolute value of a number:
 *
 * ```hulo
 * Abs(50.3) // 50.3
 * Abs(-50.3) // 50.3
 * ```
 */
declare fn Abs(x: num) -> num

/**
 * Returns the arctangent of a number.
 *
 * The Atn function takes the ratio of two sides of a right triangle (number) and returns the corresponding angle in radians.
 * The ratio is the length of the side opposite the angle divided by the length of the side adjacent to the angle.
 * The range of the result is -pi/2 to pi/2 radians.
 * To convert degrees to radians, multiply degrees by pi/180.
 * To convert radians to degrees, multiply radians by 180/pi.
 *
 * The following example uses Atn to calculate the value of pi:
 * ```hulo
 * import * from "math"
 *
 * let pi = 4 * Atn(1)
 * assert($pi, $PI)
 * ```
 */
declare fn Atn(x: num) -> num

// Returns the cosine of an angle.
declare fn Cos(v: num) -> Single

// Returns e (the base of natural logarithms) raised to a power.
declare fn Exp(v: num) -> num

// Returns the natural logarithm of a number.
declare fn Log(x: num) -> num

// Returns a random number.
declare fn Rnd(seed: num?) -> num

// Returns a number rounded to a specified number of decimal places.
declare fn Round(v: num, numdecimalplaces?: num) -> num

// Returns an integer indicating the sign of a number.
declare fn Sgn(x: num) -> num

// Returns the sine of an angle.
declare fn Sin(x: num) -> num

declare fn Sqr(x: num) -> num

// Returns the tangent of an angle.
declare fn Tan(x: num) -> num
