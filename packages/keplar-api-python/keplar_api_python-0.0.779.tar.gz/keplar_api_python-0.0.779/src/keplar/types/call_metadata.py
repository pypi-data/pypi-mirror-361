# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .transcript_quality import TranscriptQuality


class CallMetadata(UniversalBaseModel):
    recording_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="recordingUrl")] = None
    transcript: typing.Optional[str] = None
    transcript_quality: typing_extensions.Annotated[
        typing.Optional[TranscriptQuality], FieldMetadata(alias="transcriptQuality")
    ] = None
    transcript_markdown: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="transcriptMarkdown")
    ] = None
    transcript_insight: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="transcriptInsight")] = (
        None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
