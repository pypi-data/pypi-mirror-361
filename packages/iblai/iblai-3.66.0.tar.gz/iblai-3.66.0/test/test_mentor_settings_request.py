# coding: utf-8

"""
    ibl-data-manager

    API for iblai

    The version of the OpenAPI document: 3.6.0-ai-plus
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iblai.models.mentor_settings_request import MentorSettingsRequest

class TestMentorSettingsRequest(unittest.TestCase):
    """MentorSettingsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MentorSettingsRequest:
        """Test MentorSettingsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MentorSettingsRequest`
        """
        model = MentorSettingsRequest()
        if include_optional:
            return MentorSettingsRequest(
                mentor_name = '',
                display_name = '',
                profile_image = '',
                initial_message = '',
                suggested_message = '',
                theme = '',
                user_message_color = '',
                mentor_bubble_color = '',
                align_mentor_bubble = '',
                system_prompt = '',
                llm_provider = '',
                llm_name = '',
                featured = True,
                metadata = None,
                custom_css = '',
                mentor_visibility = '',
                enable_image_generation = True,
                enable_web_browsing = True,
                enable_code_interpreter = True,
                allow_anonymous = True,
                mentor_description = '',
                uploaded_profile_image = '',
                proactive_message = '',
                can_use_tools = True,
                tool_slugs = [
                    ''
                    ],
                llm_temperature = 0.0,
                proactive_prompt = '',
                moderation_system_prompt = '',
                moderation_response = '',
                enable_moderation = True,
                safety_system_prompt = '',
                safety_response = '',
                enable_safety_system = True
            )
        else:
            return MentorSettingsRequest(
        )
        """

    def testMentorSettingsRequest(self):
        """Test MentorSettingsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
