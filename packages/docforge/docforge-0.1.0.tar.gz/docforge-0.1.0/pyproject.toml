# pyproject.toml
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "docforge"
version = "0.1.0"
description = "Forge perfect documents from any format with precision, power, and simplicity"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Oscar Song", email = "oscar2song@gmail.com"}
]
maintainers = [
    {name = "Oscar Song", email = "oscar2song@gmail.com"}
]
keywords = ["pdf", "ocr", "document", "processing", "optimization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Text Processing :: Markup",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "Pillow>=9.0.0",
    "PyPDF2>=3.0.0",
    "pytesseract>=0.3.10",
    "pdf2image>=1.16.0",
    "tqdm>=4.64.0",
    "pyyaml>=6.0",
    "colorama>=0.4.4",
    "rich>=12.0.0",
    # Add these missing dependencies:
    "reportlab>=3.6.0",
    "PyMuPDF>=1.20.0",
    "python-docx>=0.8.11",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
web = [
    "fastapi>=0.85.0",
    "uvicorn>=0.18.0",
    "jinja2>=3.0.0",
    "python-multipart>=0.0.5",
]
all = [
    "docforge[dev,web]"
]

[project.urls]
Homepage = "https://github.com/oscar2song/docforge"
Documentation = "https://oscar2song.github.io/docforge"
Repository = "https://github.com/oscar2song/docforge.git"
"Bug Tracker" = "https://github.com/oscar2song/docforge/issues"
Changelog = "https://github.com/oscar2song/docforge/blob/main/CHANGELOG.md"

[project.scripts]
docforge = "docforge.main:main"
docforge-web = "docforge.web.app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["docforge*"]
exclude = [
    "tests*",
    "logs*",
    "temp*",
    "local*",
    "venv*",
    ".*",
    "build*",
    "dist*",
    "__pycache__*"
]

[tool.setuptools.package-data]
docforge = ["config/*.yaml", "web/templates/*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pytesseract.*",
    "pdf2image.*",
    "PyPDF2.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["docforge"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 configuration would go in setup.cfg or .flake8
# since flake8 doesn't support pyproject.toml yet
