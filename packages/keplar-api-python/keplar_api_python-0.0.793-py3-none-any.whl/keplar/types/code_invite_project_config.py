# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .project_screener_question_public import ProjectScreenerQuestionPublic


class CodeInviteProjectConfig(UniversalBaseModel):
    max_duration_seconds: typing_extensions.Annotated[float, FieldMetadata(alias="maxDurationSeconds")]
    collect_email: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="collectEmail")] = None
    screener_questions: typing_extensions.Annotated[
        typing.Optional[typing.List[ProjectScreenerQuestionPublic]], FieldMetadata(alias="screenerQuestions")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
