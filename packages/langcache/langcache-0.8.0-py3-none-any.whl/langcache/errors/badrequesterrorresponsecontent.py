"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from langcache.errors import LangCacheError
from langcache.models import badrequesterroruri as models_badrequesterroruri
from langcache.types import BaseModel
from typing import Optional


class BadRequestErrorResponseContentData(BaseModel):
    title: str
    r"""A short, human-readable summary of the problem type"""

    type: models_badrequesterroruri.BadRequestErrorURI

    status: Optional[int] = 400
    r"""The HTTP status code generated by the origin server for this occurrence of the problem"""

    detail: Optional[str] = None
    r"""A human-readable explanation specific to this occurrence of the problem"""


class BadRequestErrorResponseContent(LangCacheError):
    data: BadRequestErrorResponseContentData

    def __init__(
        self,
        data: BadRequestErrorResponseContentData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        self.data = data
