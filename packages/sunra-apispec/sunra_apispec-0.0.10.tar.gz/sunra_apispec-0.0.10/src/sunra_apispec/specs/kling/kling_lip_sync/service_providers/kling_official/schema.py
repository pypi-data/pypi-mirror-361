"""
Schema definitions for Kling Lip Sync Official API.
"""

from typing import Optional, Literal, List, Dict, Any
from pydantic import BaseModel, Field


class KlingLipSyncInput(BaseModel):
    """Input schema for Kling Lip Sync generation."""
    
    input: Dict[str, Any] = Field(
        ..., 
        description="Input configuration for lip sync"
    )
    callback_url: Optional[str] = Field(
        None, 
        description="Callback URL for task completion notification"
    )


class KlingLipSyncInputConfig(BaseModel):
    """Configuration for lip sync input."""
    
    video_id: Optional[str] = Field(
        None, 
        description="The ID of the video generated by the Kling AI"
    )
    video_url: Optional[str] = Field(
        None, 
        description="Get link for uploaded video"
    )
    mode: Literal["text2video", "audio2video"] = Field(
        ..., 
        description="Video generation mode"
    )
    text: Optional[str] = Field(
        None, 
        max_length=120,
        description="Text content for lip-sync video generation"
    )
    voice_id: Optional[str] = Field(
        None, 
        description="Voice ID for text-to-video mode"
    )
    voice_language: Optional[Literal["zh", "en"]] = Field(
        "zh", 
        description="Voice language"
    )
    voice_speed: Optional[float] = Field(
        1.0, 
        ge=0.8, 
        le=2.0,
        description="Speech rate"
    )
    audio_type: Optional[Literal["file", "url"]] = Field(
        None, 
        description="Method of transmitting audio files"
    )
    audio_file: Optional[str] = Field(
        None, 
        description="Local path of audio file (base64 encoded)"
    )
    audio_url: Optional[str] = Field(
        None, 
        description="Audio file download URL"
    )


class KlingVideoOutput(BaseModel):
    """Output schema for Kling video generation."""
    
    id: str = Field(..., description="Generated video ID")
    url: str = Field(..., description="URL for the generated video")
    duration: str = Field(..., description="Total video duration in seconds")


class KlingTaskResult(BaseModel):
    """Task result schema for Kling API response."""
    
    videos: List[KlingVideoOutput] = Field(..., description="List of generated videos")


class KlingApiResponse(BaseModel):
    """Complete API response schema for Kling."""
    
    code: int = Field(..., description="Response code")
    message: str = Field(..., description="Response message")
    request_id: str = Field(..., description="Request ID")
    data: Dict[str, Any] = Field(..., description="Response data") 