# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# FlexProfile calculation pipeline parameters for the axis FlexProfile command
class AxsCmdFlexProfileParams(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AxsCmdFlexProfileParams()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAxsCmdFlexProfileParams(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AxsCmdFlexProfileParams
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # master offset value
    # AxsCmdFlexProfileParams
    def MasterOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # slave offset value
    # AxsCmdFlexProfileParams
    def SlaveOffset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # ratio numerator value
    # AxsCmdFlexProfileParams
    def RatioNumerator(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 1

    # ratio denominator value
    # AxsCmdFlexProfileParams
    def RatioDenominator(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 1

    # fine adjust parameter
    # AxsCmdFlexProfileParams
    def FineAdjust(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # profileEntry parameter e.g. SLAVE_CURRENT_MASTER_CURRENT
    # AxsCmdFlexProfileParams
    def ProfileEntry(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 1

    # profile parameter e.g. "0", "1", "2", "3"
    # AxsCmdFlexProfileParams
    def Profile(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # profile execution mode e.g. CYCLIC or SINGLE
    # AxsCmdFlexProfileParams
    def ProfileExecutionMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # position that switches a FlexProfile
    # AxsCmdFlexProfileParams
    def SwitchPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # switch the profile on the switch position
    # AxsCmdFlexProfileParams
    def SwitchProfileOnPos(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # switch the gear on the switch position
    # AxsCmdFlexProfileParams
    def SwitchGearOnPos(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # angle adjust
    # AxsCmdFlexProfileParams
    def AngleAdjust(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # slave adjust
    # AxsCmdFlexProfileParams
    def SlaveAdjust(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def AxsCmdFlexProfileParamsStart(builder): builder.StartObject(13)
def Start(builder):
    return AxsCmdFlexProfileParamsStart(builder)
def AxsCmdFlexProfileParamsAddMasterOffset(builder, masterOffset): builder.PrependFloat64Slot(0, masterOffset, 0.0)
def AddMasterOffset(builder, masterOffset):
    return AxsCmdFlexProfileParamsAddMasterOffset(builder, masterOffset)
def AxsCmdFlexProfileParamsAddSlaveOffset(builder, slaveOffset): builder.PrependFloat64Slot(1, slaveOffset, 0.0)
def AddSlaveOffset(builder, slaveOffset):
    return AxsCmdFlexProfileParamsAddSlaveOffset(builder, slaveOffset)
def AxsCmdFlexProfileParamsAddRatioNumerator(builder, ratioNumerator): builder.PrependInt32Slot(2, ratioNumerator, 1)
def AddRatioNumerator(builder, ratioNumerator):
    return AxsCmdFlexProfileParamsAddRatioNumerator(builder, ratioNumerator)
def AxsCmdFlexProfileParamsAddRatioDenominator(builder, ratioDenominator): builder.PrependInt32Slot(3, ratioDenominator, 1)
def AddRatioDenominator(builder, ratioDenominator):
    return AxsCmdFlexProfileParamsAddRatioDenominator(builder, ratioDenominator)
def AxsCmdFlexProfileParamsAddFineAdjust(builder, fineAdjust): builder.PrependFloat64Slot(4, fineAdjust, 0.0)
def AddFineAdjust(builder, fineAdjust):
    return AxsCmdFlexProfileParamsAddFineAdjust(builder, fineAdjust)
def AxsCmdFlexProfileParamsAddProfileEntry(builder, profileEntry): builder.PrependInt8Slot(5, profileEntry, 1)
def AddProfileEntry(builder, profileEntry):
    return AxsCmdFlexProfileParamsAddProfileEntry(builder, profileEntry)
def AxsCmdFlexProfileParamsAddProfile(builder, profile): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(profile), 0)
def AddProfile(builder, profile):
    return AxsCmdFlexProfileParamsAddProfile(builder, profile)
def AxsCmdFlexProfileParamsAddProfileExecutionMode(builder, profileExecutionMode): builder.PrependInt8Slot(7, profileExecutionMode, 0)
def AddProfileExecutionMode(builder, profileExecutionMode):
    return AxsCmdFlexProfileParamsAddProfileExecutionMode(builder, profileExecutionMode)
def AxsCmdFlexProfileParamsAddSwitchPosition(builder, switchPosition): builder.PrependFloat64Slot(8, switchPosition, 0.0)
def AddSwitchPosition(builder, switchPosition):
    return AxsCmdFlexProfileParamsAddSwitchPosition(builder, switchPosition)
def AxsCmdFlexProfileParamsAddSwitchProfileOnPos(builder, switchProfileOnPos): builder.PrependBoolSlot(9, switchProfileOnPos, 0)
def AddSwitchProfileOnPos(builder, switchProfileOnPos):
    return AxsCmdFlexProfileParamsAddSwitchProfileOnPos(builder, switchProfileOnPos)
def AxsCmdFlexProfileParamsAddSwitchGearOnPos(builder, switchGearOnPos): builder.PrependBoolSlot(10, switchGearOnPos, 0)
def AddSwitchGearOnPos(builder, switchGearOnPos):
    return AxsCmdFlexProfileParamsAddSwitchGearOnPos(builder, switchGearOnPos)
def AxsCmdFlexProfileParamsAddAngleAdjust(builder, angleAdjust): builder.PrependFloat64Slot(11, angleAdjust, 0.0)
def AddAngleAdjust(builder, angleAdjust):
    return AxsCmdFlexProfileParamsAddAngleAdjust(builder, angleAdjust)
def AxsCmdFlexProfileParamsAddSlaveAdjust(builder, slaveAdjust): builder.PrependFloat64Slot(12, slaveAdjust, 0.0)
def AddSlaveAdjust(builder, slaveAdjust):
    return AxsCmdFlexProfileParamsAddSlaveAdjust(builder, slaveAdjust)
def AxsCmdFlexProfileParamsEnd(builder): return builder.EndObject()
def End(builder):
    return AxsCmdFlexProfileParamsEnd(builder)

class AxsCmdFlexProfileParamsT(object):

    # AxsCmdFlexProfileParamsT
    def __init__(self):
        self.masterOffset = 0.0  # type: float
        self.slaveOffset = 0.0  # type: float
        self.ratioNumerator = 1  # type: int
        self.ratioDenominator = 1  # type: int
        self.fineAdjust = 0.0  # type: float
        self.profileEntry = 1  # type: int
        self.profile = None  # type: str
        self.profileExecutionMode = 0  # type: int
        self.switchPosition = 0.0  # type: float
        self.switchProfileOnPos = False  # type: bool
        self.switchGearOnPos = False  # type: bool
        self.angleAdjust = 0.0  # type: float
        self.slaveAdjust = 0.0  # type: float

    @classmethod
    def InitFromBuf(cls, buf, pos):
        axsCmdFlexProfileParams = AxsCmdFlexProfileParams()
        axsCmdFlexProfileParams.Init(buf, pos)
        return cls.InitFromObj(axsCmdFlexProfileParams)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, axsCmdFlexProfileParams):
        x = AxsCmdFlexProfileParamsT()
        x._UnPack(axsCmdFlexProfileParams)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.masterOffset == other.masterOffset and \
            self.slaveOffset == other.slaveOffset and \
            self.ratioNumerator == other.ratioNumerator and \
            self.ratioDenominator == other.ratioDenominator and \
            self.fineAdjust == other.fineAdjust and \
            self.profileEntry == other.profileEntry and \
            self.profile == other.profile and \
            self.profileExecutionMode == other.profileExecutionMode and \
            self.switchPosition == other.switchPosition and \
            self.switchProfileOnPos == other.switchProfileOnPos and \
            self.switchGearOnPos == other.switchGearOnPos and \
            self.angleAdjust == other.angleAdjust and \
            self.slaveAdjust == other.slaveAdjust

    # AxsCmdFlexProfileParamsT
    def _UnPack(self, axsCmdFlexProfileParams):
        if axsCmdFlexProfileParams is None:
            return
        self.masterOffset = axsCmdFlexProfileParams.MasterOffset()
        self.slaveOffset = axsCmdFlexProfileParams.SlaveOffset()
        self.ratioNumerator = axsCmdFlexProfileParams.RatioNumerator()
        self.ratioDenominator = axsCmdFlexProfileParams.RatioDenominator()
        self.fineAdjust = axsCmdFlexProfileParams.FineAdjust()
        self.profileEntry = axsCmdFlexProfileParams.ProfileEntry()
        self.profile = axsCmdFlexProfileParams.Profile()
        self.profileExecutionMode = axsCmdFlexProfileParams.ProfileExecutionMode()
        self.switchPosition = axsCmdFlexProfileParams.SwitchPosition()
        self.switchProfileOnPos = axsCmdFlexProfileParams.SwitchProfileOnPos()
        self.switchGearOnPos = axsCmdFlexProfileParams.SwitchGearOnPos()
        self.angleAdjust = axsCmdFlexProfileParams.AngleAdjust()
        self.slaveAdjust = axsCmdFlexProfileParams.SlaveAdjust()

    # AxsCmdFlexProfileParamsT
    def Pack(self, builder):
        if self.profile is not None:
            profile = builder.CreateString(self.profile)
        AxsCmdFlexProfileParamsStart(builder)
        AxsCmdFlexProfileParamsAddMasterOffset(builder, self.masterOffset)
        AxsCmdFlexProfileParamsAddSlaveOffset(builder, self.slaveOffset)
        AxsCmdFlexProfileParamsAddRatioNumerator(builder, self.ratioNumerator)
        AxsCmdFlexProfileParamsAddRatioDenominator(builder, self.ratioDenominator)
        AxsCmdFlexProfileParamsAddFineAdjust(builder, self.fineAdjust)
        AxsCmdFlexProfileParamsAddProfileEntry(builder, self.profileEntry)
        if self.profile is not None:
            AxsCmdFlexProfileParamsAddProfile(builder, profile)
        AxsCmdFlexProfileParamsAddProfileExecutionMode(builder, self.profileExecutionMode)
        AxsCmdFlexProfileParamsAddSwitchPosition(builder, self.switchPosition)
        AxsCmdFlexProfileParamsAddSwitchProfileOnPos(builder, self.switchProfileOnPos)
        AxsCmdFlexProfileParamsAddSwitchGearOnPos(builder, self.switchGearOnPos)
        AxsCmdFlexProfileParamsAddAngleAdjust(builder, self.angleAdjust)
        AxsCmdFlexProfileParamsAddSlaveAdjust(builder, self.slaveAdjust)
        axsCmdFlexProfileParams = AxsCmdFlexProfileParamsEnd(builder)
        return axsCmdFlexProfileParams
