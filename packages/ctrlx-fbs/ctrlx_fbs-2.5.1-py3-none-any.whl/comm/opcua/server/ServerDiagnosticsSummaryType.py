# automatically generated by the FlatBuffers compiler, do not modify

# namespace: server

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ServerDiagnosticsSummaryType(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ServerDiagnosticsSummaryType()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsServerDiagnosticsSummaryType(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ServerDiagnosticsSummaryType
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # The sum of the created sessions of the OPC UA Server since its start
    # ServerDiagnosticsSummaryType
    def CumulatedSessionCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The sum of the created subscriptions during all sessions of the OPC UA Server since its start
    # ServerDiagnosticsSummaryType
    def CumulatedSubscriptionCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The current number of active sessions of the OPC UA Server
    # ServerDiagnosticsSummaryType
    def CurrentSessionCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The current number of active subscriptions of the OPC UA Server
    # ServerDiagnosticsSummaryType
    def CurrentSubscriptionCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The number of the supported publishing intervals of the OPC UA Server
    # ServerDiagnosticsSummaryType
    def PublishingIntervalCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The number of the discarded queries of the OPC UA Server since its start
    # ServerDiagnosticsSummaryType
    def RejectedRequestsCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The number of the discarded sessions of the OPC UA Server since its start
    # ServerDiagnosticsSummaryType
    def RejectedSessionCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The number of discarded service queries of the OPC UA Server since its start
    # that were rejected due to security criteria that were not met
    # ServerDiagnosticsSummaryType
    def SecurityRejectedRequestsCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The number of discarded sessions (service queries) of the OPC UA Server since its start
    # that were rejected due to security criteria that were not met
    # ServerDiagnosticsSummaryType
    def SecurityRejectedSessionCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The number of views available in the OPC UA Server
    # ServerDiagnosticsSummaryType
    def ServerViewCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The number of the error-caused ended sessions of the OPC UA Server since its start
    # ServerDiagnosticsSummaryType
    def SessionAbortCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # The number of the timeout-caused ended sessions of the OPC UA Server since its start
    # ServerDiagnosticsSummaryType
    def SessionTimeoutCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def ServerDiagnosticsSummaryTypeStart(builder): builder.StartObject(12)
def Start(builder):
    return ServerDiagnosticsSummaryTypeStart(builder)
def ServerDiagnosticsSummaryTypeAddCumulatedSessionCount(builder, cumulatedSessionCount): builder.PrependUint32Slot(0, cumulatedSessionCount, 0)
def AddCumulatedSessionCount(builder, cumulatedSessionCount):
    return ServerDiagnosticsSummaryTypeAddCumulatedSessionCount(builder, cumulatedSessionCount)
def ServerDiagnosticsSummaryTypeAddCumulatedSubscriptionCount(builder, cumulatedSubscriptionCount): builder.PrependUint32Slot(1, cumulatedSubscriptionCount, 0)
def AddCumulatedSubscriptionCount(builder, cumulatedSubscriptionCount):
    return ServerDiagnosticsSummaryTypeAddCumulatedSubscriptionCount(builder, cumulatedSubscriptionCount)
def ServerDiagnosticsSummaryTypeAddCurrentSessionCount(builder, currentSessionCount): builder.PrependUint32Slot(2, currentSessionCount, 0)
def AddCurrentSessionCount(builder, currentSessionCount):
    return ServerDiagnosticsSummaryTypeAddCurrentSessionCount(builder, currentSessionCount)
def ServerDiagnosticsSummaryTypeAddCurrentSubscriptionCount(builder, currentSubscriptionCount): builder.PrependUint32Slot(3, currentSubscriptionCount, 0)
def AddCurrentSubscriptionCount(builder, currentSubscriptionCount):
    return ServerDiagnosticsSummaryTypeAddCurrentSubscriptionCount(builder, currentSubscriptionCount)
def ServerDiagnosticsSummaryTypeAddPublishingIntervalCount(builder, publishingIntervalCount): builder.PrependUint32Slot(4, publishingIntervalCount, 0)
def AddPublishingIntervalCount(builder, publishingIntervalCount):
    return ServerDiagnosticsSummaryTypeAddPublishingIntervalCount(builder, publishingIntervalCount)
def ServerDiagnosticsSummaryTypeAddRejectedRequestsCount(builder, rejectedRequestsCount): builder.PrependUint32Slot(5, rejectedRequestsCount, 0)
def AddRejectedRequestsCount(builder, rejectedRequestsCount):
    return ServerDiagnosticsSummaryTypeAddRejectedRequestsCount(builder, rejectedRequestsCount)
def ServerDiagnosticsSummaryTypeAddRejectedSessionCount(builder, rejectedSessionCount): builder.PrependUint32Slot(6, rejectedSessionCount, 0)
def AddRejectedSessionCount(builder, rejectedSessionCount):
    return ServerDiagnosticsSummaryTypeAddRejectedSessionCount(builder, rejectedSessionCount)
def ServerDiagnosticsSummaryTypeAddSecurityRejectedRequestsCount(builder, securityRejectedRequestsCount): builder.PrependUint32Slot(7, securityRejectedRequestsCount, 0)
def AddSecurityRejectedRequestsCount(builder, securityRejectedRequestsCount):
    return ServerDiagnosticsSummaryTypeAddSecurityRejectedRequestsCount(builder, securityRejectedRequestsCount)
def ServerDiagnosticsSummaryTypeAddSecurityRejectedSessionCount(builder, securityRejectedSessionCount): builder.PrependUint32Slot(8, securityRejectedSessionCount, 0)
def AddSecurityRejectedSessionCount(builder, securityRejectedSessionCount):
    return ServerDiagnosticsSummaryTypeAddSecurityRejectedSessionCount(builder, securityRejectedSessionCount)
def ServerDiagnosticsSummaryTypeAddServerViewCount(builder, serverViewCount): builder.PrependUint32Slot(9, serverViewCount, 0)
def AddServerViewCount(builder, serverViewCount):
    return ServerDiagnosticsSummaryTypeAddServerViewCount(builder, serverViewCount)
def ServerDiagnosticsSummaryTypeAddSessionAbortCount(builder, sessionAbortCount): builder.PrependUint32Slot(10, sessionAbortCount, 0)
def AddSessionAbortCount(builder, sessionAbortCount):
    return ServerDiagnosticsSummaryTypeAddSessionAbortCount(builder, sessionAbortCount)
def ServerDiagnosticsSummaryTypeAddSessionTimeoutCount(builder, sessionTimeoutCount): builder.PrependUint32Slot(11, sessionTimeoutCount, 0)
def AddSessionTimeoutCount(builder, sessionTimeoutCount):
    return ServerDiagnosticsSummaryTypeAddSessionTimeoutCount(builder, sessionTimeoutCount)
def ServerDiagnosticsSummaryTypeEnd(builder): return builder.EndObject()
def End(builder):
    return ServerDiagnosticsSummaryTypeEnd(builder)

class ServerDiagnosticsSummaryTypeT(object):

    # ServerDiagnosticsSummaryTypeT
    def __init__(self):
        self.cumulatedSessionCount = 0  # type: int
        self.cumulatedSubscriptionCount = 0  # type: int
        self.currentSessionCount = 0  # type: int
        self.currentSubscriptionCount = 0  # type: int
        self.publishingIntervalCount = 0  # type: int
        self.rejectedRequestsCount = 0  # type: int
        self.rejectedSessionCount = 0  # type: int
        self.securityRejectedRequestsCount = 0  # type: int
        self.securityRejectedSessionCount = 0  # type: int
        self.serverViewCount = 0  # type: int
        self.sessionAbortCount = 0  # type: int
        self.sessionTimeoutCount = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        serverDiagnosticsSummaryType = ServerDiagnosticsSummaryType()
        serverDiagnosticsSummaryType.Init(buf, pos)
        return cls.InitFromObj(serverDiagnosticsSummaryType)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, serverDiagnosticsSummaryType):
        x = ServerDiagnosticsSummaryTypeT()
        x._UnPack(serverDiagnosticsSummaryType)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.cumulatedSessionCount == other.cumulatedSessionCount and \
            self.cumulatedSubscriptionCount == other.cumulatedSubscriptionCount and \
            self.currentSessionCount == other.currentSessionCount and \
            self.currentSubscriptionCount == other.currentSubscriptionCount and \
            self.publishingIntervalCount == other.publishingIntervalCount and \
            self.rejectedRequestsCount == other.rejectedRequestsCount and \
            self.rejectedSessionCount == other.rejectedSessionCount and \
            self.securityRejectedRequestsCount == other.securityRejectedRequestsCount and \
            self.securityRejectedSessionCount == other.securityRejectedSessionCount and \
            self.serverViewCount == other.serverViewCount and \
            self.sessionAbortCount == other.sessionAbortCount and \
            self.sessionTimeoutCount == other.sessionTimeoutCount

    # ServerDiagnosticsSummaryTypeT
    def _UnPack(self, serverDiagnosticsSummaryType):
        if serverDiagnosticsSummaryType is None:
            return
        self.cumulatedSessionCount = serverDiagnosticsSummaryType.CumulatedSessionCount()
        self.cumulatedSubscriptionCount = serverDiagnosticsSummaryType.CumulatedSubscriptionCount()
        self.currentSessionCount = serverDiagnosticsSummaryType.CurrentSessionCount()
        self.currentSubscriptionCount = serverDiagnosticsSummaryType.CurrentSubscriptionCount()
        self.publishingIntervalCount = serverDiagnosticsSummaryType.PublishingIntervalCount()
        self.rejectedRequestsCount = serverDiagnosticsSummaryType.RejectedRequestsCount()
        self.rejectedSessionCount = serverDiagnosticsSummaryType.RejectedSessionCount()
        self.securityRejectedRequestsCount = serverDiagnosticsSummaryType.SecurityRejectedRequestsCount()
        self.securityRejectedSessionCount = serverDiagnosticsSummaryType.SecurityRejectedSessionCount()
        self.serverViewCount = serverDiagnosticsSummaryType.ServerViewCount()
        self.sessionAbortCount = serverDiagnosticsSummaryType.SessionAbortCount()
        self.sessionTimeoutCount = serverDiagnosticsSummaryType.SessionTimeoutCount()

    # ServerDiagnosticsSummaryTypeT
    def Pack(self, builder):
        ServerDiagnosticsSummaryTypeStart(builder)
        ServerDiagnosticsSummaryTypeAddCumulatedSessionCount(builder, self.cumulatedSessionCount)
        ServerDiagnosticsSummaryTypeAddCumulatedSubscriptionCount(builder, self.cumulatedSubscriptionCount)
        ServerDiagnosticsSummaryTypeAddCurrentSessionCount(builder, self.currentSessionCount)
        ServerDiagnosticsSummaryTypeAddCurrentSubscriptionCount(builder, self.currentSubscriptionCount)
        ServerDiagnosticsSummaryTypeAddPublishingIntervalCount(builder, self.publishingIntervalCount)
        ServerDiagnosticsSummaryTypeAddRejectedRequestsCount(builder, self.rejectedRequestsCount)
        ServerDiagnosticsSummaryTypeAddRejectedSessionCount(builder, self.rejectedSessionCount)
        ServerDiagnosticsSummaryTypeAddSecurityRejectedRequestsCount(builder, self.securityRejectedRequestsCount)
        ServerDiagnosticsSummaryTypeAddSecurityRejectedSessionCount(builder, self.securityRejectedSessionCount)
        ServerDiagnosticsSummaryTypeAddServerViewCount(builder, self.serverViewCount)
        ServerDiagnosticsSummaryTypeAddSessionAbortCount(builder, self.sessionAbortCount)
        ServerDiagnosticsSummaryTypeAddSessionTimeoutCount(builder, self.sessionTimeoutCount)
        serverDiagnosticsSummaryType = ServerDiagnosticsSummaryTypeEnd(builder)
        return serverDiagnosticsSummaryType
