# automatically generated by the FlatBuffers compiler, do not modify

# namespace: API

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CheckSchemaVersionResponse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsCheckSchemaVersionResponse(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CheckSchemaVersionResponse()
        x.Init(buf, n + offset)
        return x

    # CheckSchemaVersionResponse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CheckSchemaVersionResponse
    def Version(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 20250709

    # CheckSchemaVersionResponse
    def PythonVersionMajor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # CheckSchemaVersionResponse
    def PythonVersionMinor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 3

    # CheckSchemaVersionResponse
    def PythonVersionBuild(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 229

def CheckSchemaVersionResponseStart(builder): builder.StartObject(4)
def CheckSchemaVersionResponseAddVersion(builder, version): builder.PrependUint32Slot(0, version, 20250709)
def CheckSchemaVersionResponseAddPythonVersionMajor(builder, pythonVersionMajor): builder.PrependUint32Slot(1, pythonVersionMajor, 0)
def CheckSchemaVersionResponseAddPythonVersionMinor(builder, pythonVersionMinor): builder.PrependUint32Slot(2, pythonVersionMinor, 3)
def CheckSchemaVersionResponseAddPythonVersionBuild(builder, pythonVersionBuild): builder.PrependUint32Slot(3, pythonVersionBuild, 229)
def CheckSchemaVersionResponseEnd(builder): return builder.EndObject()
