[build-system]
requires = ["hatchling"]
build-backend="hatchling.build"

[project]
name = "verilator"
authors = [{name = "the verilator-python authors", email = "dev@dau.dev"}]
description = "Python wrapping/binding for verilator"
readme = "README.md"
license = { text = "Apache-2.0" }
version = "5.38.0"
requires-python = ">=3.9"
keywords = []

classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = []

[project.optional-dependencies]
cli = [
    "rich",
    "typer",
]
develop = [
    "build",
    "cibuildwheel",
    "hatchling",
    "pytest",
    "pytest-cov",
    "twine",
    "uv",
    "wheel",
]

[project.scripts]
verilator-cli = "verilator.cli:main"

[project.urls]
Repository = "https://github.com/dau-dev/verilator-python"
Homepage = "https://github.com/dau-dev/verilator-python"

[tool.bumpversion]
current_version = "5.38.0"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "verilator/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[tool.check-manifest]
ignore = [
    ".copier-answers.yaml",
    "Makefile",
    "docs/**/*",
]

[tool.cibuildwheel]
build = "cp39-* cp310-* cp311-* cp312-* cp313-*"
test-command = "echo 'TODO'"
test-requires = []

[tool.cibuildwheel.linux]
before-all = """make dependencies-linux && PATH=/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH make build-verilator && make copy-verilator && make update-verilator-config"""
repair-wheel-command = ""
skip = "*i686 musllinux*"

[tool.cibuildwheel.macos]
before-all = """make dependencies-macos && PATH=/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH make build-verilator && make copy-verilator && make update-verilator-config"""
repair-wheel-command = ""
environment = {MACOSX_DEPLOYMENT_TARGET="11.0"}
archs = "arm64"

[tool.cibuildwheel.windows]
before-all = """make dependencies-win && make build-verilator && make copy-verilator && make update-verilator-config"""
archs = "AMD64"
environment = {WIN_FLEX_BISON="C:/ProgramData/chocolatey/lib/winflexbison3/tools"}
skip = "*win32 *arm_64"

[tool.coverage.run]
branch = true
omit = [
    "verilator/tests/integration/",
]
[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
fail_under = 50

[tool.hatch.build]
artifacts = [
    "verilator/bin/",
    "verilator/include/",
    "verilator/tests/",
]
[tool.hatch.build.sources]
src = "/"

[tool.hatch.build.targets.sdist]
packages = [
    "verilator",
    "hatch_plugin.py",
    "src",
]
include = [
    "LICENSE",
    "README.md",
]
exclude = [
    "/.github",
    "/scripts",
    "/src",
    "/.gitmodules",
    "/.gitignore",
    "/pyproject.toml",
]

[tool.hatch.build.targets.wheel.hooks.custom]

[tool.hatch.build.targets.wheel]
packages = ["verilator"]
exclude = [
    "/.github",
    "/scripts",
    "/src",
    "/.gitmodules",
    "/.gitignore",
    "/pyproject.toml",
]

[tool.pytest.ini_options]
addopts = ["-vvv", "--junitxml=junit.xml"]
testpaths = "verilator/tests"

[tool.ruff]
line-length = 150

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.isort]
combine-as-imports = true
default-section = "third-party"
known-first-party = ["verilator"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]