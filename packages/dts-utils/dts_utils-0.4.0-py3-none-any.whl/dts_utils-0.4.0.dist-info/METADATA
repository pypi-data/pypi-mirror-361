Metadata-Version: 2.4
Name: dts-utils
Version: 0.4.0
Summary: DTS utility python package
Author-email: Ledger SAS <firmware@ledger.fr>
License: 
                                         Apache License
                                   Version 2.0, January 2004
                                http://www.apache.org/licenses/
        
           TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        
           1. Definitions.
        
              "License" shall mean the terms and conditions for use, reproduction,
              and distribution as defined by Sections 1 through 9 of this document.
        
              "Licensor" shall mean the copyright owner or entity authorized by
              the copyright owner that is granting the License.
        
              "Legal Entity" shall mean the union of the acting entity and all
              other entities that control, are controlled by, or are under common
              control with that entity. For the purposes of this definition,
              "control" means (i) the power, direct or indirect, to cause the
              direction or management of such entity, whether by contract or
              otherwise, or (ii) ownership of fifty percent (50%) or more of the
              outstanding shares, or (iii) beneficial ownership of such entity.
        
              "You" (or "Your") shall mean an individual or Legal Entity
              exercising permissions granted by this License.
        
              "Source" form shall mean the preferred form for making modifications,
              including but not limited to software source code, documentation
              source, and configuration files.
        
              "Object" form shall mean any form resulting from mechanical
              transformation or translation of a Source form, including but
              not limited to compiled object code, generated documentation,
              and conversions to other media types.
        
              "Work" shall mean the work of authorship, whether in Source or
              Object form, made available under the License, as indicated by a
              copyright notice that is included in or attached to the work
              (an example is provided in the Appendix below).
        
              "Derivative Works" shall mean any work, whether in Source or Object
              form, that is based on (or derived from) the Work and for which the
              editorial revisions, annotations, elaborations, or other modifications
              represent, as a whole, an original work of authorship. For the purposes
              of this License, Derivative Works shall not include works that remain
              separable from, or merely link (or bind by name) to the interfaces of,
              the Work and Derivative Works thereof.
        
              "Contribution" shall mean any work of authorship, including
              the original version of the Work and any modifications or additions
              to that Work or Derivative Works thereof, that is intentionally
              submitted to Licensor for inclusion in the Work by the copyright owner
              or by an individual or Legal Entity authorized to submit on behalf of
              the copyright owner. For the purposes of this definition, "submitted"
              means any form of electronic, verbal, or written communication sent
              to the Licensor or its representatives, including but not limited to
              communication on electronic mailing lists, source code control systems,
              and issue tracking systems that are managed by, or on behalf of, the
              Licensor for the purpose of discussing and improving the Work, but
              excluding communication that is conspicuously marked or otherwise
              designated in writing by the copyright owner as "Not a Contribution."
        
              "Contributor" shall mean Licensor and any individual or Legal Entity
              on behalf of whom a Contribution has been received by Licensor and
              subsequently incorporated within the Work.
        
           2. Grant of Copyright License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              copyright license to reproduce, prepare Derivative Works of,
              publicly display, publicly perform, sublicense, and distribute the
              Work and such Derivative Works in Source or Object form.
        
           3. Grant of Patent License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              (except as stated in this section) patent license to make, have made,
              use, offer to sell, sell, import, and otherwise transfer the Work,
              where such license applies only to those patent claims licensable
              by such Contributor that are necessarily infringed by their
              Contribution(s) alone or by combination of their Contribution(s)
              with the Work to which such Contribution(s) was submitted. If You
              institute patent litigation against any entity (including a
              cross-claim or counterclaim in a lawsuit) alleging that the Work
              or a Contribution incorporated within the Work constitutes direct
              or contributory patent infringement, then any patent licenses
              granted to You under this License for that Work shall terminate
              as of the date such litigation is filed.
        
           4. Redistribution. You may reproduce and distribute copies of the
              Work or Derivative Works thereof in any medium, with or without
              modifications, and in Source or Object form, provided that You
              meet the following conditions:
        
              (a) You must give any other recipients of the Work or
                  Derivative Works a copy of this License; and
        
              (b) You must cause any modified files to carry prominent notices
                  stating that You changed the files; and
        
              (c) You must retain, in the Source form of any Derivative Works
                  that You distribute, all copyright, patent, trademark, and
                  attribution notices from the Source form of the Work,
                  excluding those notices that do not pertain to any part of
                  the Derivative Works; and
        
              (d) If the Work includes a "NOTICE" text file as part of its
                  distribution, then any Derivative Works that You distribute must
                  include a readable copy of the attribution notices contained
                  within such NOTICE file, excluding those notices that do not
                  pertain to any part of the Derivative Works, in at least one
                  of the following places: within a NOTICE text file distributed
                  as part of the Derivative Works; within the Source form or
                  documentation, if provided along with the Derivative Works; or,
                  within a display generated by the Derivative Works, if and
                  wherever such third-party notices normally appear. The contents
                  of the NOTICE file are for informational purposes only and
                  do not modify the License. You may add Your own attribution
                  notices within Derivative Works that You distribute, alongside
                  or as an addendum to the NOTICE text from the Work, provided
                  that such additional attribution notices cannot be construed
                  as modifying the License.
        
              You may add Your own copyright statement to Your modifications and
              may provide additional or different license terms and conditions
              for use, reproduction, or distribution of Your modifications, or
              for any such Derivative Works as a whole, provided Your use,
              reproduction, and distribution of the Work otherwise complies with
              the conditions stated in this License.
        
           5. Submission of Contributions. Unless You explicitly state otherwise,
              any Contribution intentionally submitted for inclusion in the Work
              by You to the Licensor shall be under the terms and conditions of
              this License, without any additional terms or conditions.
              Notwithstanding the above, nothing herein shall supersede or modify
              the terms of any separate license agreement you may have executed
              with Licensor regarding such Contributions.
        
           6. Trademarks. This License does not grant permission to use the trade
              names, trademarks, service marks, or product names of the Licensor,
              except as required for reasonable and customary use in describing the
              origin of the Work and reproducing the content of the NOTICE file.
        
           7. Disclaimer of Warranty. Unless required by applicable law or
              agreed to in writing, Licensor provides the Work (and each
              Contributor provides its Contributions) on an "AS IS" BASIS,
              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
              implied, including, without limitation, any warranties or conditions
              of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
              PARTICULAR PURPOSE. You are solely responsible for determining the
              appropriateness of using or redistributing the Work and assume any
              risks associated with Your exercise of permissions under this License.
        
           8. Limitation of Liability. In no event and under no legal theory,
              whether in tort (including negligence), contract, or otherwise,
              unless required by applicable law (such as deliberate and grossly
              negligent acts) or agreed to in writing, shall any Contributor be
              liable to You for damages, including any direct, indirect, special,
              incidental, or consequential damages of any character arising as a
              result of this License or out of the use or inability to use the
              Work (including but not limited to damages for loss of goodwill,
              work stoppage, computer failure or malfunction, or any and all
              other commercial damages or losses), even if such Contributor
              has been advised of the possibility of such damages.
        
           9. Accepting Warranty or Additional Liability. While redistributing
              the Work or Derivative Works thereof, You may choose to offer,
              and charge a fee for, acceptance of support, warranty, indemnity,
              or other liability obligations and/or rights consistent with this
              License. However, in accepting such obligations, You may act only
              on Your own behalf and on Your sole responsibility, not on behalf
              of any other Contributor, and only if You agree to indemnify,
              defend, and hold each Contributor harmless for any liability
              incurred by, or claims asserted against, such Contributor by reason
              of your accepting any such warranty or additional liability.
        
           END OF TERMS AND CONDITIONS
        
Project-URL: Homepage, https://github.com/camelot-os
Project-URL: Repository, https://github.com/camelot-os/python-dts-utils
Project-URL: Issues, https://github.com/camelot-os/python-dts-utils/issues
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: devicetree>=0.0.2
Requires-Dist: Jinja2>3
Requires-Dist: rich
Provides-Extra: devel
Requires-Dist: flake8<8.0,>=7.0; extra == "devel"
Requires-Dist: mypy>=1.8.0; extra == "devel"
Requires-Dist: pytest>=4.6; extra == "devel"
Requires-Dist: pytest-cov>=5.0.0; extra == "devel"
Requires-Dist: black<25.0,>=24.2; extra == "devel"
Requires-Dist: pydoclint; extra == "devel"
Requires-Dist: flake8-docstrings; extra == "devel"
Provides-Extra: doc
Requires-Dist: Sphinx>=7.2.0; extra == "doc"
Requires-Dist: sphinx-rtd-theme>=2.0.0; extra == "doc"
Requires-Dist: sphinx-simplepdf>=1.6.0; extra == "doc"
Requires-Dist: sphinx-autoapi; extra == "doc"
Dynamic: license-file

<!--
SPDX-FileCopyrightText: 2024 Ledger SAS

SPDX-License-Identifier: Apache-2.0
-->

[![REUSE status](https://api.reuse.software/badge/github.com/camelot-os/python-dts-utils)](https://api.reuse.software/info/github.com/camelot-os/python-dts-utils)

![PyPI - Version](https://img.shields.io/pypi/v/dts-utils)
![PyPI - License](https://img.shields.io/pypi/l/dts-utils)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/dts-utils)

[![codecov](https://codecov.io/gh/camelot-os/python-dts-utils/graph/badge.svg?token=SGQPBE40UI)](https://codecov.io/gh/camelot-os/python-dts-utils)
![lint](https://github.com/camelot-os/python-dts-utils/actions/workflows/lint.yml/badge.svg)
![unittest](https://github.com/camelot-os/python-dts-utils/actions/workflows/unittest.yml/badge.svg)
![doc](https://github.com/camelot-os/python-dts-utils/actions/workflows/doc.yml/badge.svg)
![quality](https://github.com/camelot-os/python-dts-utils/actions/workflows/quality.yml/badge.svg)

# dts-utils python package
`dts-utils` is an utility python package that aims to ease dts handling in python and source code
generation based on dts files. Dts file parsing, preprocessing, validation are **out of scope** of
this package. This package is built on top of [Zephyr](https://github.com/zephyrproject-rtos/zephyr)
[devicetree](https://pypi.org/project/devicetree/) package.

This package was built to fit OutpostOS needs but was designed to be generic enough and code
generation language agnostic. Thus, this package can be used by any project which need to use
dts files and generate code source or anything else based on it.

Provided [dts2src entrypoint](#dts2src-entrypoint) is based on Jinja2 template processing, allowing
users to fully controlled generated output by providing his/her very own templates.

## Dependencies
 - Python >= 3.10
 - Jinja2 >= 3
 - devicetree >= 0.0.2
 - rich

## Prerequisites
One may read, as an introduction, the following documentation:
 - [Jinja2 template writing](https://jinja.palletsprojects.com/en/3.1.x/templates/)
 - [Devicetree specification](https://www.devicetree.org/)
 - [Zephyr devicetree.dtlib](https://python-devicetree.readthedocs.io/en/latest/dtlib.html)

## Usage
`dts_utils.Dts` is the based class, it uses internally `devicetree.dtlib.Dts` and ease handling
by extending class attributes with `__getattr__`. For `Dts` object, attributes are resolved, in
order, from aliases and then in root `Node`. For `Node`, attribute are resolved from child node,
label and, then, property. `Property` are  converted according to internal dtlib value type.

Accessing a property or child node is straightforward and simply need to use the dot (`.`)
notation. If node or property contain special characters (e.g. `@`, `,`, `#`, `-`) in their name, one
should use [`getattr`](https://docs.python.org/3/library/functions.html#getattr) python built-in.

```python
import dts_utils

dts = dts_utils.Dts('/path/to/dts/file')

# get root node
root = dts.root

# get soc node
soc = dts.soc

# get usart1 device node by label
# labeled node are accessible from dts file or parent node
usart1 = dts.usart1
# OR
usart1 = soc.usart1

# get usart1 device node by name
usart1 = getattr(dts, 'usart@4xxxxxxx')
```

### dts_dump entrypoint

Command line entrypoint that can dump in a pretty formatted form the dts file.

```console
$ dts_dump --help
usage: dts_dump [-h] [-s] [-v] dts [node]

dump a dts in a human readable format

positional arguments:
  dts                dts file
  node               filter on node name or label

options:
  -h, --help         show this help message and exit
  -s, --status-okay  dump only status=okay nodes, except clocks
  -v, --version      show program's version number and exit
```
Example:
```console
$ dts_dump /path/to/dts usart1
usart1: serial@40013800 {
        compatible = "st,stm32-usart", "st,stm32-uart";
        reg = < 0x40013800 0x400 >;
        clocks = < &rcc 0xa4 0x4000 >;
        resets = < &rctl 0xf8e >;
        interrupts = < 0x3d 0x0 >;
        status = "okay";
        pinctrl-0 = < &usart1_tx_pc1 >, < &usart1_rx_pc0 >;
        phandle = < 0x7 >;
};
```

### dts2src entrypoint
`dts2src` entrypoint is a helper command line tool that process Jinja2 templates with the given
dts file. To ease template writing, built-in jinja extension `loopcontrol` is enabled, dts object
and environment variables are pass to the jinja environment along with custom jinja filters and
tests

```console
$ dts2src --help
usage: dts2src [-h] -d DTS -t TEMPLATE [-v] output

render jinja2 template using dts as data source

positional arguments:
  output                output filename

options:
  -h, --help            show this help message and exit
  -d DTS, --dts DTS     dts file to use as data source
  -t TEMPLATE, --template TEMPLATE
                        source template in jinja2 syntax
  -v, --version         show program's version number and exit
```


#### access to dts node and property
From Jinja environment, `dts_utils.Dts` is available as `dts`.
Each nodes and/or properties are available using the dot (`.`) operator or `[]` operator (this is
required if node or porperty name contains special characters).

e.g.
```jinja
{{ dts.soc }}
```
or
```jinja
{{ dts.usart1['pinctrl-0'] }}
```

#### access to environment variable
Environment variables are available, without external jinja extensions. Those are available as a
dictionary named `env`.

e.g.
```jinja
{{ env.USER }}
```

<!--
   Add custom filters/tests ref
   do not duplicate documentation entries
   Those are documented with pythondoc and generated with sphinx
-->

<!-- TODO
## Contributing
-->

## License
```
Copyright 2023 - 2024 Ledger SAS

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
