name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.4.0, v1.0.0, etc.
  release:
    types: [published]
  pull_request:
    branches: [main, master]  # Test builds on PRs
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        
    - name: Test package import
      run: |
        python -c "import exudynGUI; print('Import successful')"
        python -m exudynGUI --help || echo "CLI help failed, but that's expected without display"

  build:
    name: Build distribution packages
    runs-on: ubuntu-latest
    needs: test  # Only build if tests pass

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check built packages
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-packages
        path: dist/

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # Only publish on tags
    environment: pypi  # Optional: remove this line if you didn't set an environment name
    permissions:
      id-token: write  # Required for trusted publishing

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist-packages
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/
