# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# parameters of control based gantry homing
class AxsCmdCtrlBasedHomingGantryData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AxsCmdCtrlBasedHomingGantryData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAxsCmdCtrlBasedHomingGantryData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AxsCmdCtrlBasedHomingGantryData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # homing basic parameters
    # AxsCmdCtrlBasedHomingGantryData
    def HomingParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from motion.drivecmd.fbtypes.HomingParam import HomingParam
            obj = HomingParam()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # slave axes parameters
    # AxsCmdCtrlBasedHomingGantryData
    def HomingSlaveParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from motion.drivecmd.fbtypes.HomingSlaveParamAll import HomingSlaveParamAll
            obj = HomingSlaveParamAll()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def AxsCmdCtrlBasedHomingGantryDataStart(builder): builder.StartObject(2)
def Start(builder):
    return AxsCmdCtrlBasedHomingGantryDataStart(builder)
def AxsCmdCtrlBasedHomingGantryDataAddHomingParam(builder, homingParam): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(homingParam), 0)
def AddHomingParam(builder, homingParam):
    return AxsCmdCtrlBasedHomingGantryDataAddHomingParam(builder, homingParam)
def AxsCmdCtrlBasedHomingGantryDataAddHomingSlaveParam(builder, homingSlaveParam): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(homingSlaveParam), 0)
def AddHomingSlaveParam(builder, homingSlaveParam):
    return AxsCmdCtrlBasedHomingGantryDataAddHomingSlaveParam(builder, homingSlaveParam)
def AxsCmdCtrlBasedHomingGantryDataEnd(builder): return builder.EndObject()
def End(builder):
    return AxsCmdCtrlBasedHomingGantryDataEnd(builder)
import motion.drivecmd.fbtypes.HomingParam
import motion.drivecmd.fbtypes.HomingSlaveParamAll
try:
    from typing import Optional
except:
    pass

class AxsCmdCtrlBasedHomingGantryDataT(object):

    # AxsCmdCtrlBasedHomingGantryDataT
    def __init__(self):
        self.homingParam = None  # type: Optional[motion.drivecmd.fbtypes.HomingParam.HomingParamT]
        self.homingSlaveParam = None  # type: Optional[motion.drivecmd.fbtypes.HomingSlaveParamAll.HomingSlaveParamAllT]

    @classmethod
    def InitFromBuf(cls, buf, pos):
        axsCmdCtrlBasedHomingGantryData = AxsCmdCtrlBasedHomingGantryData()
        axsCmdCtrlBasedHomingGantryData.Init(buf, pos)
        return cls.InitFromObj(axsCmdCtrlBasedHomingGantryData)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, axsCmdCtrlBasedHomingGantryData):
        x = AxsCmdCtrlBasedHomingGantryDataT()
        x._UnPack(axsCmdCtrlBasedHomingGantryData)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.homingParam == other.homingParam and \
            self.homingSlaveParam == other.homingSlaveParam

    # AxsCmdCtrlBasedHomingGantryDataT
    def _UnPack(self, axsCmdCtrlBasedHomingGantryData):
        if axsCmdCtrlBasedHomingGantryData is None:
            return
        if axsCmdCtrlBasedHomingGantryData.HomingParam() is not None:
            self.homingParam = motion.drivecmd.fbtypes.HomingParam.HomingParamT.InitFromObj(axsCmdCtrlBasedHomingGantryData.HomingParam())
        if axsCmdCtrlBasedHomingGantryData.HomingSlaveParam() is not None:
            self.homingSlaveParam = motion.drivecmd.fbtypes.HomingSlaveParamAll.HomingSlaveParamAllT.InitFromObj(axsCmdCtrlBasedHomingGantryData.HomingSlaveParam())

    # AxsCmdCtrlBasedHomingGantryDataT
    def Pack(self, builder):
        if self.homingParam is not None:
            homingParam = self.homingParam.Pack(builder)
        if self.homingSlaveParam is not None:
            homingSlaveParam = self.homingSlaveParam.Pack(builder)
        AxsCmdCtrlBasedHomingGantryDataStart(builder)
        if self.homingParam is not None:
            AxsCmdCtrlBasedHomingGantryDataAddHomingParam(builder, homingParam)
        if self.homingSlaveParam is not None:
            AxsCmdCtrlBasedHomingGantryDataAddHomingSlaveParam(builder, homingSlaveParam)
        axsCmdCtrlBasedHomingGantryData = AxsCmdCtrlBasedHomingGantryDataEnd(builder)
        return axsCmdCtrlBasedHomingGantryData
