# automatically generated by the FlatBuffers compiler, do not modify

# namespace: structure

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BrokerConnectionTransportDataType(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BrokerConnectionTransportDataType()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBrokerConnectionTransportDataType(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BrokerConnectionTransportDataType
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BrokerConnectionTransportDataType
    def ResourceUri(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # BrokerConnectionTransportDataType
    def AuthenticationProfileUri(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def BrokerConnectionTransportDataTypeStart(builder): builder.StartObject(2)
def Start(builder):
    return BrokerConnectionTransportDataTypeStart(builder)
def BrokerConnectionTransportDataTypeAddResourceUri(builder, resourceUri): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(resourceUri), 0)
def AddResourceUri(builder, resourceUri):
    return BrokerConnectionTransportDataTypeAddResourceUri(builder, resourceUri)
def BrokerConnectionTransportDataTypeAddAuthenticationProfileUri(builder, authenticationProfileUri): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(authenticationProfileUri), 0)
def AddAuthenticationProfileUri(builder, authenticationProfileUri):
    return BrokerConnectionTransportDataTypeAddAuthenticationProfileUri(builder, authenticationProfileUri)
def BrokerConnectionTransportDataTypeEnd(builder): return builder.EndObject()
def End(builder):
    return BrokerConnectionTransportDataTypeEnd(builder)

class BrokerConnectionTransportDataTypeT(object):

    # BrokerConnectionTransportDataTypeT
    def __init__(self):
        self.resourceUri = None  # type: str
        self.authenticationProfileUri = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        brokerConnectionTransportDataType = BrokerConnectionTransportDataType()
        brokerConnectionTransportDataType.Init(buf, pos)
        return cls.InitFromObj(brokerConnectionTransportDataType)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, brokerConnectionTransportDataType):
        x = BrokerConnectionTransportDataTypeT()
        x._UnPack(brokerConnectionTransportDataType)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.resourceUri == other.resourceUri and \
            self.authenticationProfileUri == other.authenticationProfileUri

    # BrokerConnectionTransportDataTypeT
    def _UnPack(self, brokerConnectionTransportDataType):
        if brokerConnectionTransportDataType is None:
            return
        self.resourceUri = brokerConnectionTransportDataType.ResourceUri()
        self.authenticationProfileUri = brokerConnectionTransportDataType.AuthenticationProfileUri()

    # BrokerConnectionTransportDataTypeT
    def Pack(self, builder):
        if self.resourceUri is not None:
            resourceUri = builder.CreateString(self.resourceUri)
        if self.authenticationProfileUri is not None:
            authenticationProfileUri = builder.CreateString(self.authenticationProfileUri)
        BrokerConnectionTransportDataTypeStart(builder)
        if self.resourceUri is not None:
            BrokerConnectionTransportDataTypeAddResourceUri(builder, resourceUri)
        if self.authenticationProfileUri is not None:
            BrokerConnectionTransportDataTypeAddAuthenticationProfileUri(builder, authenticationProfileUri)
        brokerConnectionTransportDataType = BrokerConnectionTransportDataTypeEnd(builder)
        return brokerConnectionTransportDataType
