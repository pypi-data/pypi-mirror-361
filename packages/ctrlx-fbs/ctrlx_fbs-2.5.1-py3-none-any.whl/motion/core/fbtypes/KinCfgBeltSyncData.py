# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# configuration of motion kernel kinematics function 'belt synchronization'
class KinCfgBeltSyncData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KinCfgBeltSyncData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsKinCfgBeltSyncData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # KinCfgBeltSyncData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # distance from the coordinate system of the belt to start plane
    # KinCfgBeltSyncData
    def DistToStartPlane(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # distance to the end plane, starting at start plane
    # KinCfgBeltSyncData
    def DistToEndPlane(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # way where synchronization has to be finished, starting at start plane
    # KinCfgBeltSyncData
    def SyncLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # factor for the dynamic limits of (de)synchronization compensation movements
    # KinCfgBeltSyncData
    def DynLimFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # name of the coordinate system of the default camera
    # KinCfgBeltSyncData
    def CameraCoordSysNameDefault(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # unit of distToStartPlane
    # KinCfgBeltSyncData
    def DistToStartPlaneUnit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # unit of distToEndPlane
    # KinCfgBeltSyncData
    def DistToEndPlaneUnit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # unit of syncLength
    # KinCfgBeltSyncData
    def SyncLengthUnit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def KinCfgBeltSyncDataStart(builder): builder.StartObject(8)
def Start(builder):
    return KinCfgBeltSyncDataStart(builder)
def KinCfgBeltSyncDataAddDistToStartPlane(builder, distToStartPlane): builder.PrependFloat64Slot(0, distToStartPlane, 0.0)
def AddDistToStartPlane(builder, distToStartPlane):
    return KinCfgBeltSyncDataAddDistToStartPlane(builder, distToStartPlane)
def KinCfgBeltSyncDataAddDistToEndPlane(builder, distToEndPlane): builder.PrependFloat64Slot(1, distToEndPlane, 0.0)
def AddDistToEndPlane(builder, distToEndPlane):
    return KinCfgBeltSyncDataAddDistToEndPlane(builder, distToEndPlane)
def KinCfgBeltSyncDataAddSyncLength(builder, syncLength): builder.PrependFloat64Slot(2, syncLength, 0.0)
def AddSyncLength(builder, syncLength):
    return KinCfgBeltSyncDataAddSyncLength(builder, syncLength)
def KinCfgBeltSyncDataAddDynLimFactor(builder, dynLimFactor): builder.PrependFloat64Slot(3, dynLimFactor, 0.0)
def AddDynLimFactor(builder, dynLimFactor):
    return KinCfgBeltSyncDataAddDynLimFactor(builder, dynLimFactor)
def KinCfgBeltSyncDataAddCameraCoordSysNameDefault(builder, cameraCoordSysNameDefault): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(cameraCoordSysNameDefault), 0)
def AddCameraCoordSysNameDefault(builder, cameraCoordSysNameDefault):
    return KinCfgBeltSyncDataAddCameraCoordSysNameDefault(builder, cameraCoordSysNameDefault)
def KinCfgBeltSyncDataAddDistToStartPlaneUnit(builder, distToStartPlaneUnit): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(distToStartPlaneUnit), 0)
def AddDistToStartPlaneUnit(builder, distToStartPlaneUnit):
    return KinCfgBeltSyncDataAddDistToStartPlaneUnit(builder, distToStartPlaneUnit)
def KinCfgBeltSyncDataAddDistToEndPlaneUnit(builder, distToEndPlaneUnit): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(distToEndPlaneUnit), 0)
def AddDistToEndPlaneUnit(builder, distToEndPlaneUnit):
    return KinCfgBeltSyncDataAddDistToEndPlaneUnit(builder, distToEndPlaneUnit)
def KinCfgBeltSyncDataAddSyncLengthUnit(builder, syncLengthUnit): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(syncLengthUnit), 0)
def AddSyncLengthUnit(builder, syncLengthUnit):
    return KinCfgBeltSyncDataAddSyncLengthUnit(builder, syncLengthUnit)
def KinCfgBeltSyncDataEnd(builder): return builder.EndObject()
def End(builder):
    return KinCfgBeltSyncDataEnd(builder)

class KinCfgBeltSyncDataT(object):

    # KinCfgBeltSyncDataT
    def __init__(self):
        self.distToStartPlane = 0.0  # type: float
        self.distToEndPlane = 0.0  # type: float
        self.syncLength = 0.0  # type: float
        self.dynLimFactor = 0.0  # type: float
        self.cameraCoordSysNameDefault = None  # type: str
        self.distToStartPlaneUnit = None  # type: str
        self.distToEndPlaneUnit = None  # type: str
        self.syncLengthUnit = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        kinCfgBeltSyncData = KinCfgBeltSyncData()
        kinCfgBeltSyncData.Init(buf, pos)
        return cls.InitFromObj(kinCfgBeltSyncData)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, kinCfgBeltSyncData):
        x = KinCfgBeltSyncDataT()
        x._UnPack(kinCfgBeltSyncData)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.distToStartPlane == other.distToStartPlane and \
            self.distToEndPlane == other.distToEndPlane and \
            self.syncLength == other.syncLength and \
            self.dynLimFactor == other.dynLimFactor and \
            self.cameraCoordSysNameDefault == other.cameraCoordSysNameDefault and \
            self.distToStartPlaneUnit == other.distToStartPlaneUnit and \
            self.distToEndPlaneUnit == other.distToEndPlaneUnit and \
            self.syncLengthUnit == other.syncLengthUnit

    # KinCfgBeltSyncDataT
    def _UnPack(self, kinCfgBeltSyncData):
        if kinCfgBeltSyncData is None:
            return
        self.distToStartPlane = kinCfgBeltSyncData.DistToStartPlane()
        self.distToEndPlane = kinCfgBeltSyncData.DistToEndPlane()
        self.syncLength = kinCfgBeltSyncData.SyncLength()
        self.dynLimFactor = kinCfgBeltSyncData.DynLimFactor()
        self.cameraCoordSysNameDefault = kinCfgBeltSyncData.CameraCoordSysNameDefault()
        self.distToStartPlaneUnit = kinCfgBeltSyncData.DistToStartPlaneUnit()
        self.distToEndPlaneUnit = kinCfgBeltSyncData.DistToEndPlaneUnit()
        self.syncLengthUnit = kinCfgBeltSyncData.SyncLengthUnit()

    # KinCfgBeltSyncDataT
    def Pack(self, builder):
        if self.cameraCoordSysNameDefault is not None:
            cameraCoordSysNameDefault = builder.CreateString(self.cameraCoordSysNameDefault)
        if self.distToStartPlaneUnit is not None:
            distToStartPlaneUnit = builder.CreateString(self.distToStartPlaneUnit)
        if self.distToEndPlaneUnit is not None:
            distToEndPlaneUnit = builder.CreateString(self.distToEndPlaneUnit)
        if self.syncLengthUnit is not None:
            syncLengthUnit = builder.CreateString(self.syncLengthUnit)
        KinCfgBeltSyncDataStart(builder)
        KinCfgBeltSyncDataAddDistToStartPlane(builder, self.distToStartPlane)
        KinCfgBeltSyncDataAddDistToEndPlane(builder, self.distToEndPlane)
        KinCfgBeltSyncDataAddSyncLength(builder, self.syncLength)
        KinCfgBeltSyncDataAddDynLimFactor(builder, self.dynLimFactor)
        if self.cameraCoordSysNameDefault is not None:
            KinCfgBeltSyncDataAddCameraCoordSysNameDefault(builder, cameraCoordSysNameDefault)
        if self.distToStartPlaneUnit is not None:
            KinCfgBeltSyncDataAddDistToStartPlaneUnit(builder, distToStartPlaneUnit)
        if self.distToEndPlaneUnit is not None:
            KinCfgBeltSyncDataAddDistToEndPlaneUnit(builder, distToEndPlaneUnit)
        if self.syncLengthUnit is not None:
            KinCfgBeltSyncDataAddSyncLengthUnit(builder, syncLengthUnit)
        kinCfgBeltSyncData = KinCfgBeltSyncDataEnd(builder)
        return kinCfgBeltSyncData
