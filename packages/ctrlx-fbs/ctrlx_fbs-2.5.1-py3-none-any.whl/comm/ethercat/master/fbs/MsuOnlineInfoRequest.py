# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

#Master syc unit online request
class MsuOnlineInfoRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MsuOnlineInfoRequest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMsuOnlineInfoRequest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MsuOnlineInfoRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    #Msu Id
    # MsuOnlineInfoRequest
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

def MsuOnlineInfoRequestStart(builder): builder.StartObject(1)
def Start(builder):
    return MsuOnlineInfoRequestStart(builder)
def MsuOnlineInfoRequestAddId(builder, id): builder.PrependUint16Slot(0, id, 0)
def AddId(builder, id):
    return MsuOnlineInfoRequestAddId(builder, id)
def MsuOnlineInfoRequestEnd(builder): return builder.EndObject()
def End(builder):
    return MsuOnlineInfoRequestEnd(builder)

class MsuOnlineInfoRequestT(object):

    # MsuOnlineInfoRequestT
    def __init__(self):
        self.id = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        msuOnlineInfoRequest = MsuOnlineInfoRequest()
        msuOnlineInfoRequest.Init(buf, pos)
        return cls.InitFromObj(msuOnlineInfoRequest)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, msuOnlineInfoRequest):
        x = MsuOnlineInfoRequestT()
        x._UnPack(msuOnlineInfoRequest)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.id == other.id

    # MsuOnlineInfoRequestT
    def _UnPack(self, msuOnlineInfoRequest):
        if msuOnlineInfoRequest is None:
            return
        self.id = msuOnlineInfoRequest.Id()

    # MsuOnlineInfoRequestT
    def Pack(self, builder):
        MsuOnlineInfoRequestStart(builder)
        MsuOnlineInfoRequestAddId(builder, self.id)
        msuOnlineInfoRequest = MsuOnlineInfoRequestEnd(builder)
        return msuOnlineInfoRequest
