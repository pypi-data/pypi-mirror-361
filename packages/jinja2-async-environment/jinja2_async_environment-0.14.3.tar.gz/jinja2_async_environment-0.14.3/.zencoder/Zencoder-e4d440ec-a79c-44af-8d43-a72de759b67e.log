[1m========================================================================= test session starts =========================================================================[0m
platform darwin -- Python 3.13.5, pytest-8.4.0, pluggy-1.6.0 -- /Users/les/Projects/jinja2-async-environment/.venv/bin/python
cachedir: .pytest_cache
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
plugins: xdist-3.7.0, anyio-4.9.0, timeout-2.4.0, cov-6.2.1, mock-3.14.1, benchmark-5.1.0, asyncio-1.0.0
timeout: 300.0s
timeout method: thread
timeout func_only: False
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
[1mcollecting ... [0m[1mcollected 21 items                                                                                                                                                    [0m

tests/test_environment_additional.py::test_async_yield_from_with_generator_function [32mPASSED[0m[32m                                                                      [  4%][0m
tests/test_environment_additional.py::test_async_yield_from_with_async_generator_function [32mPASSED[0m[32m                                                                [  9%][0m
tests/test_environment_additional.py::test_async_yield_from_with_type_error [32mPASSED[0m[32m                                                                              [ 14%][0m
tests/test_environment_additional.py::test_get_template_async_with_parent [32mPASSED[0m[32m                                                                                [ 19%][0m
tests/test_environment_additional.py::test_select_template_async_with_undefined [32mPASSED[0m[32m                                                                          [ 23%][0m
tests/test_environment_additional.py::test_select_template_async_with_template_object [31mFAILED[0m[31m                                                                    [ 28%][0m
tests/test_environment_additional.py::test_select_template_async_with_parent_and_template_not_found [32mPASSED[0m[31m                                                      [ 33%][0m
tests/test_environment_additional.py::test_get_or_select_template_async_with_undefined [32mPASSED[0m[31m                                                                   [ 38%][0m
tests/test_environment_additional.py::test_get_or_select_template_async_with_template_object [31mFAILED[0m[31m                                                             [ 42%][0m
tests/test_environment_additional.py::test_get_or_select_template_async_with_sequence [32mPASSED[0m[31m                                                                    [ 47%][0m
tests/test_environment_additional.py::test_load_template_async_with_template_object [31mFAILED[0m[31m                                                                      [ 52%][0m
tests/test_environment_additional.py::test_load_template_async_with_string [32mPASSED[0m[31m                                                                               [ 57%][0m
tests/test_environment_additional.py::test_load_template_async_with_sequence [32mPASSED[0m[31m                                                                             [ 61%][0m
tests/test_environment_additional.py::test_load_template_async_with_sequence_all_not_found [32mPASSED[0m[31m                                                               [ 66%][0m
tests/test_environment_additional.py::test_get_template_async_no_loader [32mPASSED[0m[31m                                                                                  [ 71%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_hit [31mFAILED[0m[31m                                                                             [ 76%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_hit_and_async_is_up_to_date [31mFAILED[0m[31m                                                     [ 80%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_hit_and_auto_reload_false [31mFAILED[0m[31m                                                       [ 85%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_hit_and_globals [31mFAILED[0m[31m                                                                 [ 90%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_miss [31mFAILED[0m[31m                                                                            [ 95%][0m
tests/test_environment_additional.py::test_get_template_async_with_cache_miss_and_globals [32mPASSED[0m[31m                                                                [100%][0m[31m[1m
ERROR: Coverage failure: total of 27 is less than fail-under=42
[0m

============================================================================== FAILURES ===============================================================================
[31m[1m___________________________________________________________ test_select_template_async_with_template_object ___________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e72350>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_select_template_async_with_template_object[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test select_template_async with a Template object."""[39;49;00m[90m[39;49;00m
        [90m# Create a Template object[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call select_template_async with the Template object[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env.select_template_async([template])[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e72350>, names = [<MagicMock id='4394072928'>], parent = None, globals = None

    [0m[37m@internalcode[39;49;00m[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mselect_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        names: t.Iterable[[96mstr[39;49;00m | Template],[90m[39;49;00m
        parent: [96mstr[39;49;00m | [94mNone[39;49;00m = [94mNone[39;49;00m,[90m[39;49;00m
        [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m = [94mNone[39;49;00m,[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(names, Undefined):[90m[39;49;00m
            names._fail_with_undefined_error()[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m names:[90m[39;49;00m
            [94mraise[39;49;00m TemplatesNotFound([90m[39;49;00m
                message=[33m"[39;49;00m[33mTried to select from an empty list of templates.[39;49;00m[33m"[39;49;00m[90m[39;49;00m
            )[90m[39;49;00m
        names_list = [][90m[39;49;00m
        [94mfor[39;49;00m name [95min[39;49;00m names:[90m[39;49;00m
            [94mif[39;49;00m [96misinstance[39;49;00m(name, Template):[90m[39;49;00m
                [94mreturn[39;49;00m name[90m[39;49;00m
            [94mif[39;49;00m parent [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                name = [96mself[39;49;00m.join_path([96mstr[39;49;00m(name), parent)[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
            [94mexcept[39;49;00m (TemplateNotFound, UndefinedError):[90m[39;49;00m
                names_list.append([96mstr[39;49;00m(name))[90m[39;49;00m
>       [94mraise[39;49;00m TemplatesNotFound(names_list)[90m[39;49;00m
[1m[31mE       jinja2.exceptions.TemplatesNotFound: none of the templates given were found: <MagicMock id='4394072928'>[0m

[1m[31mjinja2_async_environment/environment.py[0m:140: TemplatesNotFound
[31m[1m_______________________________________________________ test_get_or_select_template_async_with_template_object ________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e73c50>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_or_select_template_async_with_template_object[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test get_or_select_template_async with a Template object."""[39;49;00m[90m[39;49;00m
        [90m# Create a Template object[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call get_or_select_template_async with the Template object[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env.get_or_select_template_async(template)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:154: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:162: in get_or_select_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m.select_template_async(template_name_or_list, parent, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e73c50>, names = <MagicMock id='4395143520'>, parent = None, globals = None

    [0m[37m@internalcode[39;49;00m[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mselect_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        names: t.Iterable[[96mstr[39;49;00m | Template],[90m[39;49;00m
        parent: [96mstr[39;49;00m | [94mNone[39;49;00m = [94mNone[39;49;00m,[90m[39;49;00m
        [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m = [94mNone[39;49;00m,[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(names, Undefined):[90m[39;49;00m
            names._fail_with_undefined_error()[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m names:[90m[39;49;00m
            [94mraise[39;49;00m TemplatesNotFound([90m[39;49;00m
                message=[33m"[39;49;00m[33mTried to select from an empty list of templates.[39;49;00m[33m"[39;49;00m[90m[39;49;00m
            )[90m[39;49;00m
        names_list = [][90m[39;49;00m
        [94mfor[39;49;00m name [95min[39;49;00m names:[90m[39;49;00m
            [94mif[39;49;00m [96misinstance[39;49;00m(name, Template):[90m[39;49;00m
                [94mreturn[39;49;00m name[90m[39;49;00m
            [94mif[39;49;00m parent [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                name = [96mself[39;49;00m.join_path([96mstr[39;49;00m(name), parent)[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
            [94mexcept[39;49;00m (TemplateNotFound, UndefinedError):[90m[39;49;00m
                names_list.append([96mstr[39;49;00m(name))[90m[39;49;00m
>       [94mraise[39;49;00m TemplatesNotFound(names_list)[90m[39;49;00m
[1m[31mE       jinja2.exceptions.TemplatesNotFound: none of the templates given were found:[0m

[1m[31mjinja2_async_environment/environment.py[0m:140: TemplatesNotFound
[31m[1m____________________________________________________________ test_load_template_async_with_template_object ____________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e73ed0>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_load_template_async_with_template_object[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _load_template_async with a Template object."""[39;49;00m[90m[39;49;00m
        [90m# Create a Template object[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _load_template_async with the Template object[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._load_template_async(template, [94mNone[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:185: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e73ed0>, name = <MagicMock id='4395142512'>, globals = None

    [0m[37m@internalcode[39;49;00m[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_load_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        name: [96mstr[39;49;00m | Template | t.Iterable[[96mstr[39;49;00m | Template],[90m[39;49;00m
        [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m,[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(name, Template):[90m[39;49;00m
            [94mreturn[39;49;00m name[90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(name, [96mstr[39;49;00m):[90m[39;49;00m
            [94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
        names_list = [][90m[39;49;00m
        [94mfor[39;49;00m template_name [95min[39;49;00m name:[90m[39;49;00m
            [94mif[39;49;00m [96misinstance[39;49;00m(template_name, Template):[90m[39;49;00m
                [94mreturn[39;49;00m template_name[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                [94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async([96mstr[39;49;00m(template_name), [96mglobals[39;49;00m)[90m[39;49;00m
            [94mexcept[39;49;00m TemplateNotFound:[90m[39;49;00m
                names_list.append([96mstr[39;49;00m(template_name))[90m[39;49;00m
>       [94mraise[39;49;00m TemplatesNotFound(names_list)[90m[39;49;00m
[1m[31mE       jinja2.exceptions.TemplatesNotFound: none of the templates given were found:[0m

[1m[31mjinja2_async_environment/environment.py[0m:182: TemplatesNotFound
[31m[1m_______________________________________________________________ test_get_template_async_with_cache_hit ________________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8ca50>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_hit[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template with is_up_to_date=True[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
        template.is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:273: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8ca50>, name = 'template.html', globals = None

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        cache_key = (ref([96mself[39;49;00m.loader), name)[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                        is_up_to_date = [94mawait[39;49;00m is_up_to_date()  [90m# type: ignore[39;49;00m[90m[39;49;00m
                    [94melse[39;49;00m:[90m[39;49;00m
                        is_up_to_date = template.is_up_to_date()[90m[39;49;00m
    [90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload [95mor[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
            [94mexcept[39;49;00m ([96mTypeError[39;49;00m, [96mAttributeError[39;49;00m):[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# If we have an async loader, use it[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mhasattr[39;49;00m([96mself[39;49;00m.loader, [33m'[39;49;00m[33mload_async[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
>           template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, [96mself[39;49;00m.make_globals([96mglobals[39;49;00m))[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:209: TypeError
[31m[1m___________________________________________________ test_get_template_async_with_cache_hit_and_async_is_up_to_date ____________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e73c50>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_hit_and_async_is_up_to_date[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit and async is_up_to_date."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template with async is_up_to_date[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
        template.is_up_to_date = AsyncMock(return_value=[94mTrue[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:297: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e73c50>, name = 'template.html', globals = None

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        cache_key = (ref([96mself[39;49;00m.loader), name)[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                        is_up_to_date = [94mawait[39;49;00m is_up_to_date()  [90m# type: ignore[39;49;00m[90m[39;49;00m
                    [94melse[39;49;00m:[90m[39;49;00m
                        is_up_to_date = template.is_up_to_date()[90m[39;49;00m
    [90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload [95mor[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
            [94mexcept[39;49;00m ([96mTypeError[39;49;00m, [96mAttributeError[39;49;00m):[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# If we have an async loader, use it[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mhasattr[39;49;00m([96mself[39;49;00m.loader, [33m'[39;49;00m[33mload_async[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
>           template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, [96mself[39;49;00m.make_globals([96mglobals[39;49;00m))[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:209: TypeError
[31m[1m____________________________________________________ test_get_template_async_with_cache_hit_and_auto_reload_false _____________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e73d90>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_hit_and_auto_reload_false[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit and auto_reload=False."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:321: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105e73d90>, name = 'template.html', globals = None

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        cache_key = (ref([96mself[39;49;00m.loader), name)[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                        is_up_to_date = [94mawait[39;49;00m is_up_to_date()  [90m# type: ignore[39;49;00m[90m[39;49;00m
                    [94melse[39;49;00m:[90m[39;49;00m
                        is_up_to_date = template.is_up_to_date()[90m[39;49;00m
    [90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload [95mor[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
            [94mexcept[39;49;00m ([96mTypeError[39;49;00m, [96mAttributeError[39;49;00m):[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# If we have an async loader, use it[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mhasattr[39;49;00m([96mself[39;49;00m.loader, [33m'[39;49;00m[33mload_async[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
>           template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, [96mself[39;49;00m.make_globals([96mglobals[39;49;00m))[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:209: TypeError
[31m[1m_________________________________________________________ test_get_template_async_with_cache_hit_and_globals __________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c050>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_hit_and_globals[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit and globals."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template with is_up_to_date=True[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
        template.is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
        template.globals = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async with globals[39;49;00m[90m[39;49;00m
        globals_dict = {[33m"[39;49;00m[33mvar1[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mvar2[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue2[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, globals_dict)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_additional.py[0m:348: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c050>, name = 'template.html', globals = {'var1': 'value1', 'var2': 'value2'}

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        cache_key = (ref([96mself[39;49;00m.loader), name)[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                        is_up_to_date = [94mawait[39;49;00m is_up_to_date()  [90m# type: ignore[39;49;00m[90m[39;49;00m
                    [94melse[39;49;00m:[90m[39;49;00m
                        is_up_to_date = template.is_up_to_date()[90m[39;49;00m
    [90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload [95mor[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
            [94mexcept[39;49;00m ([96mTypeError[39;49;00m, [96mAttributeError[39;49;00m):[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# If we have an async loader, use it[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mhasattr[39;49;00m([96mself[39;49;00m.loader, [33m'[39;49;00m[33mload_async[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
>           template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, [96mself[39;49;00m.make_globals([96mglobals[39;49;00m))[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:209: TypeError
[31m[1m_______________________________________________________________ test_get_template_async_with_cache_miss _______________________________________________________________[0m

self = <AsyncMock name='mock.load_async' id='4395148560'>, args = (<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', {})
kwargs = {}, expected = call(<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', {})
actual = call(<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', ChainMap({}, {'ra...class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>}))
_error_message = <function NonCallableMock.assert_called_with.<locals>._error_message at 0x105fae160>, cause = None

    [0m[94mdef[39;49;00m[90m [39;49;00m[92massert_called_with[39;49;00m([96mself[39;49;00m, /, *args, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""assert that the last call was made with the specified arguments.[39;49;00m
    [33m[39;49;00m
    [33m    Raises an AssertionError if the args and keyword args passed in are[39;49;00m
    [33m    different to the last call to the mock."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.call_args [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            expected = [96mself[39;49;00m._format_mock_call_signature(args, kwargs)[90m[39;49;00m
            actual = [33m'[39;49;00m[33mnot called.[39;49;00m[33m'[39;49;00m[90m[39;49;00m
            error_message = ([33m'[39;49;00m[33mexpected call not found.[39;49;00m[33m\n[39;49;00m[33mExpected: [39;49;00m[33m%s[39;49;00m[33m\n[39;49;00m[33m  Actual: [39;49;00m[33m%s[39;49;00m[33m'[39;49;00m[90m[39;49;00m
                    % (expected, actual))[90m[39;49;00m
            [94mraise[39;49;00m [96mAssertionError[39;49;00m(error_message)[90m[39;49;00m
    [90m[39;49;00m
        [94mdef[39;49;00m[90m [39;49;00m[92m_error_message[39;49;00m():[90m[39;49;00m
            msg = [96mself[39;49;00m._format_mock_failure_message(args, kwargs)[90m[39;49;00m
            [94mreturn[39;49;00m msg[90m[39;49;00m
        expected = [96mself[39;49;00m._call_matcher(_Call((args, kwargs), two=[94mTrue[39;49;00m))[90m[39;49;00m
        actual = [96mself[39;49;00m._call_matcher([96mself[39;49;00m.call_args)[90m[39;49;00m
        [94mif[39;49;00m actual != expected:[90m[39;49;00m
            cause = expected [94mif[39;49;00m [96misinstance[39;49;00m(expected, [96mException[39;49;00m) [94melse[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
>           [94mraise[39;49;00m [96mAssertionError[39;49;00m(_error_message()) [94mfrom[39;49;00m[90m [39;49;00m[04m[96mcause[39;49;00m[90m[39;49;00m
[1m[31mE           AssertionError: expected call not found.[0m
[1m[31mE           Expected: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', {})[0m
[1m[31mE             Actual: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x105b8ee80>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>}))[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:979: AssertionError

[33mDuring handling of the above exception, another exception occurred:[0m

self = <AsyncMock name='mock.load_async' id='4395148560'>, args = (<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', {})
kwargs = {}

    [0m[94mdef[39;49;00m[90m [39;49;00m[92massert_called_once_with[39;49;00m([96mself[39;49;00m, /, *args, **kwargs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""assert that the mock was called exactly once and that that call was[39;49;00m
    [33m    with the specified arguments."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.call_count == [94m1[39;49;00m:[90m[39;49;00m
            msg = ([33m"[39;49;00m[33mExpected [39;49;00m[33m'[39;49;00m[33m%s[39;49;00m[33m'[39;49;00m[33m to be called once. Called [39;49;00m[33m%s[39;49;00m[33m times.[39;49;00m[33m%s[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                   % ([96mself[39;49;00m._mock_name [95mor[39;49;00m [33m'[39;49;00m[33mmock[39;49;00m[33m'[39;49;00m,[90m[39;49;00m
                      [96mself[39;49;00m.call_count,[90m[39;49;00m
                      [96mself[39;49;00m._calls_repr()))[90m[39;49;00m
            [94mraise[39;49;00m [96mAssertionError[39;49;00m(msg)[90m[39;49;00m
>       [94mreturn[39;49;00m [96mself[39;49;00m.assert_called_with(*args, **kwargs)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AssertionError: expected call not found.[0m
[1m[31mE       Expected: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', {})[0m
[1m[31mE         Actual: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x105b8ee80>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>}))[0m
[1m[31mE       [0m
[1m[31mE       pytest introspection follows:[0m
[1m[31mE       [0m
[1m[31mE       Args:[0m
[1m[31mE       assert (<jinja2_asyn...Namespace'>})) == (<jinja2_asyn...ate.html', {})[0m
[1m[31mE         [0m
[1m[31mE         At index 2 diff: [0mChainMap({}, {[33m'[39;49;00m[33mrange[39;49;00m[33m'[39;49;00m: <[94mclass[39;49;00m[90m [39;49;00m[04m[91m'[39;49;00m[04m[92mrange[39;49;00m[33m'[39;49;00m[33m>, [39;49;00m[33m'[39;49;00m[96mdict[39;49;00m[33m'[39;49;00m[33m: <class [39;49;00m[33m'[39;49;00m[96mdict[39;49;00m[33m'[39;49;00m[33m>, [39;49;00m[33m'[39;49;00mlipsum[33m'[39;49;00m[33m: <function generate_lorem_ipsum at 0x105b8ee80>, [39;49;00m[33m'[39;49;00mcycler[33m'[39;49;00m[33m: <class [39;49;00m[33m'[39;49;00mjinja2.utils.Cycler[...[0m
[1m[31mE         [0m
[1m[31mE         ...Full output truncated (20 lines hidden), use '-vv' to show[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:991: AssertionError

[33mDuring handling of the above exception, another exception occurred:[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_async_with_cache_miss[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache miss."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the loader.load_async method[39;49;00m[90m[39;49;00m
        loader.load_async = AsyncMock(return_value=template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
        result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Verify the result and that load_async was called[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m result [95mis[39;49;00m template[90m[39;49;00m
>       loader.load_async.assert_called_once_with(async_env, [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, {})[90m[39;49;00m
[1m[31mE       AssertionError: expected call not found.[0m
[1m[31mE       Expected: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', {})[0m
[1m[31mE         Actual: load_async(<jinja2_async_environment.environment.AsyncEnvironment object at 0x105f8c550>, 'template.html', ChainMap({}, {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x105b8ee80>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>}))[0m
[1m[31mE       [0m
[1m[31mE       pytest introspection follows:[0m
[1m[31mE       [0m
[1m[31mE       Args:[0m
[1m[31mE       assert (<jinja2_asyn...Namespace'>})) == (<jinja2_asyn...ate.html', {})[0m
[1m[31mE         [0m
[1m[31mE         At index 2 diff: [0mChainMap({}, {[33m'[39;49;00m[33mrange[39;49;00m[33m'[39;49;00m: <[94mclass[39;49;00m[90m [39;49;00m[04m[91m'[39;49;00m[04m[92mrange[39;49;00m[33m'[39;49;00m[33m>, [39;49;00m[33m'[39;49;00m[96mdict[39;49;00m[33m'[39;49;00m[33m: <class [39;49;00m[33m'[39;49;00m[96mdict[39;49;00m[33m'[39;49;00m[33m>, [39;49;00m[33m'[39;49;00mlipsum[33m'[39;49;00m[33m: <function generate_lorem_ipsum at 0x105b8ee80>, [39;49;00m[33m'[39;49;00mcycler[33m'[39;49;00m[33m: <class [39;49;00m[33m'[39;49;00mjinja2.utils.Cycler[...[0m
[1m[31mE         [0m
[1m[31mE         ...Full output truncated (20 lines hidden), use '-vv' to show[0m

[1m[31mtests/test_environment_additional.py[0m:374: AssertionError
=========================================================================== tests coverage ============================================================================
__________________________________________________________ coverage: platform darwin, python 3.13.5-final-0 ___________________________________________________________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          56     29    48%
jinja2_async_environment/compiler.py        393    334    15%
jinja2_async_environment/environment.py     121     36    70%
jinja2_async_environment/loaders.py         320    252    21%
-------------------------------------------------------------
TOTAL                                       890    651    27%
[31m[1mFAIL Required test coverage of 42% not reached. Total coverage: 26.85%
[0m[36m[1m======================================================================= short test summary info =======================================================================[0m
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_select_template_async_with_template_object[0m - jinja2.exceptions.TemplatesNotFound: none of the templates given were found: <MagicMock id='4394072928'>
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_or_select_template_async_with_template_object[0m - jinja2.exceptions.TemplatesNotFound: none of the templates given were found:
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_load_template_async_with_template_object[0m - jinja2.exceptions.TemplatesNotFound: none of the templates given were found:
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_hit[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_hit_and_async_is_up_to_date[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_hit_and_auto_reload_false[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_hit_and_globals[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_environment_additional.py::[1mtest_get_template_async_with_cache_miss[0m - AssertionError: expected call not found.
[31m==================================================================== [31m[1m8 failed[0m, [32m13 passed[0m[31m in 1.03s[0m[31m =====================================================================[0m
