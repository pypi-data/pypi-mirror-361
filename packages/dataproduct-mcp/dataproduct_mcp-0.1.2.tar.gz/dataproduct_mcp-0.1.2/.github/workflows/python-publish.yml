name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Validate release tag matches version
        run: |
          # Extract version from pyproject.toml
          PROJECT_VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          # Extract tag from GitHub ref
          RELEASE_TAG=${GITHUB_REF#refs/tags/}
          
          echo "Project version: $PROJECT_VERSION"
          echo "Release tag: $RELEASE_TAG"
          
          if [ "$PROJECT_VERSION" != "$RELEASE_TAG" ]; then
            echo "Error: Release tag ($RELEASE_TAG) does not match project version ($PROJECT_VERSION)"
            exit 1
          fi
          
          echo "Release tag matches project version âœ“"

      - name: Build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/dataproduct-mcp

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
