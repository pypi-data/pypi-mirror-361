import json
import re
import argparse
from CoNLI.modules.hd_constants import AllHallucinations, FieldName

def clean_span(x):
    return " ".join(re.sub("[\\<].*?[\\>]", "", x).split())

def hallucination_evaluation(jsonl: str):
    hallucination_count = []
    data_num = 0
    for line in open(jsonl):
        data = json.loads(line)
        data_num += 1
        hallucinations = data[AllHallucinations.HALLUCINATIONS]
        hallucinated_sentences = set()
        hallucinated_sentence_id = set()
        for hallucination in hallucinations:
            hallucinated_sentence = hallucination[FieldName.SENTENCE_TEXT]
            hallucinated_sentences.add(clean_span(hallucinated_sentence))
            if int(hallucination[FieldName.SENTENCE_ID]) != 1:
                hallucinated_sentence_id.add(hallucination[FieldName.SENTENCE_ID])
        hallucination_count.append(len(hallucinated_sentence_id))
    return {
        "non-hallucinated response ratio:": 1- sum(hallucination_count)/data_num,
        "max hallucination count per response": max(hallucination_count),
        "min hallucination count per response": min(hallucination_count),
        }

def parse_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--hallucinationjsonl',
        required=True,
        help='The Hallucination jsonl file that was generated by detect_hallucinations.py',
        type=str)
    args = parser.parse_args()
    return args


if __name__ == '__main__':
    args = parse_arguments()
    score = hallucination_evaluation(args.hallucinationjsonl)
    print(score)