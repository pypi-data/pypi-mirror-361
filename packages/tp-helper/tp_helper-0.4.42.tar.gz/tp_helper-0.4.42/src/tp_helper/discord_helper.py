import logging
import aiohttp
from typing import Optional


class DiscordHelper:
    RED = 16711680
    GREEN = 5025616
    YELLOW = 16776960

    def __init__(self, url: str):
        self.url: str = url
        self.title: Optional[str] = None
        self.description: Optional[str] = None
        self.color: Optional[int] = None
        self.notify_everyone: bool = False
        self.proxy: Optional[str] = None  # –ü—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫–ª—é—á–µ–Ω)

    def reset(self) -> "DiscordHelper":
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."""
        self.title = None
        self.description = None
        self.color = None
        self.notify_everyone = False
        return self

    def set_proxy(self, proxy_url: str) -> "DiscordHelper":
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä (HTTP, HTTPS, SOCKS5).

        # HTTP-–ø—Ä–æ–∫—Å–∏ (–æ–±—ã—á–Ω—ã–π)
        discord.set_proxy("http://1.1.1.1:1080")

        # HTTPS-–ø—Ä–æ–∫—Å–∏
        discord.set_proxy("https://user:password@proxy.example.com:8080")

        # SOCKS5-–ø—Ä–æ–∫—Å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ Tor)
        discord.set_proxy("socks5h://127.0.0.1:9050")
        """
        self.proxy = proxy_url
        return self

    def set_title(self, title: str) -> "DiscordHelper":
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è."""
        self.title = title
        return self

    def set_description(self, description: str) -> "DiscordHelper":
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
        self.description = description
        return self

    def set_color(self, color: int) -> "DiscordHelper":
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ int)."""
        self.color = color
        return self

    def set_color_red(self) -> "DiscordHelper":
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π (–æ—à–∏–±–∫–∞)."""
        return self.set_color(self.RED)

    def set_color_green(self) -> "DiscordHelper":
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∑–µ–ª–µ–Ω—ã–π (—É—Å–ø–µ—Ö, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)."""
        return self.set_color(self.GREEN)

    def set_color_yellow(self) -> "DiscordHelper":
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∂–µ–ª—Ç—ã–π (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ)."""
        return self.set_color(self.YELLOW)

    def set_notify_everyone(self) -> "DiscordHelper":
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–ª–µ–¥—É–µ—Ç –ª–∏ —É–ø–æ–º–∏–Ω–∞—Ç—å @everyone –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏."""
        self.notify_everyone = True
        return self

    async def send_with_level(
        self, level: str, message: str = None, desc: Optional[str] = None
    ):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º (Error, Warning, Info)."""
        if self.title is None:
            self.set_title(f"[{level}]")
        if desc:
            self.set_description(desc)
        await self.send(message)

    async def send_error(self, message: str = None, desc: Optional[str] = None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ."""
        self.set_color_red()
        self.set_notify_everyone()
        await self.send_with_level("Error", message, desc)

    async def send_warning(self, message: str = None, desc: Optional[str] = None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
        self.set_color_yellow()
        await self.send_with_level("Warning", message, desc)

    async def send_info(self, message: str = None, desc: Optional[str] = None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
        self.set_color_green()
        await self.send_with_level("Info", message, desc)

    async def send(self, message: Optional[str] = None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏."""
        if not message:
            message = ""
        await self._send_message(message)

    async def _send_message(self, message: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Discord —á–µ—Ä–µ–∑ Webhook —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ–∫—Å–∏ (–µ—Å–ª–∏ –∑–∞–¥–∞–Ω–æ)."""
        payload = {
            "content": f"{'@everyone ' if self.notify_everyone else ''}{message}",
            "tts": False,
            "username": "ü§ñÔ∏è",
            "embeds": [
                {
                    "title": self.title,
                    "description": self.description,
                    "color": self.color,
                }
            ],
        }

        try:
            async with aiohttp.ClientSession() as session:
                async with session.post(
                    self.url, json=payload, proxy=self.proxy
                ) as response:
                    if response.status != 204:
                        logging.warning(
                            f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord: {response.status} - {await response.text()}"
                        )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Discord: {e}")

        self.reset()
