[project]
name = "sygaldry-cli"
version = "0.1.0"
description = "Production-ready AI components that you can copy and paste into your apps"
authors = [
    {name = "greyhaven-ai", email = "info@sygaldry.ai"}
]
license = {text = "MIT"}
readme = "README_PYPI.md"
keywords = ["ai", "llm", "agents", "tools", "components", "mirascope", "lilypad"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

requires-python = ">=3.12,<3.13"

dependencies = [
    "typer[all]>=0.12.3,<0.13.0", # CLI framework
    "httpx>=0.27.0,<0.28.0",      # HTTP client
    "pydantic>=2.5.0,<3.0.0",     # Data validation
    "rich>=13.0.0,<14.0.0",       # Pretty output
    "platformdirs>=4.0.0,<5.0.0"  # Cross-platform cache directories
]

[project.urls]
homepage = "https://sygaldry.ai"
repository = "https://github.com/sygaldry-ai/sygaldry"
documentation = "https://sygaldry.ai/docs"

[project.optional-dependencies]
dev = [
    "argcomplete<4.0.0,>=3.5.0",
    "deptry<1.0.0,>=0.23.0",
    "icecream<3.0.0,>=2.1.3",
    "ipython<9.0.0,>=8.27.0",
    "mypy<2.0.0,>=1.14.1",
    "pyclean>=3.0.0,<4.0.0",
    "pytest-asyncio<1.0.0,>=0.25.2",
    "pytest-cov<7.0.0,>=6.0.0",
    "pytest<9.0.0,>=8.3.4",
    "rich<14.0.0,>=13.8.1",
    "ruff>=0.9.5",
    # Component dependencies for testing
    "mirascope>=1.24.0",
    "lilypad-sdk>=0.1.0",
    "aiofiles>=0.8.0",
    "asyncpg>=0.29.0",
    "beautifulsoup4>=4.12.0",
    "duckduckgo-search>=3.8.0",
    "exa-py>=1.0.0",
    "firecrawl-py>=0.0.1",
    "fuzzywuzzy>=0.18.0",
    "GitPython>=3.1.0",
    "jsonpath-ng>=1.6.0",
    "lxml>=4.9.0",
    "markdown>=3.5.0",
    "pandas>=2.0.0",
    "PyGithub>=2.1.0",
    "PyPDF2>=3.0.0",
    "python-docx>=1.0.0",
    "python-frontmatter>=1.0.0",
    "python-Levenshtein>=0.20.0",
    "pyyaml>=6.0",
    "youtube-transcript-api>=0.6.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "alembic>=1.12.0",
]
test = [
    "coverage<8.0.0,>=7.6.1",
    "hypothesis[cli]<7.0.0,>=6.112.1",
    "pytest<9.0.0,>=8.3.3",
    "pytest-asyncio<1.0.0,>=0.24.0",
    "pytest-cov>=6.1.1",
    "pytest-datafiles<4.0.0,>=3.0.0",
    "pytest-xdist<4.0.0,>=3.6.1",
]

[project.scripts]
sygaldry = "sygaldry_cli.main:main"

[tool.deptry]
# DEP003: transitive deps
ignore = [
    "DEP003"
]

[tool.deptry.per_rule_ignores]
# DEP002: not used in codebase (excluding dev deps)
DEP002 = [
    "deptry",
    "mypy",
    "pyclean",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "ruff",
    "uvicorn"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = false
implicit_reexport = true
warn_unreachable = false
disable_error_code = ["empty-body", "return"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
asyncio_mode = "auto"
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "benchmark: marks performance benchmark tests"
]

[tool.coverage.run]
source = ["sygaldry"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/alembic/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "..."
]

[tool.ruff]
# Fix without reporting on leftover violations
fix-only = true

# Enumerate all fixed violations
show-fixes = true

# Indent width (default: 4)
indent-width = 4

# Black (default: 88)
line-length = 130

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    "dist",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    "__pycache__",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Assume Python 3.11
target-version = "py311"

[tool.ruff.format]
# Use spaces instead of tabs
indent-style = "space"

# Use `\n` line endings for all files
line-ending = "lf"

# Set quote style for strings
quote-style = "preserve"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = ["D203", "E203", "E251", "E266", "E401", "E402", "E501", "F401", "F403", "F841"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TID", "TRY", "UP", "YTT"]

# unfixable = []

[tool.ruff.lint.isort]
combine-as-imports = true
from-first = false
no-sections = true
order-by-type = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["sygaldry_cli", "sygaldry_cli.commands", "sygaldry_cli.core"]

[tool.setuptools.package-data]
"sygaldry_cli.core" = ["known_llms.json"]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "reportlab>=4.4.2",
    "ruff>=0.11.6",
    "types-aiofiles>=24.1.0.20250516",
    "types-markdown>=3.8.0.20250415",
    "types-pyyaml>=6.0.12.20250516",
    "types-requests>=2.32.0.20250515",
]
