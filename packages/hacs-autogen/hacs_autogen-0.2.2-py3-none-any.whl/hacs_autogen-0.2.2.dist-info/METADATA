Metadata-Version: 2.4
Name: hacs-autogen
Version: 0.2.2
Summary: AutoGen UI adapter for HACS (Healthcare Agent Communication Standard)
Project-URL: Homepage, https://github.com/solanovisitor/hacs
Project-URL: Documentation, https://github.com/solanovisitor/hacs/tree/main/docs
Project-URL: Repository, https://github.com/solanovisitor/hacs
Project-URL: Issues, https://github.com/solanovisitor/hacs/issues
Author-email: HACS Contributors <contributors@hacs.dev>
License-Expression: Apache-2.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Healthcare Industry
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Requires-Python: >=3.10
Requires-Dist: hacs-core>=0.1.0
Requires-Dist: hacs-models>=0.1.0
Requires-Dist: pyautogen>=0.2.0
Requires-Dist: pydantic>=2.0.0
Provides-Extra: dev
Requires-Dist: mypy>=1.0; extra == 'dev'
Requires-Dist: pytest-asyncio>=0.21; extra == 'dev'
Requires-Dist: pytest-cov>=4.0; extra == 'dev'
Requires-Dist: pytest>=7.0; extra == 'dev'
Requires-Dist: ruff>=0.1.0; extra == 'dev'
Description-Content-Type: text/markdown

# HACS AutoGen Integration

AutoGen integration for Healthcare Agent Communication Standard (HACS).

## Features

- AutoGen multi-agent framework integration
- Healthcare-specific agent workflows
- FHIR-compliant data exchange between agents
- Clinical decision support workflows

## Installation

```bash
pip install hacs-autogen
```

## Quick Start

```python
from hacs_autogen import create_healthcare_agents
from hacs_models import Patient

# Create healthcare agent team
agents = create_healthcare_agents()

# Process patient data
patient = Patient(display_name="John Doe", age_years=65)
result = agents.process_patient(patient)

print(f"Clinical assessment: {result}")
```

## Documentation

For full documentation, see the [main HACS documentation](https://github.com/solanovisitor/hacs/blob/main/docs/README.md).

## License

Apache-2.0 