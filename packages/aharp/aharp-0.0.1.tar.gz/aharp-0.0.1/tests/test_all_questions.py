import re
import os
import pandas as pd
from aharp import ask

# Sample DataFrame for testing
df = pd.DataFrame({
    'age': [25, 30, 35, 40],
    'income': [50000, 60000, 70000, 80000],
    'city': ['NY', 'LA', 'SF', 'NY'],
})

questions = [
    'How many rows?',
    'Number of rows?',
    'Row count',
    'How many columns?',
    'Number of columns?',
    'Column count',
    'What are the column types?',
    'Type of each column',
    'What type is age?',
    'Type of age?',
    'What data types?',
    'Describe column types',
    'Any missing data?',
    'Are there nulls?',
    'Missing values?',
    'Null counts?',
    'How many nulls per column?',
    'Show missing data',
    'Which columns have missing?',
    'Most common city?',
    'What is the most common product?',
    'Most frequent city?',
    'Top values?',
    'Top value in city?',
    'What’s the mode of age?',
    'Show mode values',
    'Mean of income?',
    'What is the average salary?',
    'Average of age?',
    'Compute mean',
    'Median of income?',
    'What is the median age?',
    'Std of income?',
    'What is the standard deviation of age?',
    'Std dev',
    'Range of income?',
    'What is the range of ages?',
    'Min and max of salary?',
    'Minimum age?',
    'Maximum income?',
    'Count zeros in column',
    'Zero values in inventory?',
    'How many zeros?',
    'Zero count',
    'Unique values in city?',
    'Distinct values count',
    'Number of unique entries',
    'Sample values for city',
    'Give me examples',
    'Show sample rows',
    'Describe dataset',
    'Summary of data',
    'Give a summary',
    'Overview of dataset',
    'Stats overview',
    'Print all stats',
    'Explore data',
    'Data summary',
    'Data overview',
    'Dataset info',
    'What’s the structure?',
    'Show data structure',
    'Show me schema',
    'Column schema',
    'Schema summary',
    'Plot age vs income',
    'Plot salary against experience',
    'Create scatter of age vs salary',
    'Plot x vs y',
    'Draw graph of income vs age',
    'Show a plot of price vs inventory',
    'Generate plot',
    'Visualize data',
    'Display scatter plot',
    'Chart age and income',
    'Plot distribution',
    'Plot histogram',
    'Draw histogram of income',
    'Plot a histogram',
    'Histogram for age',
    'Show bar chart',
    'Bar chart of city counts',
    'Show pie chart',
    'Pie chart of product distribution',
    'How many distinct?',
    'Distinct count',
    'Unique count',
    'Unique entries',
    'Example values',
    'Show top 5 rows',
    'Print head',
    'Head of DataFrame',
    'First rows',
    'Show first rows',
    'Last rows',
    'Tail of DataFrame',
    'Show last rows',
    'Any duplicates?',
    'Duplicate count',
    'Count duplicates',
    'Drop duplicates?',
    'Remove duplicate rows',
    'Check duplicates',
    'Check missing?',
    'Missing?',
    'Null?',
    'Stats',
    'Numeric summary',
    'Numeric stats',
    'Categorical summary',
    'Category counts',
    'I love you',
    'happy birthday',
    'Hi',
    'hello',
    'hey',
    'greetings',
    'burrito recipe',
    'favorite column',
    'favourite column',
    'search city for NY',
]

def test_all_questions(tmp_path, monkeypatch):
    """Ensure every supported question returns a valid response."""
    cwd = os.getcwd()
    os.chdir(tmp_path)
    for q in questions:
        resp = ask(df, q)
        assert not re.match(r"Sorry, I didn't understand", resp), f"Failed: {q} -> {resp}"
    os.chdir(cwd)
