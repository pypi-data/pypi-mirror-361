mutation CreateUserApiKey($name: String!, $durationDays: Int) {
  user {
    createUserApiKey(name: $name, durationDays: $durationDays) {
      apiKey {
        apiKey
      }
      error {
        field
        message
      }
      success
    }
  }
}

mutation UpdateUser($userId: UUID!, $displayName: String, $status: UserStatusEnum, $isAdmin: Boolean) {
  user {
    update(userId: $userId, data: {
      displayName: $displayName,
      status: $status,
      isAdmin: $isAdmin
    }) {
      error {
        field
        message
      }
      success
      user {
        ...ReturnsUser
      }
    }
  }
}

mutation ChangeUserPassword($userId: UUID!, $currentPassword: String!, $newPassword: String!) {
  user {
    changePassword(userId: $userId, data: {
      currentPassword: $currentPassword,
      newPassword: $newPassword
    }) {
      error {
        field
        message
      }
      success
      user {
        ...ReturnsUser
      }
    }
  }
}

mutation CreateUser($username: String!, $password: String!, $isAdmin: Boolean!, $displayName: String) {
  user {
    create(
      userData: {username: $username, password: $password, isSysadmin: false, isAdmin: $isAdmin, displayName: $displayName}
    ) {
      error {
        field
        message
      }
      success
      user {
        ...ReturnsUser
      }
    }
  }
}

mutation DeleteUserApiKey($apiKeyId: UUID!) {
  user {
    deleteUserApiKey(apiKeyId: $apiKeyId) {
      error {
        field
        message
      }
      success
    }
  }
}

mutation DeleteUser($userId: UUID!) {
  user {
    delete(id: $userId) {
      error {
        field
        message
      }
      success
    }
  }
}

mutation AddUserToWorkspace($userId: UUID!, $workspaceId: UUID!, $role: WorkspaceRoleEnum!) {
  workspace {
    addUser(
      workspaceUser: {userId: $userId, workspaceId: $workspaceId, role: $role}
    ) {
      error {
        field
        message
      }
      success
    }
  }
}

mutation ChangeWorkspaceUserRole($role: WorkspaceRoleEnum!, $userId: UUID!, $workspaceId: UUID!) {
  workspace {
    changeWorkspaceUserRole(
      newRole: $role
      userId: $userId
      workspaceId: $workspaceId
    ) {
      error {
        field
        message
      }
      success
    }
  }
}

mutation CreateServiceApiKey($name: String!, $permission: ApiKeyPermissionEnum!, $workspaceId: UUID!, $durationDays: Int) {
  workspace {
    createServiceApiKey(
      name: $name
      permission: $permission
      workspaceId: $workspaceId
      durationDays: $durationDays
    ) {
      error {
        field
        message
      }
      success
      apiKey {
        apiKey
      }
    }
  }
}

mutation DeleteServiceApiKey($apiKeyId: UUID!, $workspaceId: UUID!) {
  workspace {
    deleteServiceApiKey(apiKeyId: $apiKeyId, workspaceId: $workspaceId) {
      error {
        field
        message
      }
      success
    }
  }
}

mutation CreateWorkspace($name: String!, $description: String, $adminUserId: UUID!) {
  workspace {
    create(
      workspaceData: {name: $name, description: $description}
      adminUserId: $adminUserId
    ) {
      error {
        field
        message
      }
      success
      workspace {
        ...ReturnsWorkspace
      }
    }
  }
}

mutation RemoveUserFromWorkspace($userId: UUID!, $workspaceId: UUID!) {
  workspace {
    removeUser(userId: $userId, workspaceId: $workspaceId) {
      error {
        field
        message
      }
      success
    }
  }
}

mutation DeleteWorkspace($workspaceId: UUID!) {
  workspace {
    delete(workspaceId: $workspaceId) {
      error {
        field
        message
      }
      success
    }
  }
}

fragment ReturnsUser on User {
  displayName
  id
  isAdmin
  isSysadmin
  status
  username
}

fragment ReturnsWorkspace on Workspace {
  id
  name
  description
  archived
  createdAt
  updatedAt
}
