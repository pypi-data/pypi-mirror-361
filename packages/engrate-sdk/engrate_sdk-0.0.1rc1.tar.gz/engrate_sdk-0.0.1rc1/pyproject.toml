[project]
name = "engrate-sdk"
version = "0.0.1-rc.1"
description = "Engrate SDK for plugin developers"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [{ name = "Engrate Dev", email = "dev@engrate.io" }]
maintainers = [
    { name = "Carlos", email = "carlos@engrate.io" },
    { name = "Joel", email = "joel@engrate.io" },
    { name = "Rille", email = "rille@engrate.io" },
]


keywords = [
    "sdk",
    "engrate",
    "logging",
    "http-client",
    "plugins",
    "energy",
    "mcp",
    "api-client",
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
    "Topic :: Internet :: WWW/HTTP",
    "Typing :: Typed",
]

# Core dependencies - keep minimal for SDK
dependencies = [
    "httpx>=0.25.0,<1.0.0",
    "fastapi ~= 0.115.12",
    "pydantic>=2.0.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "structlog>=24.0.0,<25.0.0",
    "tenacity>=8.2.0,<9.0.0",
    "typing-extensions>=4.8.0; python_version < '3.11'",
    "uvicorn[standard] ~= 0.24.0.post1",
]

[dependency-groups]
# Development dependencies
dev = [
    # Testing
    "pytest>=7.4.0,<8.0.0",
    # Code quality
    "ruff>=0.1.0,<1.0.0",
    # Development utilities
    "ipython>=8.12.0",
    "rich>=13.0.0",
    "watchdog>=3.0.0",
    "build>=1.2.2.post1",
    "twine>=6.1.0",
]

# Security audit dependencies
security = [
    "bandit[toml]>=1.7.0,<2.0.0",
    "safety>=2.3.0,<3.0.0",
    "pip-audit>=2.6.0,<3.0.0",
]


# All development dependencies
all-dev = ["engrate-sdk[dev,security]"]

[project.urls]
Homepage = "https://engrate.io"
Repository = "https://github.com/engrate/engrate-sdk"
#Issues = "https://github.com/engrate/engrate-sdk/issues"
#Changelog = "https://github.com/yourusername/your-sdk/blob/main/CHANGELOG.md"


# [project.scripts]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.build]
include = [
    "src/engrate_sdk",
    "README.md",
    "LICENSE",
    "py.typed",        # For type hints
]
exclude = [
    "*.pyc",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "*.egg-info",
]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
    "/CHANGELOG.md",
    "/.gitignore",
    "/py.typed",
]

[tool.hatch.build.targets.wheel]
packages = ["src/engrate_sdk"]

# Hatch environment configuration
[tool.hatch.envs.default]
dependencies = ["engrate-sdk[all-dev]"]

[tool.hatch.envs.test]
dependencies = ["engrate-sdk[dev]"]

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

# Ruff configuration (fast Python linter)
[tool.ruff]
target-version = "py38"
line-length = 90
extend-include = ["*.pyi"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
    "PTH", # flake8-use-pathlib
    "S",   # flake8-bandit (security)
    "T20", # flake8-print
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "PL",  # pylint
    "ERA", # eradicate (commented-out code)
]
ignore = [
    "D203",    # one-blank-line-before-class
    "D213",    # multi-line-summary-second-line
    "D401",    # imperative-mood
    "S101",    # assert-used (needed for pytest)
    "PLR0913", # too-many-arguments
    "B008",    # function-call-in-default-argument
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D100", "D101", "D102", "D103", "D104"]
"docs/*" = ["D100"]
"__init__.py" = ["D104"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["your_sdk"]
required-imports = ["from __future__ import annotations"]

# Black configuration
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Bandit security configuration
[tool.bandit]
targets = ["src"]
skips = ["B101", "B601"] # Skip assert_used and paramiko tests

# setuptools configuration (if needed for editable installs)
[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["engrate-sdk*"]
exclude = ["tests*"]


# Additional tool configurations can be added here
# For example: towncrier, bumpver, etc.
