=======================================================
#45 [closed]: Make the client launch a WebDAV document
=======================================================

How to make the client launch OpenOffice 
or Word on a server-side file in a way that the user can save their 
modifications back to the original file through WebDAV?

This question was also asked on Stackoverflow as
`Opening webdav link with the correct program on client
<https://stackoverflow.com/questions/302543/opening-webdav-link-with-the-correct-program-on-client>`__.

More concretely:
Lino's :mod:`lino.mixins.printable` module 
can generate `.pdf`, `.rtf` or `.odt` files into a directory 
located on the server, and this directory 
can be made accessible as a WebDAV location 
(see :doc:`/admin/webdav`).
When the client asks to print something, Lino 
generates that file and returns an URL of the 
generated document, which the client usually 
opens in a new browser window.
But how to have the browser open our document 
in a way that the user can save their 
modifications back to the original file through WebDAV?

The current answer 
is to use our :doc:`DavLink applet </davlink>` 
which is part of Lino and was written exclusively 
for this purpose.


-------------------------
Testing the WebDAV server
-------------------------

To test whether your WebDAV server works correctly and whether 
your Office suite supports direct WebDAV access, 
try the following:

Manually launch your favourite Office suite, type :kbd:`Ctrl+O` 
to open a file, and instead of a file name paste the URI::

  http://lino/media/webdav/userdocs/appyrtf/notes.Note-473.rtf


The URI might of course differ depending on your server. 
To get a "real" URL, enter your Lino database and click the "Print" 
button on a Note that has a NoteType that has AppyRtfBuildMethod set.

For LibreOffice, see also `Opening a Document Using WebDAV over HTTPS
<http://help.libreoffice.org/Common/Opening_a_Document_Using_WebDAV_over_HTTPS>`_ 
(which maybe wrongly claims that https is needed; seems that simple http works as well).

Another test is to launch your Office suite from a command line::

  "C:\Program Files\...\foo.exe"  http://lino/media/webdav/userdocs/appyrtf/notes.Note-473.rtf
  
Where ``C:\Program Files\...\foo.exe`` is the full path of your favourite Office suite.

----------
Approaches
----------

The following is a description of the different approaches we've been 
trying, with more or less success.




Alfresco
--------

Alfresco: These are Microsoft centric solutions that won't work on other platforms.

Some quotes from `How to edit MSoffice documents online
<http://forums.alfresco.com/en/viewtopic.php?f=3&t=19885>`_:
discussion thread (2009-2010 in Alfresco forum):

- online editing "requires Internet Explorer with ActiveX scripting enabled"

- There is a Firefox add-on to support Webdav that needs to be installed:
  `Open As Webfolder <https://addons.mozilla.org/en-US/firefox/addon/540>`_
  
- Another Firefox-AddOn which works for me: 
  `IE-Tab2 <https://addons.mozilla.org/en-US/firefox/addon/92382/>`_

But "Note that this requires the Microsoft Webfolder client to be installed 
on the machine. Thus, it's unlikely to work on Windows Vista or Windows 7 
installations unless the Webfolder client was installed separately."



Making webdav files appear to be local
--------------------------------------

In most cases the following is not necessary
as the major Office suites now support direct webdav editing.

If the client's Office suite does not support to work directly on 
WebDAV documents, Lino offers a trick to have webdav media files 
appear local to the client machine.

On a Windows client it seems possible to map 
a drive letter (on Windows) or a directory (on UNIX) 
to a WebDAV location.
We should write more detailed instructions on this.
CIFS
http://wiki.ubuntuusers.de/samba_client_cifs

We can configure 
:attr:`lino.Lino.webdav_root` and 
:attr:`lino.Lino.webdav_url`
so that the Lino server can translate the filename using 
that information.

But browsers usually don't allow JavaScript to do 
something like this::

  window.open('file:///W:/userdocs/test.rtf')

If you manually enter such a link in the address field of a browser, 
it will (depending on your settings) open the file and launch 
Writer or Word, *but* first it will download the file.





Using a Java applet 
-------------------

Examples to be published. Seems to be possible, 
but this requires the Java RTE which will probably 
slow down client machines.


Using the DownloadWith browser plugin
-------------------------------------

The following article (posted January 2008 by marinew) 
perfectly reflects our problem:

http://forums.mozillazine.org/viewtopic.php?p=3203256

They solved it using `DownloadWith <http://downloadwith.mozdev.org/>`_. 
But this Firefox plugin is not compatible with newer 
Firefox versions, and it is no longer maintained.
("L'auteur a malheureusement abandonné le développement de son extension.")




.. toctree::
  :maxdepth: 2

  45/using_url_protocol
  45/using_cmdserver
  45/using_javascript
  



