Version 1.1.12 (06.06.2011)
===========================

New features
------------

- WYSIWYG editor for `lino.modlib.notes.models.notes.Note.body` 
  and the text fields in contracts
- The `Configuration` menu has been tidied up.

Bugs fixed
----------

- In folgenden Tabellen funktionierten die Bezeichnungen in fr nicht und m√ºssen 
  teilweise sogar beim Upgrade wiederhergestellt werden: 
  Language, Country, ContractType, AidType

- Die Felder `type` und `event_type` Notizen werden jetzt disabled_fields, 
  wenn das Dokument ausgedruckt ist.


Upgrade instructions
--------------------

The following are technical instructions related to this 
upgrade, designed to be executed by a Lino expert.
For more general instructions on how to upgrade an existing 
Lino site, see :doc:`/admin/upgrade`.

- Edit your local `settings.py` and replace 
  ``APPY_PARAMS`` with ``LINO.appy_params``
  (:blogref:`20110531`).
  For example, if you had::

    APPY_PARAMS.update(pythonWithUnoPath='/etc/openoffice.org3/program/python')
  
  then replace this with::
  
    LINO.appy_params.update(pythonWithUnoPath='/etc/openoffice.org3/program/python')
    
- In case you have local fixtures: rename all `.dpy` files to `.py`.
  Change your `dump` script.
  See :blogref:`20110601`.

- Adapt your document templates for text fields in Note and Contract.

- Database migration: 

  - rename `.dpy` to `.py`
  
  - Lino 1.1.11 generated  (empty) generators for the models 
    from :mod:`django.contrib.auth` and :mod:`django.contrib.sessions`.
    And :mod:`django.contrib.sites` now also has been removed.
    Uncomment these lines::
    
        #~ Permission = resolve_model("auth.Permission")
        #~ Group = resolve_model("auth.Group")
        #~ User = resolve_model("auth.User")
        #~ Message = resolve_model("auth.Message")
        #~ Site = resolve_model("sites.Site")
        ...
        #~ Session = resolve_model("sessions.Session")
        
  - :attr:`lino.apps.dsbe.models.StudyType.name` is now a babel field.
  - New field :attr:`lino.modlib.users.models.User.is_expert`.
  - New fields User.is_expert, StudyType.name now a BabelCharField
        
  - (not necessary because TinyMCE also accepts plain text)
    Existing content in `notes.Note.body` must be converted using 
    :func:`lino.utils.restify.restify`.
    See :blogref:`20110525`.
    

  
