[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qdrant-mcp"
version = "0.1.0"
description = "Qdrant MCP server with configurable embedding providers"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
authors = [
    {name = "Andrew Lewin", email = "andrew@example.com"}
]
keywords = ["mcp", "qdrant", "embeddings", "vector-search", "semantic-search"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "mcp[cli]>=1.2.0",
    "qdrant-client>=1.11.0",
    "openai>=1.55.0",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.6.0",
    "httpx>=0.27.2",
    "numpy>=1.26.0",
]

[project.urls]
Homepage = "https://github.com/andrewlwn77/qdrant-mcp"
Repository = "https://github.com/andrewlwn77/qdrant-mcp"
Issues = "https://github.com/andrewlwn77/qdrant-mcp/issues"

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "mypy>=1.11.0",
    "ruff>=0.7.0",
]

[project.scripts]
qdrant-mcp = "qdrant_mcp.server:main"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]