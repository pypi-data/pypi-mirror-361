"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .vpn_session_data_with_password import (
    VpnSessionDataWithPassword,
    VpnSessionDataWithPasswordTypedDict,
)
from enum import Enum
from latitudesh_python_sdk.types import BaseModel
from latitudesh_python_sdk.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FilterLocation(str, Enum):
    ASH = "ASH"
    BGT = "BGT"
    BUE = "BUE"
    CHI = "CHI"
    DAL = "DAL"
    FRA = "FRA"
    LAX = "LAX"
    LON = "LON"
    MEX = "MEX"
    MEX2 = "MEX2"
    MIA = "MIA"
    MIA2 = "MIA2"
    NYC = "NYC"
    SAN = "SAN"
    SAO = "SAO"
    SAO2 = "SAO2"
    SYD = "SYD"
    TYO = "TYO"
    TYO2 = "TYO2"


class GetVpnSessionsRequestTypedDict(TypedDict):
    filter_location: NotRequired[FilterLocation]


class GetVpnSessionsRequest(BaseModel):
    filter_location: Annotated[
        Optional[FilterLocation],
        pydantic.Field(alias="filter[location]"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


class GetVpnSessionsMetaTypedDict(TypedDict):
    pass


class GetVpnSessionsMeta(BaseModel):
    pass


class GetVpnSessionsResponseBodyTypedDict(TypedDict):
    r"""Success"""

    data: NotRequired[List[VpnSessionDataWithPasswordTypedDict]]
    meta: NotRequired[GetVpnSessionsMetaTypedDict]


class GetVpnSessionsResponseBody(BaseModel):
    r"""Success"""

    data: Optional[List[VpnSessionDataWithPassword]] = None

    meta: Optional[GetVpnSessionsMeta] = None
