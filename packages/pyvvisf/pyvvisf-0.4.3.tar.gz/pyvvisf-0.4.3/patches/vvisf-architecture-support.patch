diff --git a/VVGL/Makefile b/VVGL/Makefile
index 1234567..abcdefg 100644
--- a/VVGL/Makefile
+++ b/VVGL/Makefile
@@ -1,4 +1,4 @@
-PLATFORM = $(shell uname)
+PLATFORM ?= $(shell uname)
 ifneq ("$(wildcard /etc/os-release)","")
 PLATFORM = $(shell . /etc/os-release && echo $$NAME)
 endif
@@ -8,6 +8,9 @@ ifneq ("$(wildcard /opt/vc/include/bcm_host.h)","")
 	PLATFORM = Raspbian GNU/Linux
 endif
 
+# Architecture detection and validation
+ARCH ?= $(shell uname -m)
+ARCH := $(shell echo $(ARCH) | tr '[:upper:]' '[:lower:]')
 
 #	set the basic per-platform compile options
 ifeq ($(PLATFORM),Raspbian GNU/Linux)
@@ -25,6 +28,7 @@ else ifeq ($(shell uname),Linux)
 
 else ifeq ($(PLATFORM),Darwin)
 	# make sure we have an ARCH value even if one wasn't provided by the environment!
+	# Validate and normalize architecture
 	ifeq ($(ARCH),aarch64)
 		ARCH := arm64
 	endif
@@ -32,6 +36,9 @@ else ifeq ($(PLATFORM),Darwin)
 	ifeq ($(ARCH),amd64)
 		ARCH := x86_64
 	endif
+	ifeq ($(ARCH),universal2)
+		ARCH_FLAGS := -arch x86_64 -arch arm64
+	endif
 	
 	CXX = clang
 	CPPFLAGS := -Wall -g $(ARCH_FLAGS) -O3 -std=c++11 -stdlib=libc++ -fPIC
@@ -45,7 +52,7 @@ else ifeq ($(PLATFORM),Darwin)
 	CPPFLAGS += -x c++
 	OBJCPPFLAGS += -x objective-c++
 	
-	LDFLAGS := -arch $(ARCH) -lstdc++ -shared -fPIC -lobjc
+	LDFLAGS := $(ARCH_FLAGS) -lstdc++ -shared -fPIC -lobjc
 	LDFLAGS += -framework Foundation -framework ImageIO -framework OpenGL -framework IOSurface -framework CoreGraphics -framework CoreVideo
 	# Add GLFW and GLEW libraries
 	LDFLAGS += -L/opt/homebrew/lib -lglfw -lGLEW
diff --git a/VVISF/Makefile b/VVISF/Makefile
index 1234567..abcdefg 100644
--- a/VVISF/Makefile
+++ b/VVISF/Makefile
@@ -1,4 +1,4 @@
-PLATFORM = $(shell uname)
+PLATFORM ?= $(shell uname)
 ifneq ("$(wildcard /etc/os-release)","")
 PLATFORM = $(shell . /etc/os-release && echo $$NAME)
 endif
@@ -8,6 +8,9 @@ ifneq ("$(wildcard /opt/vc/include/bcm_host.h)","")
 	PLATFORM = Raspbian GNU/Linux
 endif
 
+# Architecture detection and validation
+ARCH ?= $(shell uname -m)
+ARCH := $(shell echo $(ARCH) | tr '[:upper:]' '[:lower:]')
 
 #	set the basic per-platform compile options
 ifeq ($(PLATFORM),Raspbian GNU/Linux)
@@ -25,6 +28,7 @@ else ifeq ($(shell uname),Linux)
 
 else ifeq ($(PLATFORM),Darwin)
 	# make sure we have an ARCH value even if one wasn't provided by the environment!
+	# Validate and normalize architecture
 	ifeq ($(ARCH),aarch64)
 		ARCH := arm64
 	endif
@@ -32,6 +36,9 @@ else ifeq ($(PLATFORM),Darwin)
 	ifeq ($(ARCH),amd64)
 		ARCH := x86_64
 	endif
+	ifeq ($(ARCH),universal2)
+		ARCH_FLAGS := -arch x86_64 -arch arm64
+	endif
 	
 	CXX = clang
 	CPPFLAGS := -Wall -g $(ARCH_FLAGS) -O3 -std=c++11 -stdlib=libc++ -fPIC 
@@ -45,7 +52,7 @@ else ifeq ($(PLATFORM),Darwin)
 	CPPFLAGS += -x c++
 	OBJCPPFLAGS += -x objective-c++
 	
-	LDFLAGS := -arch $(ARCH) -lstdc++ -shared -fPIC -lobjc
+	LDFLAGS := $(ARCH_FLAGS) -lstdc++ -shared -fPIC -lobjc
 	LDFLAGS += -framework Foundation -framework ImageIO -framework OpenGL -framework IOSurface -framework CoreGraphics -framework CoreVideo
 	# Add GLFW and GLEW libraries
 	LDFLAGS += -L/opt/homebrew/lib -lglfw -lGLEW
 