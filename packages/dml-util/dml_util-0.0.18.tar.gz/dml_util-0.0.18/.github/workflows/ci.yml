name: CI
on:
  pull_request:
    branches: ["master"]
  push:
    branches: ["*"]  # ["master"]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Semantic version tags
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install ruff
        run: pip install ruff
      - name: Run Ruff
        run: ruff check --output-format=github .
  test-no-dml:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: pytest
        run: pytest ./tests/unit/ --cov
      - name: list files
        run: |
          echo "Files in the current directory:"
          pwd
          ls -Al
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-no-dml
          path: .coverage
          include-hidden-files: true
  test:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master') ||
        (github.event_name == 'pull_request' && github.base_ref == 'master') ||
        startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        py: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipx
          python -m pip install .[nb,test] ./submodules/*
          pipx install hatch
      - name: create conda env
        run: |
          conda create -n dml-pandas python=3.12 pandas==2.2.3 pip
          conda run -n dml-pandas pip install .[nb,test] ./submodules/*
      - name: pytest
        run: |
          pytest --cov
          pytest --doctest-modules src/
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.py }}
          path: .coverage
          include-hidden-files: true
  summary:  # a single task that only passes if all tests and linting pass
    needs: [test, lint, test-no-dml]
    runs-on: ubuntu-latest
    steps:
      - name: Do nothing
        run: echo "All tests and linting passed successfully."
      # TODO: need to pip install lib so __about__.py is available
      #
      # - uses: actions/checkout@v4
      # - name: Download coverage artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     pattern: coverage-*
      #     path: coverage_files
      # - name: List downloaded coverage files
      #   run: ls -R coverage_files
      # - name: Install coverage and pytest
      #   run: pip install coverage pytest
      # - name: Combine coverage reports
      #   run: |
      #     for d in coverage_files/*; do
      #       cp "$d/.coverage" ".coverage_$(basename "$d")"
      #     done
      # - name: Combine coverage files
      #   run: |
      #     ls -Alh
      #     coverage combine .coverage*      # Combine all .coverage files
      #     coverage report                  # Print coverage summary
      #     coverage xml                     # Optional: generate XML report
  publish:
    needs: ["test", "lint", "test-no-dml"]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install hatch
        run: |
          pip install hatch
      - name: Build and publish
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        run: |
          hatch build
          hatch publish
