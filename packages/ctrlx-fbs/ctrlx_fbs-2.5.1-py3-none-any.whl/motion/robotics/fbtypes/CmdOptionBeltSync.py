# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# parameters for the command option belt sync
class CmdOptionBeltSync(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CmdOptionBeltSync()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCmdOptionBeltSync(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CmdOptionBeltSync
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # permanent type (e.g. "PermOn", "PermOff")
    # CmdOptionBeltSync
    def PermType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # belt name
    # CmdOptionBeltSync
    def BeltName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # belt value
    # CmdOptionBeltSync
    def BeltValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def CmdOptionBeltSyncStart(builder): builder.StartObject(3)
def Start(builder):
    return CmdOptionBeltSyncStart(builder)
def CmdOptionBeltSyncAddPermType(builder, permType): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(permType), 0)
def AddPermType(builder, permType):
    return CmdOptionBeltSyncAddPermType(builder, permType)
def CmdOptionBeltSyncAddBeltName(builder, beltName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(beltName), 0)
def AddBeltName(builder, beltName):
    return CmdOptionBeltSyncAddBeltName(builder, beltName)
def CmdOptionBeltSyncAddBeltValue(builder, beltValue): builder.PrependFloat64Slot(2, beltValue, 0.0)
def AddBeltValue(builder, beltValue):
    return CmdOptionBeltSyncAddBeltValue(builder, beltValue)
def CmdOptionBeltSyncEnd(builder): return builder.EndObject()
def End(builder):
    return CmdOptionBeltSyncEnd(builder)

class CmdOptionBeltSyncT(object):

    # CmdOptionBeltSyncT
    def __init__(self):
        self.permType = None  # type: str
        self.beltName = None  # type: str
        self.beltValue = 0.0  # type: float

    @classmethod
    def InitFromBuf(cls, buf, pos):
        cmdOptionBeltSync = CmdOptionBeltSync()
        cmdOptionBeltSync.Init(buf, pos)
        return cls.InitFromObj(cmdOptionBeltSync)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, cmdOptionBeltSync):
        x = CmdOptionBeltSyncT()
        x._UnPack(cmdOptionBeltSync)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.permType == other.permType and \
            self.beltName == other.beltName and \
            self.beltValue == other.beltValue

    # CmdOptionBeltSyncT
    def _UnPack(self, cmdOptionBeltSync):
        if cmdOptionBeltSync is None:
            return
        self.permType = cmdOptionBeltSync.PermType()
        self.beltName = cmdOptionBeltSync.BeltName()
        self.beltValue = cmdOptionBeltSync.BeltValue()

    # CmdOptionBeltSyncT
    def Pack(self, builder):
        if self.permType is not None:
            permType = builder.CreateString(self.permType)
        if self.beltName is not None:
            beltName = builder.CreateString(self.beltName)
        CmdOptionBeltSyncStart(builder)
        if self.permType is not None:
            CmdOptionBeltSyncAddPermType(builder, permType)
        if self.beltName is not None:
            CmdOptionBeltSyncAddBeltName(builder, beltName)
        CmdOptionBeltSyncAddBeltValue(builder, self.beltValue)
        cmdOptionBeltSync = CmdOptionBeltSyncEnd(builder)
        return cmdOptionBeltSync
