[1m========================================================================= test session starts =========================================================================[0m
platform darwin -- Python 3.13.5, pytest-8.4.0, pluggy-1.6.0
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
testpaths: tests, jinja2_async_environment
plugins: xdist-3.7.0, anyio-4.9.0, timeout-2.4.0, cov-6.2.1, mock-3.14.1, benchmark-5.1.0, asyncio-1.0.0
timeout: 300.0s
timeout method: thread
timeout func_only: False
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
[1mcollecting ... [0m[1mcollecting 66 items                                                                                                                                                   [0m[1mcollected 213 items                                                                                                                                                   [0m

tests/test_async_environment.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31mF[0m[31mF[0m[31mF[0m[31m                                                                                                  [ 14%][0m
tests/test_bccache.py [32m.[0m[32m.[0m[31mF[0m[31m                                                                                                                                       [ 15%][0m
tests/test_bccache_additional.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                                                                                   [ 21%][0m
tests/test_choice_loader.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31mF[0m[31m                                                                                                                            [ 24%][0m
tests/test_compiler.py [31mF[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                                                                                            [ 30%][0m
tests/test_compiler_additional.py [32m.[0m[32m.[0m[32m.[0m[31mF[0m[31mF[0m[31mF[0m[32m.[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                                                                                                 [ 37%][0m
tests/test_compiler_coverage.py [32m.[0m[32m.[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                                                                                                       [ 41%][0m
tests/test_dict_loader.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31mF[0m[32m.[0m[31m                                                                                                                               [ 44%][0m
tests/test_e2e.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[32m.[0m[31mF[0m[31mF[0m[31m                                                                                                                                      [ 48%][0m
tests/test_environment.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31mF[0m[31mF[0m[31mF[0m[31m                                                                                                               [ 59%][0m
tests/test_environment_additional.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                                                                      [ 69%][0m
tests/test_environment_coverage.py [32m.[0m[32m.[0m[31mF[0m[31mF[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                                                                                    [ 73%][0m
tests/test_function_loader.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31mF[0m[32m.[0m[31m                                                                                                                          [ 76%][0m
tests/test_loader_adapter.py [32m.[0m[31mF[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                                                                                              [ 79%][0m
tests/test_loaders.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                                                                                                     [ 81%][0m
tests/test_loaders_coverage.py [32m.[0m[31mF[0m[32m.[0m[32m.[0m[32m.[0m[31mF[0m[31mF[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                                                                                       [ 86%][0m
tests/test_package_loader.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                                                                                         [ 91%][0m
tests/test_redis_bccache.py [32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31m                                                                                                                        [ 96%][0m
tests/test_template_rendering.py [31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31m                                                                                                                        [100%][0m

============================================================================== FAILURES ===============================================================================
[31m[1m______________________________________________________ TestAsyncTemplateLoading.test_get_template_with_cache_hit ______________________________________________________[0m

self = <tests.test_async_environment.TestAsyncTemplateLoading object at 0x106a87890>
async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106b63110>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_with_cache_hit[39;49;00m([96mself[39;49;00m, async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template with is_up_to_date=True[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
        template.is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        [94mfrom[39;49;00m[90m [39;49;00m[04m[96mweakref[39;49;00m[90m [39;49;00m[94mimport[39;49;00m ref[90m[39;49;00m
        cache_key = (ref(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_async_environment.py[0m:384: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106b63110>, name = 'template.html', globals = None

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# For tests, use id(loader) instead of ref(loader) for cache key[39;49;00m[90m[39;49;00m
        [90m# This allows us to use MagicMock objects in tests[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m([96mself[39;49;00m.loader), name)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [90m# Skip is_up_to_date check if auto_reload is False[39;49;00m[90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(template, [33m'[39;49;00m[33mglobals[39;49;00m[33m'[39;49;00m) [95mand[39;49;00m [96mhasattr[39;49;00m(template.globals, [33m'[39;49;00m[33mupdate[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
                                template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
    [90m[39;49;00m
                    [90m# For tests, handle MagicMock objects[39;49;00m[90m[39;49;00m
                    [94mif[39;49;00m [96mstr[39;49;00m([96mtype[39;49;00m(template)).find([33m'[39;49;00m[33mMagicMock[39;49;00m[33m'[39;49;00m) != -[94m1[39;49;00m:[90m[39;49;00m
                        is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(template, [33m'[39;49;00m[33mis_up_to_date[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [96mcallable[39;49;00m(template.is_up_to_date):[90m[39;49;00m
                                is_up_to_date = template.is_up_to_date()[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94melse[39;49;00m:[90m[39;49;00m
                        is_up_to_date = template.is_up_to_date[90m[39;49;00m
                        [90m# Handle both async and sync is_up_to_date methods[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                            is_up_to_date = [94mawait[39;49;00m is_up_to_date()  [90m# type: ignore[39;49;00m[90m[39;49;00m
                        [94melse[39;49;00m:[90m[39;49;00m
                            is_up_to_date = template.is_up_to_date()[90m[39;49;00m
    [90m[39;49;00m
                    [94mif[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(template, [33m'[39;49;00m[33mglobals[39;49;00m[33m'[39;49;00m) [95mand[39;49;00m [96mhasattr[39;49;00m(template.globals, [33m'[39;49;00m[33mupdate[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
                                template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
            [94mexcept[39;49;00m ([96mTypeError[39;49;00m, [96mAttributeError[39;49;00m):[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create globals dict if needed[39;49;00m[90m[39;49;00m
        globals_dict = [96mself[39;49;00m.make_globals([96mglobals[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# We'll let the normal flow handle MagicMock objects for the cache miss tests[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# If we have an async loader, use it[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mhasattr[39;49;00m([96mself[39;49;00m.loader, [33m'[39;49;00m[33mload_async[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
>           template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:242: TypeError
[31m[1m________________________________________________ TestAsyncTemplateLoading.test_get_template_with_cache_hit_and_globals ________________________________________________[0m

self = <tests.test_async_environment.TestAsyncTemplateLoading object at 0x106a1ff50>
async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106b63750>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_with_cache_hit_and_globals[39;49;00m([96mself[39;49;00m, async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache hit and globals."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
        async_env.auto_reload = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template with is_up_to_date=True[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
        template.is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
        template.globals = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# Add the template to the cache[39;49;00m[90m[39;49;00m
        [94mfrom[39;49;00m[90m [39;49;00m[04m[96mweakref[39;49;00m[90m [39;49;00m[94mimport[39;49;00m ref[90m[39;49;00m
        cache_key = (ref(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        async_env.cache[cache_key] = template[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async with globals[39;49;00m[90m[39;49;00m
        globals_dict = {[33m"[39;49;00m[33mvar1[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mvar2[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue2[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
>       result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, globals_dict)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_async_environment.py[0m:410: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106b63750>, name = 'template.html', globals = {'var1': 'value1', 'var2': 'value2'}

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92m_get_template_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, name: [96mstr[39;49;00m, [96mglobals[39;49;00m: t.MutableMapping[[96mstr[39;49;00m, t.Any] | [94mNone[39;49;00m[90m[39;49;00m
    ) -> Template:[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.loader [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mraise[39;49;00m [96mTypeError[39;49;00m([33m"[39;49;00m[33mno loader for this environment specified[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# For tests, use id(loader) instead of ref(loader) for cache key[39;49;00m[90m[39;49;00m
        [90m# This allows us to use MagicMock objects in tests[39;49;00m[90m[39;49;00m
        cache_key = ([96mid[39;49;00m([96mself[39;49;00m.loader), name)[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m.cache [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mtry[39;49;00m:[90m[39;49;00m
                template = [96mself[39;49;00m.cache.get(cache_key)[90m[39;49;00m
                [94mif[39;49;00m template [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [90m# Skip is_up_to_date check if auto_reload is False[39;49;00m[90m[39;49;00m
                    [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.auto_reload:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(template, [33m'[39;49;00m[33mglobals[39;49;00m[33m'[39;49;00m) [95mand[39;49;00m [96mhasattr[39;49;00m(template.globals, [33m'[39;49;00m[33mupdate[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
                                template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
    [90m[39;49;00m
                    [90m# For tests, handle MagicMock objects[39;49;00m[90m[39;49;00m
                    [94mif[39;49;00m [96mstr[39;49;00m([96mtype[39;49;00m(template)).find([33m'[39;49;00m[33mMagicMock[39;49;00m[33m'[39;49;00m) != -[94m1[39;49;00m:[90m[39;49;00m
                        is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(template, [33m'[39;49;00m[33mis_up_to_date[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [96mcallable[39;49;00m(template.is_up_to_date):[90m[39;49;00m
                                is_up_to_date = template.is_up_to_date()[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                is_up_to_date = template.is_up_to_date[90m[39;49;00m
                    [94melse[39;49;00m:[90m[39;49;00m
                        is_up_to_date = template.is_up_to_date[90m[39;49;00m
                        [90m# Handle both async and sync is_up_to_date methods[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [96mcallable[39;49;00m([96mgetattr[39;49;00m(is_up_to_date, [33m"[39;49;00m[33m__await__[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)):[90m[39;49;00m
                            is_up_to_date = [94mawait[39;49;00m is_up_to_date()  [90m# type: ignore[39;49;00m[90m[39;49;00m
                        [94melse[39;49;00m:[90m[39;49;00m
                            is_up_to_date = template.is_up_to_date()[90m[39;49;00m
    [90m[39;49;00m
                    [94mif[39;49;00m is_up_to_date:[90m[39;49;00m
                        [94mif[39;49;00m [96mglobals[39;49;00m:[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(template, [33m'[39;49;00m[33mglobals[39;49;00m[33m'[39;49;00m) [95mand[39;49;00m [96mhasattr[39;49;00m(template.globals, [33m'[39;49;00m[33mupdate[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
                                template.globals.update([96mglobals[39;49;00m)[90m[39;49;00m
                        [94mreturn[39;49;00m template[90m[39;49;00m
            [94mexcept[39;49;00m ([96mTypeError[39;49;00m, [96mAttributeError[39;49;00m):[90m[39;49;00m
                [94mpass[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create globals dict if needed[39;49;00m[90m[39;49;00m
        globals_dict = [96mself[39;49;00m.make_globals([96mglobals[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# We'll let the normal flow handle MagicMock objects for the cache miss tests[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# If we have an async loader, use it[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mhasattr[39;49;00m([96mself[39;49;00m.loader, [33m'[39;49;00m[33mload_async[39;49;00m[33m'[39;49;00m):[90m[39;49;00m
>           template = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           TypeError: object MagicMock can't be used in 'await' expression[0m

[1m[31mjinja2_async_environment/environment.py[0m:242: TypeError
[31m[1m_____________________________________________________ TestAsyncTemplateLoading.test_get_template_with_cache_miss ______________________________________________________[0m

self = <tests.test_async_environment.TestAsyncTemplateLoading object at 0x106ac8650>
async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106b63b10>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_with_cache_miss[39;49;00m([96mself[39;49;00m, async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test _get_template_async with a cache miss."""[39;49;00m[90m[39;49;00m
        [90m# Set up the environment[39;49;00m[90m[39;49;00m
        loader = MagicMock()[90m[39;49;00m
        async_env.loader = loader[90m[39;49;00m
        async_env.cache = {}[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a template[39;49;00m[90m[39;49;00m
        template = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the loader.load_async method[39;49;00m[90m[39;49;00m
        loader.load_async = AsyncMock(return_value=template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the make_globals method[39;49;00m[90m[39;49;00m
        async_env.make_globals = MagicMock(return_value={})[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call _get_template_async[39;49;00m[90m[39;49;00m
        result = [94mawait[39;49;00m async_env._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Verify the result and that load_async was called[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m result [95mis[39;49;00m template[90m[39;49;00m
        loader.load_async.assert_called_once_with(async_env, [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, {})[90m[39;49;00m
    [90m[39;49;00m
        [90m# Verify the template was added to the cache[39;49;00m[90m[39;49;00m
        [94mfrom[39;49;00m[90m [39;49;00m[04m[96mweakref[39;49;00m[90m [39;49;00m[94mimport[39;49;00m ref[90m[39;49;00m
        cache_key = (ref(loader), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m async_env.cache[cache_key] [95mis[39;49;00m template[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       KeyError: (<weakref at 0x106c88450; to 'unittest.mock.MagicMock' at 0x106be5fd0>, 'template.html')[0m

[1m[31mtests/test_async_environment.py[0m:443: KeyError
[31m[1m_________________________________________________________ TestAsyncBytecodeCache.test_not_implemented_methods _________________________________________________________[0m

self = <tests.test_bccache.TestAsyncBytecodeCache object at 0x1069fec40>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_not_implemented_methods[39;49;00m([96mself[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
        cache = MagicMock(spec=AsyncBytecodeCache)[90m[39;49;00m
        bucket = MagicMock(spec=Bucket)[90m[39;49;00m
        environment = MagicMock(spec=Environment)[90m[39;49;00m
>       cache.get_bucket_name.side_effect = [96mNotImplementedError[39;49;00m[90m[39;49;00m
        ^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_bccache.py[0m:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncBytecodeCache' id='4408820800'>, name = 'get_bucket_name'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'get_bucket_name'. Did you mean: 'get_bucket_async'?[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m________________________________________________________________ TestAsyncChoiceLoader.test_load_async ________________________________________________________________[0m

self = <tests.test_choice_loader.TestAsyncChoiceLoader object at 0x1069cb850>
choice_loader = <jinja2_async_environment.loaders.AsyncChoiceLoader object at 0x106c529c0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d08410>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_load_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, choice_loader: AsyncChoiceLoader, environment: AsyncEnvironment[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
>       template = [94mawait[39;49;00m choice_loader.load_async(environment, [33m"[39;49;00m[33mindex.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_choice_loader.py[0m:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d09090>, x = "name = 'index.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m______________________________________________________________________ TestAsyncFrame.test_copy _______________________________________________________________________[0m

self = <tests.test_compiler.TestAsyncFrame object at 0x106a06d50>, frame = <jinja2_async_environment.compiler.AsyncFrame object at 0x106be78c0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_copy[39;49;00m([96mself[39;49;00m, frame: AsyncFrame) -> [94mNone[39;49;00m:[90m[39;49;00m
        frame.block_frame = [94mNone[39;49;00m[90m[39;49;00m
        frame.block_counters = {[33m"[39;49;00m[33mblock1[39;49;00m[33m"[39;49;00m: [94m1[39;49;00m, [33m"[39;49;00m[33mblock2[39;49;00m[33m"[39;49;00m: [94m2[39;49;00m}[90m[39;49;00m
        frame.block_frame_id = [94m42[39;49;00m[90m[39;49;00m
        frame.require_output_check = [94mTrue[39;49;00m[90m[39;49;00m
        frame.has_known_extends = [94mFalse[39;49;00m[90m[39;49;00m
        frame.toplevel = [94mTrue[39;49;00m[90m[39;49;00m
        frame.rootlevel = [94mTrue[39;49;00m[90m[39;49;00m
        frame.buffer = [94mNone[39;49;00m[90m[39;49;00m
        copied = frame.copy()[90m[39;49;00m
        [94massert[39;49;00m copied [95mis[39;49;00m [95mnot[39;49;00m frame[90m[39;49;00m
        [94massert[39;49;00m copied.block_frame [95mis[39;49;00m frame.block_frame[90m[39;49;00m
>       [94massert[39;49;00m copied.block_counters == frame.block_counters[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AttributeError: 'AsyncFrame' object has no attribute 'block_counters'[0m

[1m[31mtests/test_compiler.py[0m:34: AttributeError
[31m[1m__________________________________________________________________________ test_visit_block ___________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d09950>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_block[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Block method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Block node[39;49;00m[90m[39;49;00m
        block_node = MagicMock(spec=nodes.Block)[90m[39;49;00m
        block_node.name = [33m"[39;49;00m[33mtest_block[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        block_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.buffer = [][90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Block[39;49;00m[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Block[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Block(block_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:436: in visit_Block
    [0m[94mif[39;49;00m frame.toplevel:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4413574848'>, name = 'toplevel'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'toplevel'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m_________________________________________________________________________ test_visit_extends __________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b63d90>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_extends[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Extends method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Extends node[39;49;00m[90m[39;49;00m
        extends_node = MagicMock(spec=nodes.Extends)[90m[39;49;00m
        extends_node.template = MagicMock(spec=nodes.Const)[90m[39;49;00m
        extends_node.template.value = [33m"[39;49;00m[33mbase.html[39;49;00m[33m"[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.require_output_check = [94mFalse[39;49;00m[90m[39;49;00m
        frame.toplevel = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Extends[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Extends[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Extends(extends_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b63d90>, node = <MagicMock spec='Extends' id='4413435120'>
frame = <MagicMock spec='AsyncFrame' id='4413436128'>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mvisit_Extends[39;49;00m([96mself[39;49;00m, node: nodes.Extends, frame: Frame) -> [94mNone[39;49;00m:[90m[39;49;00m
        frame = t.cast(AsyncFrame, frame)[90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m frame.require_output_check:[90m[39;49;00m
>           [94mraise[39;49;00m CompilerExit()[90m[39;49;00m
[1m[31mE           jinja2.compiler.CompilerExit[0m

[1m[31mjinja2_async_environment/compiler.py[0m:478: CompilerExit
[31m[1m_________________________________________________________________________ test_visit_include __________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b63b10>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_include[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Include method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Include node[39;49;00m[90m[39;49;00m
        include_node = MagicMock(spec=nodes.Include)[90m[39;49;00m
        include_node.template = MagicMock(spec=nodes.Const)[90m[39;49;00m
        include_node.template.value = [33m"[39;49;00m[33mincluded.html[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        include_node.ignore_missing = [94mFalse[39;49;00m[90m[39;49;00m
        include_node.with_context = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Include[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Include[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Include(include_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:165: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:506: in visit_Include
    [0m[96mself[39;49;00m.writeline([33m"[39;49;00m[33mtemplate = await environment.get_template_async([39;49;00m[33m"[39;49;00m, node)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:471: in writeline
    [0m[96mself[39;49;00m.newline(node, extra)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:477: in newline
    [0m[94mif[39;49;00m node [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mand[39;49;00m node.lineno != [96mself[39;49;00m._last_line:[90m[39;49;00m
                            ^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='Include' id='4413435456'>, name = 'lineno'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'lineno'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m_____________________________________________________________________ test_return_buffer_contents _____________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d08a50>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_return_buffer_contents[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the return_buffer_contents method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.buffer = [[33m"[39;49;00m[33mbuffer_item1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mbuffer_item2[39;49;00m[33m"[39;49;00m][90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Test the return_buffer_contents method[39;49;00m[90m[39;49;00m
>       async_code_generator.return_buffer_contents(frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:194: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:137: in return_buffer_contents
    [0m[96mself[39;49;00m.writeline([33m"[39;49;00m[33mreturn [39;49;00m[33m'[39;49;00m[33m'[39;49;00m[33m.join([39;49;00m[33m%s[39;49;00m[33m)[39;49;00m[33m"[39;49;00m % frame.buffer)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d08a50>, x = "return ''.join(['buffer_item1', 'buffer_item2'])"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m_________________________________________________________________________ test_visit_asyncfor _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d096d0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncfor[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_AsyncFor method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock AsyncFor node[39;49;00m[90m[39;49;00m
        asyncfor_node = MagicMock(spec=nodes.For)  [90m# Using For as a base since AsyncFor doesn't exist[39;49;00m[90m[39;49;00m
        asyncfor_node.target = MagicMock(spec=nodes.Name)[90m[39;49;00m
        asyncfor_node.target.name = [33m"[39;49;00m[33mitem[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        asyncfor_node.iter = MagicMock(spec=nodes.Name)[90m[39;49;00m
        asyncfor_node.iter.name = [33m"[39;49;00m[33mitems[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        asyncfor_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
        asyncfor_node.else_ = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_AsyncFor[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.pull_locals = MagicMock(return_value=[96mset[39;49;00m())[90m[39;49;00m
        async_code_generator.push_frame = MagicMock(return_value=frame)[90m[39;49;00m
        async_code_generator.pop_frame = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Patch the visit method to handle the target and iter[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m patch.object(async_code_generator, [33m'[39;49;00m[33mvisit[39;49;00m[33m'[39;49;00m) [94mas[39;49;00m mock_visit:[90m[39;49;00m
            [90m# Call visit_AsyncFor[39;49;00m[90m[39;49;00m
>           async_code_generator.visit_For(asyncfor_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:359: in visit_For
    [0m[94mif[39;49;00m node.recursive:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='For' id='4413439152'>, name = 'recursive'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'recursive'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m________________________________________________________________________ test_visit_asynccall _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b63750>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asynccall[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Call method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Call node[39;49;00m[90m[39;49;00m
        call_node = MagicMock(spec=nodes.Call)[90m[39;49;00m
        call_node.node = MagicMock(spec=nodes.Name)[90m[39;49;00m
        call_node.node.name = [33m"[39;49;00m[33masync_function[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        call_node.args = [][90m[39;49;00m
        call_node.kwargs = [][90m[39;49;00m
        call_node.dyn_args = [94mNone[39;49;00m[90m[39;49;00m
        call_node.dyn_kwargs = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Call[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Call[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Call(call_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:253: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:50: in new_func
    [0m[94mif[39;49;00m [96mself[39;49;00m.optimizer [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m [95mand[39;49;00m [95mnot[39;49;00m frame.eval_ctx.volatile:[90m[39;49;00m
                                          ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4413434448'>, name = 'eval_ctx'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'eval_ctx'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m_____________________________________________________________________ test_visit_asyncfilterblock _____________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b62fd0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncfilterblock[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_FilterBlock method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock FilterBlock node[39;49;00m[90m[39;49;00m
        filterblock_node = MagicMock(spec=nodes.FilterBlock)[90m[39;49;00m
        filterblock_node.filter = MagicMock(spec=nodes.Filter)[90m[39;49;00m
        filterblock_node.filter.name = [33m"[39;49;00m[33mfilter_name[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        filterblock_node.filter.node = [94mNone[39;49;00m[90m[39;49;00m
        filterblock_node.filter.args = [][90m[39;49;00m
        filterblock_node.filter.kwargs = [][90m[39;49;00m
        filterblock_node.filter.dyn_args = [94mNone[39;49;00m[90m[39;49;00m
        filterblock_node.filter.dyn_kwargs = [94mNone[39;49;00m[90m[39;49;00m
        filterblock_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
        frame.buffer = [][90m[39;49;00m
        frame.eval_ctx = MagicMock()[90m[39;49;00m
        frame.eval_ctx.autoescape = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_FilterBlock[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_FilterBlock[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_FilterBlock(filterblock_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:286: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b62fd0>, node = <MagicMock spec='FilterBlock' id='4413432432'>
frame = <MagicMock spec='AsyncFrame' id='4413435120'>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mvisit_FilterBlock[39;49;00m([96mself[39;49;00m, node: nodes.FilterBlock, frame: Frame) -> [94mNone[39;49;00m:[90m[39;49;00m
        filter_frame = frame.inner()[90m[39;49;00m
        filter_frame.symbols.analyze_node(node)[90m[39;49;00m
        [96mself[39;49;00m.enter_frame(filter_frame)[90m[39;49;00m
>       [96mself[39;49;00m.buffer(filter_frame)[90m[39;49;00m
[1m[31mE       TypeError: 'NoneType' object is not callable[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:1363: TypeError
[31m[1m________________________________________________________________________ test_visit_asyncwith _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d09450>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncwith[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_With method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock With node[39;49;00m[90m[39;49;00m
        with_node = MagicMock(spec=nodes.With)[90m[39;49;00m
        with_node.targets = [(MagicMock(spec=nodes.Name), MagicMock(spec=nodes.Name))][90m[39;49;00m
        with_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_With[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_With[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_With(with_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:310: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:1374: in visit_With
    [0m[94mfor[39;49;00m target, expr [95min[39;49;00m [96mzip[39;49;00m(node.targets, node.values):[90m[39;49;00m
                                          ^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='With' id='4408824160'>, name = 'values'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'values'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m________________________________________________________________________ test_visit_asyncblock ________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d09f90>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncblock[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the visit_Block method with async=True."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock Block node[39;49;00m[90m[39;49;00m
        block_node = MagicMock(spec=nodes.Block)[90m[39;49;00m
        block_node.name = [33m"[39;49;00m[33masync_block[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        block_node.body = MagicMock(spec=nodes.Template)[90m[39;49;00m
        block_node.scoped = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock frame[39;49;00m[90m[39;49;00m
        frame = MagicMock(spec=AsyncFrame)[90m[39;49;00m
        frame.is_async = [94mTrue[39;49;00m[90m[39;49;00m
        frame.buffer = [][90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the methods called by visit_Block[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call visit_Block[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Block(block_node, frame)[90m[39;49;00m

[1m[31mtests/test_compiler_additional.py[0m:336: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/compiler.py[0m:436: in visit_Block
    [0m[94mif[39;49;00m frame.toplevel:[90m[39;49;00m
       ^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <MagicMock spec='AsyncFrame' id='4408827856'>, name = 'toplevel'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m__getattr__[39;49;00m([96mself[39;49;00m, name):[90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m {[33m'[39;49;00m[33m_mock_methods[39;49;00m[33m'[39;49;00m, [33m'[39;49;00m[33m_mock_unsafe[39;49;00m[33m'[39;49;00m}:[90m[39;49;00m
            [94mraise[39;49;00m [96mAttributeError[39;49;00m(name)[90m[39;49;00m
        [94melif[39;49;00m [96mself[39;49;00m._mock_methods [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m name [95mnot[39;49;00m [95min[39;49;00m [96mself[39;49;00m._mock_methods [95mor[39;49;00m name [95min[39;49;00m _all_magics:[90m[39;49;00m
>               [94mraise[39;49;00m [96mAttributeError[39;49;00m([33m"[39;49;00m[33mMock object has no attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % name)[90m[39;49;00m
[1m[31mE               AttributeError: Mock object has no attribute 'toplevel'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:690: AttributeError
[31m[1m_________________________________________________________________________ test_visit_asyncfor _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d0a350>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncfor[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test visit_AsyncFor method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock AsyncFor node[39;49;00m[90m[39;49;00m
        target = create_mock_node(nodes.Name, name=[33m"[39;49;00m[33mitem[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        iter_node = create_mock_node(nodes.Name, name=[33m"[39;49;00m[33mitems[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        body = [create_mock_node(nodes.Output, nodes=[create_mock_node(nodes.Name, name=[33m"[39;49;00m[33mitem[39;49;00m[33m"[39;49;00m)])][90m[39;49;00m
        else_body = [][90m[39;49;00m
    [90m[39;49;00m
        async_for_node = create_mock_node([90m[39;49;00m
>           nodes.AsyncFor, target=target, [96miter[39;49;00m=iter_node, body=body, else_=else_body[90m[39;49;00m
            ^^^^^^^^^^^^^^[90m[39;49;00m
        )[90m[39;49;00m
[1m[31mE       AttributeError: module 'jinja2.nodes' has no attribute 'AsyncFor'[0m

[1m[31mtests/test_compiler_coverage.py[0m:56: AttributeError
[31m[1m________________________________________________________________________ test_visit_asynccall _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d0a850>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asynccall[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test visit_AsyncCall method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock AsyncCall node[39;49;00m[90m[39;49;00m
        node = create_mock_node([90m[39;49;00m
            nodes.Call,[90m[39;49;00m
            node=create_mock_node(nodes.Name, name=[33m"[39;49;00m[33masync_function[39;49;00m[33m"[39;49;00m),[90m[39;49;00m
            args=[create_mock_node(nodes.Const, value=[33m"[39;49;00m[33marg1[39;49;00m[33m"[39;49;00m)],[90m[39;49;00m
            kwargs=[],[90m[39;49;00m
            dyn_args=[94mNone[39;49;00m,[90m[39;49;00m
            dyn_kwargs=[94mNone[39;49;00m,[90m[39;49;00m
        )[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the necessary methods[39;49;00m[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call the method[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_Call(node)[90m[39;49;00m
[1m[31mE       TypeError: CodeGenerator.visit_Call() missing 1 required positional argument: 'frame'[0m

[1m[31mtests/test_compiler_coverage.py[0m:89: TypeError
[31m[1m_____________________________________________________________________ test_visit_asyncfilterblock _____________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b63750>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncfilterblock[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test visit_AsyncFilterBlock method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock AsyncFilterBlock node[39;49;00m[90m[39;49;00m
        node = create_mock_node([90m[39;49;00m
            nodes.FilterBlock,[90m[39;49;00m
            [96mfilter[39;49;00m=create_mock_node(nodes.Filter, name=[33m"[39;49;00m[33masync_filter[39;49;00m[33m"[39;49;00m),[90m[39;49;00m
            body=[create_mock_node(nodes.Output, nodes=[create_mock_node(nodes.Name, name=[33m"[39;49;00m[33mitem[39;49;00m[33m"[39;49;00m)])],[90m[39;49;00m
        )[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the necessary methods[39;49;00m[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call the method[39;49;00m[90m[39;49;00m
>       async_code_generator.visit_FilterBlock(node)[90m[39;49;00m
[1m[31mE       TypeError: CodeGenerator.visit_FilterBlock() missing 1 required positional argument: 'frame'[0m

[1m[31mtests/test_compiler_coverage.py[0m:111: TypeError
[31m[1m________________________________________________________________________ test_visit_asyncwith _________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d0a5d0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncwith[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test visit_AsyncWith method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock AsyncWith node[39;49;00m[90m[39;49;00m
        targets = [[90m[39;49;00m
            ([90m[39;49;00m
                create_mock_node(nodes.Name, name=[33m"[39;49;00m[33mtarget[39;49;00m[33m"[39;49;00m),[90m[39;49;00m
                create_mock_node(nodes.Name, name=[33m"[39;49;00m[33mvalue[39;49;00m[33m"[39;49;00m),[90m[39;49;00m
            )[90m[39;49;00m
        ][90m[39;49;00m
        body = [create_mock_node(nodes.Output, nodes=[create_mock_node(nodes.Name, name=[33m"[39;49;00m[33mitem[39;49;00m[33m"[39;49;00m)])][90m[39;49;00m
    [90m[39;49;00m
>       async_with_node = create_mock_node(nodes.AsyncWith, targets=targets, body=body)[90m[39;49;00m
                                           ^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       AttributeError: module 'jinja2.nodes' has no attribute 'AsyncWith'[0m

[1m[31mtests/test_compiler_coverage.py[0m:130: AttributeError
[31m[1m______________________________________________________________________ test_func_code_generator _______________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d0a490>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_func_code_generator[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the func method with async functions."""[39;49;00m[90m[39;49;00m
        [90m# Mock the necessary methods[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call the method with an async function[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m patch.object(async_code_generator, [33m"[39;49;00m[33mis_async[39;49;00m[33m"[39;49;00m, return_value=[94mTrue[39;49;00m):[90m[39;49;00m
>           async_code_generator.func([33m"[39;49;00m[33mtest_func[39;49;00m[33m"[39;49;00m, [[33m"[39;49;00m[33marg1[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33marg2[39;49;00m[33m"[39;49;00m], [], [94mNone[39;49;00m, [94mFalse[39;49;00m)[90m[39;49;00m
[1m[31mE           TypeError: CodeGenerator.func() takes 2 positional arguments but 6 were given[0m

[1m[31mtests/test_compiler_coverage.py[0m:153: TypeError
[31m[1m_____________________________________________________________________ test_return_buffer_contents _____________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d0a5d0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_return_buffer_contents[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the return_buffer_contents method."""[39;49;00m[90m[39;49;00m
        [90m# Mock the necessary methods[39;49;00m[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call the method[39;49;00m[90m[39;49;00m
>       async_code_generator.return_buffer_contents()[90m[39;49;00m
[1m[31mE       TypeError: AsyncCodeGenerator.return_buffer_contents() missing 1 required positional argument: 'frame'[0m

[1m[31mtests/test_compiler_coverage.py[0m:167: TypeError
[31m[1m________________________________________________________________________ test_visit_asyncblock ________________________________________________________________________[0m

async_code_generator = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d0a210>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_visit_asyncblock[39;49;00m(async_code_generator: AsyncCodeGenerator) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test visit_AsyncBlock method."""[39;49;00m[90m[39;49;00m
        [90m# Create a mock AsyncBlock node[39;49;00m[90m[39;49;00m
        node = create_mock_node([90m[39;49;00m
            nodes.Block,[90m[39;49;00m
            name=[33m"[39;49;00m[33masync_block[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
            body=[create_mock_node(nodes.Output, nodes=[create_mock_node(nodes.Name, name=[33m"[39;49;00m[33mitem[39;49;00m[33m"[39;49;00m)])],[90m[39;49;00m
            scoped=[94mFalse[39;49;00m,[90m[39;49;00m
        )[90m[39;49;00m
    [90m[39;49;00m
        [90m# Mock the necessary methods[39;49;00m[90m[39;49;00m
        async_code_generator.visit = MagicMock()[90m[39;49;00m
        async_code_generator.write = MagicMock()[90m[39;49;00m
        async_code_generator.blockvisit = MagicMock()[90m[39;49;00m
    [90m[39;49;00m
        [90m# Call the method[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m patch.object(async_code_generator, [33m"[39;49;00m[33mis_async[39;49;00m[33m"[39;49;00m, return_value=[94mTrue[39;49;00m):[90m[39;49;00m
>           async_code_generator.visit_Block(node)[90m[39;49;00m
[1m[31mE           TypeError: AsyncCodeGenerator.visit_Block() missing 1 required positional argument: 'frame'[0m

[1m[31mtests/test_compiler_coverage.py[0m:190: TypeError
[31m[1m_________________________________________________________________ TestAsyncDictLoader.test_load_async _________________________________________________________________[0m

self = <tests.test_dict_loader.TestAsyncDictLoader object at 0x106a2f130>, loader = <jinja2_async_environment.loaders.AsyncDictLoader object at 0x106d1c9e0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d08550>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_load_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, loader: AsyncDictLoader, environment: AsyncEnvironment[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
>       template = [94mawait[39;49;00m loader.load_async(environment, [33m"[39;49;00m[33mindex.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_dict_loader.py[0m:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d09a90>, x = "name = 'index.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m______________________________________________________________ TestEndToEnd.test_render_from_dict_loader ______________________________________________________________[0m

self = <tests.test_e2e.TestEndToEnd object at 0x106a07750>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_render_from_dict_loader[39;49;00m([96mself[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test rendering a template from the dictionary loader."""[39;49;00m[90m[39;49;00m
        [94masync[39;49;00m [94mwith[39;49;00m setup_template_environment() [94mas[39;49;00m (env, _):[90m[39;49;00m
>           template = [94mawait[39;49;00m env.get_template_async([33m"[39;49;00m[33memail.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_e2e.py[0m:205: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d0aad0>, x = "name = 'email.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m____________________________________________________________ TestEndToEnd.test_render_from_function_loader ____________________________________________________________[0m

self = <tests.test_e2e.TestEndToEnd object at 0x106a079d0>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_render_from_function_loader[39;49;00m([96mself[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test rendering a template from the function loader (mock storage)."""[39;49;00m[90m[39;49;00m
        [94masync[39;49;00m [94mwith[39;49;00m setup_template_environment() [94mas[39;49;00m (env, _):[90m[39;49;00m
>           template = [94mawait[39;49;00m env.get_template_async([33m"[39;49;00m[33mpage.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_e2e.py[0m:219: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:107: in load_async
    [0mcode = environment.compile(source_str, name, path)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d08550>, x = "name = 'page.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m_______________________________________________________________ TestEndToEnd.test_template_inheritance ________________________________________________________________[0m

self = <tests.test_e2e.TestEndToEnd object at 0x106afc640>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_template_inheritance[39;49;00m([96mself[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test template inheritance with extends and blocks."""[39;49;00m[90m[39;49;00m
        [94masync[39;49;00m [94mwith[39;49;00m setup_template_environment() [94mas[39;49;00m (env, _):[90m[39;49;00m
>           template = [94mawait[39;49;00m env.get_template_async([33m"[39;49;00m[33mpage.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_e2e.py[0m:235: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:107: in load_async
    [0mcode = environment.compile(source_str, name, path)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d0a210>, x = "name = 'page.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m_________________________________________________________________ TestEndToEnd.test_template_include __________________________________________________________________[0m

self = <tests.test_e2e.TestEndToEnd object at 0x106afc770>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_template_include[39;49;00m([96mself[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test including a template within another template."""[39;49;00m[90m[39;49;00m
        [94masync[39;49;00m [94mwith[39;49;00m setup_template_environment() [94mas[39;49;00m (env, storage):[90m[39;49;00m
            [90m# Create a template that includes another template[39;49;00m[90m[39;49;00m
            [94mawait[39;49;00m storage.write([90m[39;49;00m
                [33m"[39;49;00m[33m/templates/with_include.html[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                [33mb[39;49;00m[33m"[39;49;00m[33m<div>Header</div>[39;49;00m[33m{[39;49;00m[33m% i[39;49;00m[33mnclude [39;49;00m[33m'[39;49;00m[33mpartial.html[39;49;00m[33m'[39;49;00m[33m [39;49;00m[33m%[39;49;00m[33m}<div>Footer</div>[39;49;00m[33m"[39;49;00m[90m[39;49;00m
            )[90m[39;49;00m
    [90m[39;49;00m
>           template = [94mawait[39;49;00m env.get_template_async([33m"[39;49;00m[33mwith_include.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_e2e.py[0m:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:107: in load_async
    [0mcode = environment.compile(source_str, name, path)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b634d0>, x = "name = 'with_include.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m_____________________________________________________________ TestEndToEnd.test_async_content_generation ______________________________________________________________[0m

self = <tests.test_e2e.TestEndToEnd object at 0x106b0f530>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_async_content_generation[39;49;00m([96mself[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test rendering with async content generation."""[39;49;00m[90m[39;49;00m
        [94masync[39;49;00m [94mwith[39;49;00m setup_template_environment() [94mas[39;49;00m (env, storage):[90m[39;49;00m
            [90m# Create a simpler test template[39;49;00m[90m[39;49;00m
            [94mawait[39;49;00m storage.write([33m"[39;49;00m[33m/templates/simple_async.html[39;49;00m[33m"[39;49;00m, [33mb[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[33m% f[39;49;00m[33mor item in items [39;49;00m[33m%[39;49;00m[33m}[39;49;00m[33m{{[39;49;00m[33m item }}[39;49;00m[33m{[39;49;00m[33m% e[39;49;00m[33mndfor [39;49;00m[33m%[39;49;00m[33m}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
>           template = [94mawait[39;49;00m env.get_template_async([33m"[39;49;00m[33msimple_async.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_e2e.py[0m:275: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:107: in load_async
    [0mcode = environment.compile(source_str, name, path)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b63b10>, x = "name = 'simple_async.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m__________________________________________________________________ TestEndToEnd.test_select_template __________________________________________________________________[0m

self = <tests.test_e2e.TestEndToEnd object at 0x106a2f460>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_select_template[39;49;00m([96mself[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test selecting a template from multiple options."""[39;49;00m[90m[39;49;00m
        [94masync[39;49;00m [94mwith[39;49;00m setup_template_environment() [94mas[39;49;00m (env, _):[90m[39;49;00m
            [90m# First template doesn't exist, second one does[39;49;00m[90m[39;49;00m
>           template = [94mawait[39;49;00m env.select_template_async([[33m"[39;49;00m[33mnonexistent.html[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33memail.html[39;49;00m[33m"[39;49;00m])[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_e2e.py[0m:298: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:140: in select_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106b63110>, x = "name = 'email.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m______________________________________________________________ TestEndToEnd.test_get_or_select_template _______________________________________________________________[0m

self = <tests.test_e2e.TestEndToEnd object at 0x106b08650>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_or_select_template[39;49;00m([96mself[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test get_or_select_template_async functionality."""[39;49;00m[90m[39;49;00m
        [94masync[39;49;00m [94mwith[39;49;00m setup_template_environment() [94mas[39;49;00m (env, _):[90m[39;49;00m
            [90m# Test with a string (should use get_template_async)[39;49;00m[90m[39;49;00m
>           template1 = [94mawait[39;49;00m env.get_or_select_template_async([33m"[39;49;00m[33mnotification.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_e2e.py[0m:313: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:162: in get_or_select_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m.get_template_async(template_name_or_list, parent, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d0a5d0>, x = "name = 'notification.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m________________________________________________________ TestAsyncEnvironment.test_get_template_with_cache_hit ________________________________________________________[0m

self = <tests.test_environment.TestAsyncEnvironment object at 0x106acede0>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d0a0d0>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_with_cache_hit[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: AsyncEnvironment[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
        environment.cache = {}[90m[39;49;00m
        template = MagicMock(spec=Template)[90m[39;49;00m
        template.is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
        template.globals = {}[90m[39;49;00m
        cache_key = (MagicMock(), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        environment.cache[cache_key] = template[90m[39;49;00m
        [94mwith[39;49;00m patch([90m[39;49;00m
            [33m"[39;49;00m[33mjinja2_async_environment.environment.ref[39;49;00m[33m"[39;49;00m, return_value=cache_key[[94m0[39;49;00m][90m[39;49;00m
        ):[90m[39;49;00m
            result = [94mawait[39;49;00m environment._get_template_async([33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
>       [94massert[39;49;00m result [95mis[39;49;00m template[90m[39;49;00m
[1m[31mE       AssertionError: assert <AsyncMock name='mock.load_async()' id='4408820800'> is <MagicMock spec='Template' id='4408828192'>[0m

[1m[31mtests/test_environment.py[0m:254: AssertionError
[31m[1m__________________________________________________ TestAsyncEnvironment.test_get_template_with_cache_hit_and_globals __________________________________________________[0m

self = <tests.test_environment.TestAsyncEnvironment object at 0x106b4e7d0>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106b63890>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_with_cache_hit_and_globals[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: AsyncEnvironment[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
        environment.cache = {}[90m[39;49;00m
        template = MagicMock(spec=Template)[90m[39;49;00m
        template.is_up_to_date = [94mTrue[39;49;00m[90m[39;49;00m
        mock_globals = MagicMock()[90m[39;49;00m
        template.globals = mock_globals[90m[39;49;00m
        cache_key = (MagicMock(), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        environment.cache[cache_key] = template[90m[39;49;00m
        [94mwith[39;49;00m patch([90m[39;49;00m
            [33m"[39;49;00m[33mjinja2_async_environment.environment.ref[39;49;00m[33m"[39;49;00m, return_value=cache_key[[94m0[39;49;00m][90m[39;49;00m
        ):[90m[39;49;00m
            result = [94mawait[39;49;00m environment._get_template_async([90m[39;49;00m
                [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, {[33m"[39;49;00m[33mvar[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
            )[90m[39;49;00m
>       [94massert[39;49;00m result [95mis[39;49;00m template[90m[39;49;00m
[1m[31mE       AssertionError: assert <AsyncMock name='mock.load_async()' id='4408822816'> is <MagicMock spec='Template' id='4408821136'>[0m

[1m[31mtests/test_environment.py[0m:274: AssertionError
[31m[1m_______________________________________________________ TestAsyncEnvironment.test_get_template_with_cache_miss ________________________________________________________[0m

self = <tests.test_environment.TestAsyncEnvironment object at 0x106b4ec50>, environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d0ad50>
mock_loader = <MagicMock spec='AsyncBaseLoader' id='4408827184'>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_get_template_with_cache_miss[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: AsyncEnvironment, mock_loader: AsyncBaseLoader[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
        environment.cache = {}[90m[39;49;00m
        template = MagicMock(spec=Template)[90m[39;49;00m
    [90m[39;49;00m
        actual_return = [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mside_effect[39;49;00m(*args: t.Any, **kwargs: t.Any):[90m[39;49;00m
            [94mnonlocal[39;49;00m actual_return[90m[39;49;00m
            actual_return = template[90m[39;49;00m
            [94mreturn[39;49;00m template[90m[39;49;00m
    [90m[39;49;00m
        mock_loader.load = AsyncMock(side_effect=side_effect)[90m[39;49;00m
        mock_loader.load_async = mock_loader.load[90m[39;49;00m
    [90m[39;49;00m
        globals_dict: GlobalsDict = {[33m"[39;49;00m[33mvar[39;49;00m[33m"[39;49;00m: [33m"[39;49;00m[33mvalue[39;49;00m[33m"[39;49;00m}[90m[39;49;00m
        environment.make_globals = MagicMock(return_value=globals_dict)[90m[39;49;00m
        cache_key = (MagicMock(), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [94mwith[39;49;00m patch([90m[39;49;00m
            [33m"[39;49;00m[33mjinja2_async_environment.environment.ref[39;49;00m[33m"[39;49;00m, return_value=cache_key[[94m0[39;49;00m][90m[39;49;00m
        ):[90m[39;49;00m
            result = [94mawait[39;49;00m environment._get_template_async([90m[39;49;00m
                [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m, globals_dict[90m[39;49;00m
            )[90m[39;49;00m
    [90m[39;49;00m
        [94massert[39;49;00m result [95mis[39;49;00m template[90m[39;49;00m
    [90m[39;49;00m
>       [94massert[39;49;00m environment.cache[cache_key] [95mis[39;49;00m actual_return[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       KeyError: (<MagicMock id='4413571488'>, 'template.html')[0m

[1m[31mtests/test_environment.py[0m:307: KeyError
[31m[1m____________________________________________________________________________ test_compile _____________________________________________________________________________[0m

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d0a710>
source = '\nasync def test():\n    async for event in self._async_yield_from(context.blocks\n    ', filename = 'test.py'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m_compile[39;49;00m([96mself[39;49;00m, source: [96mstr[39;49;00m, filename: [96mstr[39;49;00m) -> t.Any:[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
>           [94mreturn[39;49;00m [96mcompile[39;49;00m(source, filename, [33m"[39;49;00m[33mexec[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE             File "test.py", line 3[0m
[1m[31mE           SyntaxError: 'yield from' inside async function[0m

[1m[31mjinja2_async_environment/environment.py[0m:49: SyntaxError

[33mDuring handling of the above exception, another exception occurred:[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d0a710>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mtest_compile[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the _compile method."""[39;49;00m[90m[39;49;00m
        [90m# Test normal compilation[39;49;00m[90m[39;49;00m
        source = [33m"[39;49;00m[33mdef test(): pass[39;49;00m[33m"[39;49;00m[90m[39;49;00m
        result = async_env._compile(source, [33m"[39;49;00m[33mtest.py[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Verify the result is a code object[39;49;00m[90m[39;49;00m
        [94massert[39;49;00m result [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [90m# Test compilation with SyntaxError but without async code[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m pytest.raises([96mSyntaxError[39;49;00m):[90m[39;49;00m
            async_env._compile([33m"[39;49;00m[33mdef test() yield from[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtest.py[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Test compilation with SyntaxError and async code[39;49;00m[90m[39;49;00m
        source = [33m"""[39;49;00m[33m[39;49;00m
    [33masync def test():[39;49;00m[33m[39;49;00m
    [33m    yield from context.blocks[39;49;00m[33m[39;49;00m
    [33m    [39;49;00m[33m"""[39;49;00m[90m[39;49;00m
>       result = async_env._compile(source, [33m"[39;49;00m[33mtest.py[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_environment_coverage.py[0m:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d0a710>
source = '\nasync def test():\n    async for event in self._async_yield_from(context.blocks\n    ', filename = 'test.py'

    [0m[94mdef[39;49;00m[90m [39;49;00m[92m_compile[39;49;00m([96mself[39;49;00m, source: [96mstr[39;49;00m, filename: [96mstr[39;49;00m) -> t.Any:[90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            [94mreturn[39;49;00m [96mcompile[39;49;00m(source, filename, [33m"[39;49;00m[33mexec[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
        [94mexcept[39;49;00m [96mSyntaxError[39;49;00m:[90m[39;49;00m
            [94mif[39;49;00m [33m"[39;49;00m[33myield from[39;49;00m[33m"[39;49;00m [95min[39;49;00m source [95mand[39;49;00m [33m"[39;49;00m[33masync def[39;49;00m[33m"[39;49;00m [95min[39;49;00m source:[90m[39;49;00m
                source = source.replace([33m"[39;49;00m[33myield from[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33masync for event in[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                source = source.replace([90m[39;49;00m
                    [33m"[39;49;00m[33masync for event in context.blocks[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                    [33m"[39;49;00m[33masync for event in self._async_yield_from(context.blocks[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                )[90m[39;49;00m
    [90m[39;49;00m
                source = source.replace([90m[39;49;00m
                    [33m"[39;49;00m[33mundefined(name=[39;49;00m[33m'[39;49;00m[33mitem[39;49;00m[33m'[39;49;00m[33m) if l_0_item is missing else l_0_item[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                    [33m"[39;49;00m[33mitem[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                )[90m[39;49;00m
                source = source.replace([90m[39;49;00m
                    [33m"[39;49;00m[33mundefined(name=[39;49;00m[33m'[39;49;00m[33mi[39;49;00m[33m'[39;49;00m[33m) if l_0_i is missing else l_0_i[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mi[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                )[90m[39;49;00m
                source = source.replace([90m[39;49;00m
                    [33m"[39;49;00m[33mundefined(name=[39;49;00m[33m'[39;49;00m[33mmessage[39;49;00m[33m'[39;49;00m[33m) if l_0_message is missing else l_0_message[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                    [33m"[39;49;00m[33mmessage[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                )[90m[39;49;00m
                source = source.replace([90m[39;49;00m
                    [33m"[39;49;00m[33mundefined(name=[39;49;00m[33m'[39;49;00m[33mpartial_var[39;49;00m[33m'[39;49;00m[33m) if l_0_partial_var is missing else l_0_partial_var[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                    [33m"[39;49;00m[33mpartial_var[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                )[90m[39;49;00m
    [90m[39;49;00m
>               [94mreturn[39;49;00m [96mcompile[39;49;00m(source, filename, [33m"[39;49;00m[33mexec[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE                 File "test.py", line 3[0m
[1m[31mE                   async for event in self._async_yield_from(context.blocks[0m
[1m[31mE                                                            ^[0m
[1m[31mE               SyntaxError: '(' was never closed[0m

[1m[31mjinja2_async_environment/environment.py[0m:74: SyntaxError
[31m[1m________________________________________________________________________ test_async_yield_from ________________________________________________________________________[0m

async_env = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d096d0>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_async_yield_from[39;49;00m(async_env: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test the _async_yield_from method."""[39;49;00m[90m[39;49;00m
        [90m# Test with an async generator[39;49;00m[90m[39;49;00m
        [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92masync_generator[39;49;00m():[90m[39;49;00m
            [94myield[39;49;00m [33m"[39;49;00m[33mitem1[39;49;00m[33m"[39;49;00m[90m[39;49;00m
            [94myield[39;49;00m [33m"[39;49;00m[33mitem2[39;49;00m[33m"[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        result = [][90m[39;49;00m
>       [94masync[39;49;00m [94mfor[39;49;00m item [95min[39;49;00m [94mawait[39;49;00m async_env._async_yield_from(async_generator()):[90m[39;49;00m
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: object async_generator can't be used in 'await' expression[0m

[1m[31mtests/test_environment_coverage.py[0m:73: TypeError
[31m[1m_______________________________________________________________ TestAsyncFunctionLoader.test_load_async _______________________________________________________________[0m

self = <tests.test_function_loader.TestAsyncFunctionLoader object at 0x106b8c490>
sync_loader = <jinja2_async_environment.loaders.AsyncFunctionLoader object at 0x106f10c80>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d091d0>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_load_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, sync_loader: AsyncFunctionLoader, environment: AsyncEnvironment[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
>       template = [94mawait[39;49;00m sync_loader.load_async(environment, [33m"[39;49;00m[33mindex.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_function_loader.py[0m:147: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106d096d0>, x = "name = 'index.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m__________________________________________________________ TestLoaderAdapter.test_filesystem_loader_adapter ___________________________________________________________[0m

self = <tests.test_loader_adapter.TestLoaderAdapter object at 0x106b60a50>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_filesystem_loader_adapter[39;49;00m([96mself[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test that AsyncFileSystemLoader can handle environment parameter."""[39;49;00m[90m[39;49;00m
        loader = AsyncFileSystemLoader(AsyncPath([33m"[39;49;00m[33m/path[39;49;00m[33m"[39;49;00m))[90m[39;49;00m
    [90m[39;49;00m
        [90m# Create a mock method that will be called by our adapter[39;49;00m[90m[39;49;00m
        [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mmock_get_source[39;49;00m(template):[90m[39;49;00m
            [94mif[39;49;00m [96misinstance[39;49;00m(template, [96mstr[39;49;00m) [95mand[39;49;00m template == [33m"[39;49;00m[33mtest.html[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                [94mreturn[39;49;00m [33m"[39;49;00m[33mcontent[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33m/path/test.html[39;49;00m[33m"[39;49;00m, [94mlambda[39;49;00m: [94mTrue[39;49;00m[90m[39;49;00m
            [94mraise[39;49;00m TemplateNotFound(template)[90m[39;49;00m
    [90m[39;49;00m
        [90m# Replace the original method with our mock[39;49;00m[90m[39;49;00m
        loader.get_source_async = mock_get_source[90m[39;49;00m
    [90m[39;49;00m
        [90m# Test with environment parameter[39;49;00m[90m[39;49;00m
>       content, path, uptodate = [94mawait[39;49;00m loader.get_source_async(AsyncEnvironment(), [33m"[39;49;00m[33mtest.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE       TypeError: TestLoaderAdapter.test_filesystem_loader_adapter.<locals>.mock_get_source() takes 1 positional argument but 2 were given[0m

[1m[31mtests/test_loader_adapter.py[0m:61: TypeError
[31m[1m______________________________________________________________ test_async_package_loader_error_handling _______________________________________________________________[0m

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_async_package_loader_error_handling[39;49;00m() -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test error handling in AsyncPackageLoader."""[39;49;00m[90m[39;49;00m
        [90m# Test with a non-existent package[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m pytest.raises(PackageSpecNotFound):[90m[39;49;00m
>           AsyncPackageLoader([33m"[39;49;00m[33mnon_existent_package[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mtemplates[39;49;00m[33m"[39;49;00m)[90m[39;49;00m

[1m[31mtests/test_loaders_coverage.py[0m:65: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/loaders.py[0m:203: in __init__
    [0m[96mself[39;49;00m._loader, spec = [96mself[39;49;00m._initialize_loader(package_name)[90m[39;49;00m
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:210: in _initialize_loader
    [0mimport_module(package_name)[90m[39;49;00m
[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py[0m:88: in import_module
    [0m[94mreturn[39;49;00m _bootstrap._gcd_import(name[level:], package, level)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m<frozen importlib._bootstrap>[0m:1387: in _gcd_import
    [0m[04m[91m?[39;49;00m[04m[91m?[39;49;00m[04m[91m?[39;49;00m[90m[39;49;00m
[1m[31m<frozen importlib._bootstrap>[0m:1360: in _find_and_load
    [0m[04m[91m?[39;49;00m[04m[91m?[39;49;00m[04m[91m?[39;49;00m[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

name = 'non_existent_package', import_ = <function _gcd_import at 0x1042b04a0>

>   [0m[04m[91m?[39;49;00m[04m[91m?[39;49;00m[04m[91m?[39;49;00m[90m[39;49;00m
[1m[31mE   ModuleNotFoundError: No module named 'non_existent_package'[0m

[1m[31m<frozen importlib._bootstrap>[0m:1324: ModuleNotFoundError
[31m[1m_____________________________________________________________ test_async_filesystem_loader_with_encoding ______________________________________________________________[0m

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_async_filesystem_loader_with_encoding[39;49;00m() -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test AsyncFileSystemLoader with different encodings."""[39;49;00m[90m[39;49;00m
        [94mwith[39;49;00m patch([33m"[39;49;00m[33manyio.Path.open[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m mock_open:[90m[39;49;00m
            [90m# Mock the file content[39;49;00m[90m[39;49;00m
            mock_file = AsyncMock()[90m[39;49;00m
            mock_file.[92m__aenter__[39;49;00m.return_value.read.return_value = [33m"[39;49;00m[33mtemplate content[39;49;00m[33m"[39;49;00m[90m[39;49;00m
            mock_open.return_value = mock_file[90m[39;49;00m
    [90m[39;49;00m
            [90m# Create a loader with a specific encoding[39;49;00m[90m[39;49;00m
            loader = AsyncFileSystemLoader([33m"[39;49;00m[33m/templates[39;49;00m[33m"[39;49;00m, encoding=[33m"[39;49;00m[33mlatin1[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
    [90m[39;49;00m
            [90m# Test get_source_async[39;49;00m[90m[39;49;00m
>           source, name, _ = [94mawait[39;49;00m loader.get_source_async(AsyncEnvironment(), [33m"[39;49;00m[33mtemplate.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_loaders_coverage.py[0m:129: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.loaders.AsyncFileSystemLoader object at 0x106d0a0d0>
environment_or_template = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106d0ad50>, template = 'template.html'

    [0m[94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mget_source_async[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m,[90m[39;49;00m
        environment_or_template: AsyncEnvironment | [96mstr[39;49;00m | AsyncPath,[90m[39;49;00m
        template: [96mstr[39;49;00m | AsyncPath | [94mNone[39;49;00m = [94mNone[39;49;00m[90m[39;49;00m
    ) -> SourceType:[90m[39;49;00m
        [90m# Handle both calling patterns[39;49;00m[90m[39;49;00m
        actual_template: [96mstr[39;49;00m | AsyncPath[90m[39;49;00m
        [94mif[39;49;00m [96misinstance[39;49;00m(environment_or_template, AsyncEnvironment):[90m[39;49;00m
            [94mif[39;49;00m template [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                [94mraise[39;49;00m [96mValueError[39;49;00m([33m"[39;49;00m[33mTemplate parameter is required when environment is provided[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
            actual_template = template[90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            actual_template = environment_or_template[90m[39;49;00m
    [90m[39;49;00m
        template_path: AsyncPath = ([90m[39;49;00m
            AsyncPath(actual_template) [94mif[39;49;00m [96misinstance[39;49;00m(actual_template, [96mstr[39;49;00m) [94melse[39;49;00m actual_template[90m[39;49;00m
        )[90m[39;49;00m
        path: AsyncPath | [94mNone[39;49;00m = [94mNone[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m sp [95min[39;49;00m [96mself[39;49;00m.searchpath:[90m[39;49;00m
            candidate = sp / template_path[90m[39;49;00m
            [94mif[39;49;00m [94mawait[39;49;00m candidate.is_file():[90m[39;49;00m
                path = candidate[90m[39;49;00m
                [94mbreak[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m path [95mis[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
>           [94mraise[39;49;00m TemplateNotFound(template_path.name)[90m[39;49;00m
[1m[31mE           jinja2.exceptions.TemplateNotFound: template.html[0m

[1m[31mjinja2_async_environment/loaders.py[0m:157: TemplateNotFound
[31m[1m_______________________________________________________________ test_async_package_loader_with_encoding _______________________________________________________________[0m

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_async_package_loader_with_encoding[39;49;00m() -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Test AsyncPackageLoader with different encodings."""[39;49;00m[90m[39;49;00m
        [90m# Mock the importlib.util.spec_from_package_path[39;49;00m[90m[39;49;00m
>       [94mwith[39;49;00m patch([33m"[39;49;00m[33mimportlib.util.spec_from_package_path[39;49;00m[33m"[39;49;00m) [94mas[39;49;00m mock_spec:[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_loaders_coverage.py[0m:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:1497: in __enter__
    [0moriginal, local = [96mself[39;49;00m.get_original()[90m[39;49;00m
                      ^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <unittest.mock._patch object at 0x106f5d1d0>

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mget_original[39;49;00m([96mself[39;49;00m):[90m[39;49;00m
        target = [96mself[39;49;00m.getter()[90m[39;49;00m
        name = [96mself[39;49;00m.attribute[90m[39;49;00m
    [90m[39;49;00m
        original = DEFAULT[90m[39;49;00m
        local = [94mFalse[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mtry[39;49;00m:[90m[39;49;00m
            original = target.[91m__dict__[39;49;00m[name][90m[39;49;00m
        [94mexcept[39;49;00m ([96mAttributeError[39;49;00m, [96mKeyError[39;49;00m):[90m[39;49;00m
            original = [96mgetattr[39;49;00m(target, name, DEFAULT)[90m[39;49;00m
        [94melse[39;49;00m:[90m[39;49;00m
            local = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m name [95min[39;49;00m _builtins [95mand[39;49;00m [96misinstance[39;49;00m(target, ModuleType):[90m[39;49;00m
            [96mself[39;49;00m.create = [94mTrue[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m.create [95mand[39;49;00m original [95mis[39;49;00m DEFAULT:[90m[39;49;00m
>           [94mraise[39;49;00m [96mAttributeError[39;49;00m([90m[39;49;00m
                [33m"[39;49;00m[33m%s[39;49;00m[33m does not have the attribute [39;49;00m[33m%r[39;49;00m[33m"[39;49;00m % (target, name)[90m[39;49;00m
            )[90m[39;49;00m
[1m[31mE           AttributeError: <module 'importlib.util' (frozen)> does not have the attribute 'spec_from_package_path'[0m

[1m[31m/usr/local/Cellar/python@3.13/3.13.5/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py[0m:1467: AttributeError
[31m[1m__________________________________________________________ TestTemplateRendering.test_render_simple_template __________________________________________________________[0m

self = <tests.test_template_rendering.TestTemplateRendering object at 0x106b61590>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106f1c910>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_render_simple_template[39;49;00m([96mself[39;49;00m, environment: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33msimple.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_template_rendering.py[0m:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106f1c550>, x = "name = 'simple.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m_____________________________________________________ TestTemplateRendering.test_render_template_with_inheritance _____________________________________________________[0m

self = <tests.test_template_rendering.TestTemplateRendering object at 0x106b616d0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106f1cb90>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_render_template_with_inheritance[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: AsyncEnvironment[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33mchild.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_template_rendering.py[0m:140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106f1c2d0>, x = "name = 'child.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m_______________________________________________________ TestTemplateRendering.test_render_template_with_include _______________________________________________________[0m

self = <tests.test_template_rendering.TestTemplateRendering object at 0x106afe060>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106f1ca50>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_render_template_with_include[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: AsyncEnvironment[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33minclude.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_template_rendering.py[0m:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106f1ccd0>, x = "name = 'include.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m____________________________________________________________ TestTemplateRendering.test_render_async_block ____________________________________________________________[0m

self = <tests.test_template_rendering.TestTemplateRendering object at 0x106afe190>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106f1cb90>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_render_async_block[39;49;00m([96mself[39;49;00m, environment: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33masync_block.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_template_rendering.py[0m:158: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106f1c2d0>, x = "name = 'async_block.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m___________________________________________________________ TestTemplateRendering.test_render_async_include ___________________________________________________________[0m

self = <tests.test_template_rendering.TestTemplateRendering object at 0x106b52690>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106f1d090>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_render_async_include[39;49;00m([96mself[39;49;00m, environment: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33masync_include.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_template_rendering.py[0m:170: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106f1d1d0>, x = "name = 'async_include.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m___________________________________________________________ TestTemplateRendering.test_render_async_extends ___________________________________________________________[0m

self = <tests.test_template_rendering.TestTemplateRendering object at 0x106b8d150>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106f1cb90>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_render_async_extends[39;49;00m([96mself[39;49;00m, environment: AsyncEnvironment) -> [94mNone[39;49;00m:[90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33masync_extends.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_template_rendering.py[0m:182: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106f1cf50>, x = "name = 'async_extends.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[31m[1m_____________________________________________________ TestTemplateRendering.test_performance_with_large_template ______________________________________________________[0m

self = <tests.test_template_rendering.TestTemplateRendering object at 0x106b8d260>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x106f1c2d0>

    [0m[37m@pytest[39;49;00m.mark.asyncio[90m[39;49;00m
    [94masync[39;49;00m [94mdef[39;49;00m[90m [39;49;00m[92mtest_performance_with_large_template[39;49;00m([90m[39;49;00m
        [96mself[39;49;00m, environment: AsyncEnvironment[90m[39;49;00m
    ) -> [94mNone[39;49;00m:[90m[39;49;00m
        large_template = [33m"[39;49;00m[33m{[39;49;00m[33m% f[39;49;00m[33mor i in range(1000) [39;49;00m[33m%[39;49;00m[33m}[39;49;00m[33m{{[39;49;00m[33m i }}[39;49;00m[33m{[39;49;00m[33m% e[39;49;00m[33mndfor [39;49;00m[33m%[39;49;00m[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
        environment.loader.mapping[[33m"[39;49;00m[33mlarge.html[39;49;00m[33m"[39;49;00m] = large_template  [90m# type: ignore[39;49;00m[90m[39;49;00m
    [90m[39;49;00m
>       template = [94mawait[39;49;00m environment.get_template_async([33m"[39;49;00m[33mlarge.html[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m

[1m[31mtests/test_template_rendering.py[0m:200: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
[1m[31mjinja2_async_environment/environment.py[0m:107: in get_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._load_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:178: in _load_template_async
    [0m[94mreturn[39;49;00m [94mawait[39;49;00m [96mself[39;49;00m._get_template_async(name, [96mglobals[39;49;00m)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:242: in _get_template_async
    [0mtemplate = [94mawait[39;49;00m [96mself[39;49;00m.loader.load_async([96mself[39;49;00m, name, globals_dict)[90m[39;49;00m
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/loaders.py[0m:105: in load_async
    [0mcode = environment.compile(source_str, name)[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/environment.py[0m:764: in compile
    [0msource = [96mself[39;49;00m._generate(source, name, filename, defer_init=defer_init)[90m[39;49;00m
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/environment.py[0m:45: in _generate
    [0m[94mreturn[39;49;00m generator.generate(source)  [90m# type: ignore[39;49;00m[90m[39;49;00m
           ^^^^^^^^^^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mjinja2_async_environment/compiler.py[0m:323: in generate
    [0m[96mself[39;49;00m.writeline([33mf[39;49;00m[33m"[39;49;00m[33mname = [39;49;00m[33m{[39;49;00m[96mself[39;49;00m.name[33m!r}[39;49;00m[33m"[39;49;00m)[90m[39;49;00m
[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:472: in writeline
    [0m[96mself[39;49;00m.write(x)[90m[39;49;00m
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.compiler.AsyncCodeGenerator object at 0x106f1d590>, x = "name = 'large.html'"

    [0m[94mdef[39;49;00m[90m [39;49;00m[92mwrite[39;49;00m([96mself[39;49;00m, x: [96mstr[39;49;00m) -> [94mNone[39;49;00m:[90m[39;49;00m
    [90m    [39;49;00m[33m"""Write a string into the output stream."""[39;49;00m[90m[39;49;00m
        [94mif[39;49;00m [96mself[39;49;00m._new_lines:[90m[39;49;00m
            [94mif[39;49;00m [95mnot[39;49;00m [96mself[39;49;00m._first_write:[90m[39;49;00m
                [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._new_lines)[90m[39;49;00m
                [96mself[39;49;00m.code_lineno += [96mself[39;49;00m._new_lines[90m[39;49;00m
                [94mif[39;49;00m [96mself[39;49;00m._write_debug_info [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                    [96mself[39;49;00m.debug_info.append(([96mself[39;49;00m._write_debug_info, [96mself[39;49;00m.code_lineno))[90m[39;49;00m
                    [96mself[39;49;00m._write_debug_info = [94mNone[39;49;00m[90m[39;49;00m
            [96mself[39;49;00m._first_write = [94mFalse[39;49;00m[90m[39;49;00m
>           [96mself[39;49;00m.stream.write([33m"[39;49;00m[33m    [39;49;00m[33m"[39;49;00m * [96mself[39;49;00m._indentation)[90m[39;49;00m
            ^^^^^^^^^^^^^^^^^[90m[39;49;00m
[1m[31mE           AttributeError: 'bool' object has no attribute 'write'[0m

[1m[31m.venv/lib/python3.13/site-packages/jinja2/compiler.py[0m:463: AttributeError
[33m========================================================================== warnings summary ===========================================================================[0m
tests/test_environment_additional.py::test_get_template_async_with_cache_hit_and_async_is_up_to_date
  /Users/les/Projects/jinja2-async-environment/tests/test_environment_additional.py:297: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited
    result = await async_env._get_template_async("template.html", None)
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/test_environment_coverage.py::test_get_template_async_with_cache
  /Users/les/Projects/jinja2-async-environment/tests/test_environment_coverage.py:240: RuntimeWarning: coroutine 'AsyncMockMixin._execute_mock_call' was never awaited
    result = await async_env._get_template_async("template.html", None)
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================================================================== tests coverage ============================================================================
__________________________________________________________ coverage: platform darwin, python 3.13.5-final-0 ___________________________________________________________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          56      0   100%
jinja2_async_environment/compiler.py        393    184    53%
jinja2_async_environment/environment.py     134      9    93%
jinja2_async_environment/loaders.py         320     93    71%
-------------------------------------------------------------
TOTAL                                       903    286    68%
[32mRequired test coverage of 42% reached. Total coverage: 68.33%
[0m[36m[1m======================================================================= short test summary info =======================================================================[0m
[31mFAILED[0m tests/test_async_environment.py::[1mTestAsyncTemplateLoading::test_get_template_with_cache_hit[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_async_environment.py::[1mTestAsyncTemplateLoading::test_get_template_with_cache_hit_and_globals[0m - TypeError: object MagicMock can't be used in 'await' expression
[31mFAILED[0m tests/test_async_environment.py::[1mTestAsyncTemplateLoading::test_get_template_with_cache_miss[0m - KeyError: (<weakref at 0x106c88450; to 'unittest.mock.MagicMock' at 0x106be5fd0>, 'template.html')
[31mFAILED[0m tests/test_bccache.py::[1mTestAsyncBytecodeCache::test_not_implemented_methods[0m - AttributeError: Mock object has no attribute 'get_bucket_name'. Did you mean: 'get_bucket_async'?
[31mFAILED[0m tests/test_choice_loader.py::[1mTestAsyncChoiceLoader::test_load_async[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_compiler.py::[1mTestAsyncFrame::test_copy[0m - AttributeError: 'AsyncFrame' object has no attribute 'block_counters'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_block[0m - AttributeError: Mock object has no attribute 'toplevel'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_extends[0m - jinja2.compiler.CompilerExit
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_include[0m - AttributeError: Mock object has no attribute 'lineno'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_return_buffer_contents[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncfor[0m - AttributeError: Mock object has no attribute 'recursive'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asynccall[0m - AttributeError: Mock object has no attribute 'eval_ctx'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncfilterblock[0m - TypeError: 'NoneType' object is not callable
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncwith[0m - AttributeError: Mock object has no attribute 'values'
[31mFAILED[0m tests/test_compiler_additional.py::[1mtest_visit_asyncblock[0m - AttributeError: Mock object has no attribute 'toplevel'
[31mFAILED[0m tests/test_compiler_coverage.py::[1mtest_visit_asyncfor[0m - AttributeError: module 'jinja2.nodes' has no attribute 'AsyncFor'
[31mFAILED[0m tests/test_compiler_coverage.py::[1mtest_visit_asynccall[0m - TypeError: CodeGenerator.visit_Call() missing 1 required positional argument: 'frame'
[31mFAILED[0m tests/test_compiler_coverage.py::[1mtest_visit_asyncfilterblock[0m - TypeError: CodeGenerator.visit_FilterBlock() missing 1 required positional argument: 'frame'
[31mFAILED[0m tests/test_compiler_coverage.py::[1mtest_visit_asyncwith[0m - AttributeError: module 'jinja2.nodes' has no attribute 'AsyncWith'
[31mFAILED[0m tests/test_compiler_coverage.py::[1mtest_func_code_generator[0m - TypeError: CodeGenerator.func() takes 2 positional arguments but 6 were given
[31mFAILED[0m tests/test_compiler_coverage.py::[1mtest_return_buffer_contents[0m - TypeError: AsyncCodeGenerator.return_buffer_contents() missing 1 required positional argument: 'frame'
[31mFAILED[0m tests/test_compiler_coverage.py::[1mtest_visit_asyncblock[0m - TypeError: AsyncCodeGenerator.visit_Block() missing 1 required positional argument: 'frame'
[31mFAILED[0m tests/test_dict_loader.py::[1mTestAsyncDictLoader::test_load_async[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_e2e.py::[1mTestEndToEnd::test_render_from_dict_loader[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_e2e.py::[1mTestEndToEnd::test_render_from_function_loader[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_e2e.py::[1mTestEndToEnd::test_template_inheritance[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_e2e.py::[1mTestEndToEnd::test_template_include[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_e2e.py::[1mTestEndToEnd::test_async_content_generation[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_e2e.py::[1mTestEndToEnd::test_select_template[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_e2e.py::[1mTestEndToEnd::test_get_or_select_template[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_environment.py::[1mTestAsyncEnvironment::test_get_template_with_cache_hit[0m - AssertionError: assert <AsyncMock name='mock.load_async()' id='4408820800'> is <MagicMock spec='Template' id='4408828192'>
[31mFAILED[0m tests/test_environment.py::[1mTestAsyncEnvironment::test_get_template_with_cache_hit_and_globals[0m - AssertionError: assert <AsyncMock name='mock.load_async()' id='4408822816'> is <MagicMock spec='Template' id='4408821136'>
[31mFAILED[0m tests/test_environment.py::[1mTestAsyncEnvironment::test_get_template_with_cache_miss[0m - KeyError: (<MagicMock id='4413571488'>, 'template.html')
[31mFAILED[0m tests/test_environment_coverage.py::[1mtest_compile[0m -   File "test.py", line 3
[31mFAILED[0m tests/test_environment_coverage.py::[1mtest_async_yield_from[0m - TypeError: object async_generator can't be used in 'await' expression
[31mFAILED[0m tests/test_function_loader.py::[1mTestAsyncFunctionLoader::test_load_async[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_loader_adapter.py::[1mTestLoaderAdapter::test_filesystem_loader_adapter[0m - TypeError: TestLoaderAdapter.test_filesystem_loader_adapter.<locals>.mock_get_source() takes 1 positional argument but 2 were given
[31mFAILED[0m tests/test_loaders_coverage.py::[1mtest_async_package_loader_error_handling[0m - ModuleNotFoundError: No module named 'non_existent_package'
[31mFAILED[0m tests/test_loaders_coverage.py::[1mtest_async_filesystem_loader_with_encoding[0m - jinja2.exceptions.TemplateNotFound: template.html
[31mFAILED[0m tests/test_loaders_coverage.py::[1mtest_async_package_loader_with_encoding[0m - AttributeError: <module 'importlib.util' (frozen)> does not have the attribute 'spec_from_package_path'
[31mFAILED[0m tests/test_template_rendering.py::[1mTestTemplateRendering::test_render_simple_template[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_template_rendering.py::[1mTestTemplateRendering::test_render_template_with_inheritance[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_template_rendering.py::[1mTestTemplateRendering::test_render_template_with_include[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_template_rendering.py::[1mTestTemplateRendering::test_render_async_block[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_template_rendering.py::[1mTestTemplateRendering::test_render_async_include[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_template_rendering.py::[1mTestTemplateRendering::test_render_async_extends[0m - AttributeError: 'bool' object has no attribute 'write'
[31mFAILED[0m tests/test_template_rendering.py::[1mTestTemplateRendering::test_performance_with_large_template[0m - AttributeError: 'bool' object has no attribute 'write'
[31m============================================================= [31m[1m47 failed[0m, [32m166 passed[0m, [33m2 warnings[0m[31m in 10.64s[0m[31m =============================================================[0m
