"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .user_data import UserData, UserDataTypedDict
from latitudesh_python_sdk.types import BaseModel
from latitudesh_python_sdk.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetUsersDataRequestTypedDict(TypedDict):
    extra_fields_user_data: NotRequired[str]
    r"""The `decoded_content` is provided as an extra attribute that shows content in decoded form."""


class GetUsersDataRequest(BaseModel):
    extra_fields_user_data: Annotated[
        Optional[str],
        pydantic.Field(alias="extra_fields[user_data]"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = "decoded_content"
    r"""The `decoded_content` is provided as an extra attribute that shows content in decoded form."""


class GetUsersDataResponseBodyTypedDict(TypedDict):
    r"""Success"""

    data: NotRequired[List[UserDataTypedDict]]


class GetUsersDataResponseBody(BaseModel):
    r"""Success"""

    data: Optional[List[UserData]] = None
