[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "django-metachoices"
version = "0.1.3"
description = "A Django field extension that allows choices to have rich metadata beyond the standard (value, display) tuple"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Luqmaan", email = "luqmaansu@gmail.com"},
]
maintainers = [
    {name = "Luqmaan", email = "luqmaansu@gmail.com"},
]
keywords = ["django", "choices", "metadata", "fields"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",

    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.13"
dependencies = [
    "Django>=5.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0",
    "pytest-django>=4.5.0",
    "pytest-cov>=4.0",
]

[project.urls]
Homepage = "https://github.com/luqmaansu/django-metachoices"
Documentation = "https://github.com/luqmaansu/django-metachoices#readme"
Repository = "https://github.com/luqmaansu/django-metachoices"
"Bug Tracker" = "https://github.com/luqmaansu/django-metachoices/issues"

[tool.setuptools.packages.find]
include = ["metachoices*"]

[tool.setuptools.package-data]
metachoices = ["py.typed"]

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_test.py", "tests.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--tb=short",
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests", "metachoices"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["metachoices"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "*/test_*",
    "*/conftest.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
target-version = "py313"
line-length = 88
extend-exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "build",
    "dist",
    "migrations",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E203", # whitespace before ':'
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B011"]  # Allow assert False in tests

[tool.ruff.lint.isort]
known-first-party = ["metachoices"]
known-third-party = ["django"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto" 