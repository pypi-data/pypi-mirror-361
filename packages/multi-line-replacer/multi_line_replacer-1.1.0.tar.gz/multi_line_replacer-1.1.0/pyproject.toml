[project]
name = "multi-line-replacer"
version = "1.1.0"
description = "A CLI utility for replacing multi-line strings in files. Supports textual replacements with wildcard matching indentation-awareness."
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "Caleb Evans", email = "caleb@calebevans.me"}
]
maintainers = [
    {name = "Caleb Evans", email = "caleb@calebevans.me"}
]
license = "MIT"
keywords = ["replacements", "cli", "command-line", "utility", "multi-line", "string", "wildcard", "indentation-aware"]
dependencies=[]

[project.urls]
homepage = "https://github.com/caleb531/multi-line-replacer"
documentation = "https://github.com/caleb531/multi-line-replacer#readme"
repository = "https://github.com/caleb531/multi-line-replacer"
changelog = "https://github.com/caleb531/multi-line-replacer/releases"

[project.scripts]
mlr = "mlr.__main__:main"
multi-line-replacer = "mlr.__main__:main"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["mlr"]
# Explicitly exclude other top-level items
exclude = ["dist", "build", "tests"]

[dependency-groups]
dev = [
    "coverage>=7.9.1",
    "mypy>=1.16.1",
    "nose2>=0.15.1",
    "ruff>=0.12.0",
    "tomli>=2.2.1",
]

# Ruff

[tool.ruff]
include = ["**/*.py"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # isort
    "I",
    # perflint
    "PERF",
]

# mypy

[tool.mypy]
disallow_untyped_defs = true
exclude = ['build', 'dist']

# Configuration for coverage.py (https://pypi.python.org/pypi/coverage)

[tool.coverage.run]
# Enable branch coverage
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    "pragma: no cover",
    # Ignore non-runnable code
    "if __name__ == .__main__.:",
    "pass",
]

# Only check coverage for source files
include = ["mlr/*.py"]
