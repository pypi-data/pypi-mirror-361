[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "slack-models"
version = "1.1.0"
description = "Pydantic Models for working with the Slack API"
readme = "README.md"
requires-python = ">=3.12"
license = 'BSD-3-clause'
license-files = ["LICENSE"]
authors = [{ name = "Gavin M. Roy", email = "gavinr@aweber.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: PL/SQL",
  "Programming Language :: SQL",
  "Topic :: Database",
  "Topic :: Software Development :: Libraries",
  "Typing :: Typed"
]
dependencies = [
  "pydantic>=2.11.3,<3"
]

[project.optional-dependencies]
dev = [
  "build>=1.2.2,<2",
  "coverage>=7.6.10,<8",
  "mypy",
  "pre-commit>=4.1.0,<5",
  "pytest",
  "pytest-cov",
  "ruff>=0.9.5,<0.12.0"
]
docs = [
  "black",  # used by mkdocs for signature formatting
  "griffe-pydantic",  # document pydantic models
  "mkdocs>=1.5,<2",
  "mkdocs-material>9.5,<10",
  "mkdocstrings[python]>=0.26,<0.27",
  "mkdocstrings-python-xref>=1.6,<2"
]

[tool.coverage.paths]
source = [
    "src/slack_models",
]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
exclude_also = [
  "typing.TYPE_CHECKING"
]
fail_under = 90
show_missing = true

[tool.coverage.html]
directory = "build/coverage"

[tool.coverage.xml]
output = "build/reports/coverage.xml"

[tool.hatch.build]
artifacts = [
    "/VERSION",
]

[tool.hatch.build.targets.wheel]
src-layout = true

[tool.hatch.env.default]
python = "python3.12"
features = ["testing"]

[tool.hatch.envs.default.scripts]
github-pages = ["mkdocs gh-deploy --force"]
serve-docs = ["mkdocs serve"]

[tool.hatch.version]
path = "VERSION"
pattern = "(?P<version>.*)"

[tool.mkdocs]
config-file = "mkdocs.yml"

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
testpaths = ["tests"]

[tool.ruff]
line-length = 79
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 40
quote-style = "single"
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = [
    "ANN",    # flake9-annotations
    "ASYNC",  # flake8-async
    "B",      # flake8-bugbear
    "BLE",    # flake8-blind-except
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "E", "W", # pycodestyle
    "F",      # pyflakes
    "G",      # flake8-logging-format
    "I",      # isort
    "S",      # flake8-bandit
    "T20",    # flake8-print
    "UP",     # pyupgrade
    "F401",   # unused imports
    "F841",   # unused variables
    "B027",   # empty method in abstract base class
    "B905",   # zip() without explicit strict parameter
]
ignore = [
  "ANN401",   # There is a time and place for typing.Any
  "RSE",      # contradicts Python Style Guide
]
flake8-quotes = { inline-quotes = "single" }
isort.split-on-trailing-comma=false

[tool.yapf]
allow_split_before_dict_value = false
indent_dictionary_value = true
