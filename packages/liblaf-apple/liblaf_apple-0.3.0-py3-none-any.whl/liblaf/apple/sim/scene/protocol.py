from typing import Protocol, Self, runtime_checkable

import jax
from jaxtyping import Float

type X = Float[jax.Array, " N"]
type Y = Float[jax.Array, ""]


@runtime_checkable
class SceneProtocol(Protocol):
    def fun(self, x: X, /) -> Y: ...
    def jac(self, x: X, /) -> X: ...
    def hessp(self, x: X, p: X, /) -> X: ...
    def hess_diag(self, x: X, /) -> X: ...
    def hess_quad(self, x: X, p: X, /) -> Y: ...
    def fun_and_jac(self, x: X, /) -> tuple[Y, X]: ...
    def jac_and_hess_diag(self, x: X, /) -> tuple[X, X]: ...

    def pre_optim_iter(self, x: X, /) -> Self: ...
