[tool.poetry]
name = "coposet"
version = "0.0.1"
description = "Collaborative partial orders"
authors = ["Deniz Aydin <deniz@aydemir.us>"]
readme = "README.md"
homepage = "https://github.com/daydemir/partial"
repository = "https://github.com/daydemir/partial"
documentation = "https://github.com/daydemir/partial/blob/main/README.md"
keywords = ["poset", "partial-order", "mathematics", "codesign", "consensus", "voting"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
packages = [{include = "coposet"}]

[tool.poetry.dependencies]
python = "^3.13"
typing-extensions = "^4.8.0"
posets = "^1.0.1"

[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
black = "^24.1.1"
ruff = "^0.1.14"
pre-commit = "^3.6.0"
jupyter = "^1.0.0"
notebook = "^7.0.0"
ipykernel = "^6.29.0"
ipython = "^8.18.0"
matplotlib = "^3.8.0"
networkx = "^3.2.0"
numpy = "^1.26.0"
pandas = "^2.1.0"
graphviz = "^0.20.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict_concatenate = true
strict = true
# Ignore missing stubs for external libraries
[[tool.mypy.overrides]]
module = "posets"
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = ["E501"]  # Ignore line length
fixable = ["ALL"]
unfixable = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["coposet"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]
