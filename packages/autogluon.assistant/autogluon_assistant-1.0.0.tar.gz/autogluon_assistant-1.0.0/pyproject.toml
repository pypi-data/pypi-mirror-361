[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autogluon.assistant"
version = "1.0.0"
description = "Multi Agent System for Multimodal ML Automation"
readme = "README.md"
requires-python = ">=3.8,<3.12"
authors = [
  { name = "AutoGluon Community" }
]
dependencies = [
  "langgraph",
  "accelerate<1.0",
  "autogluon==1.2.0",
  "autogluon.tabular[skex]==1.2.0",
  "chardet>=5.2.0",
  "FlagEmbedding>=1.3.5",
  "faiss-cpu",
  "importlib-resources>=6.4.5",
  "langchain>=0.3.3",
  "langchain_openai>=0.2.2",
  "langchain-anthropic>=0.3.15",
  "langchain_aws>=0.2.2",
  "pydantic>=2.9.2",
  "hydra-core>=1.3",
  "matplotlib>=3.9.2",
  "typer>=0.12.5",
  "rich>=13.8.1",
  "s3fs",
  "flask>=2.2",
  "fsspec",
  "joblib>=1.4.2",
  "python-calamine",
  "tenacity>=8.2.2",
  "transformers<=4.49.0",
  "pandas>=2.2",
  "streamlit>=1.37",
  "streamlit-aggrid>=1.0.2",
  "streamlit-extras>=0.4",
  "psutil>=5.9.8",
  "peft>=0.15.2",
  "opencv-python",
  "fastmcp>=2.0.0",
  "aiohttp>=3.8.0",
  "requests>=2.28.0",
  "boto3>=1.28.0",
  "mcp>=0.1.0",
]

[project.scripts]
aga          = "autogluon.assistant.cli.app:app"
mlzero       = "autogluon.assistant.cli.app:app"
mlzero-backend = "autogluon.assistant.webui.backend.app:main"
mlzero-frontend = "autogluon.assistant.webui.runner:run_frontend"
mlzero-mcp-server = "autogluon.mcp.server.runner:main"
mlzero-mcp-client = "autogluon.mcp.client.server:main"

[project.optional-dependencies]
dev = [
  "black>=24",
  "GitRepo>=1",
  "pytest>=7",
  "pytest-asyncio>=0.21.0",
  "isort",
  "ruff==0.4",
]

[project.urls]
Homepage = "https://github.com/autogluon/autogluon-assistant"

[tool.setuptools.packages.find]
where = ["src"]
include = ["autogluon.assistant*", "autogluon.mcp*"]
namespaces = true

[tool.setuptools.package-data]
"autogluon.assistant" = [
  "configs/*.yaml",
  "webui/static/*",
  "webui/style.css",
  "tools_registry/**/*",
]

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--strict-markers"
xfail_strict = true

[tool.black]
line-length = 119
target-version = ['py38', 'py39', 'py310', 'py311']

[tool.isort]
known_first_party = "autogluon.assistant"
known_third_party = [
  "autogluon",
  "joblib",
  "langchain",
  "numpy",
  "omegaconf",
  "openai",
  "pandas",
  "psutil",
  "pydantic",
  "pytest",
  "requests",
  "scipy",
  "sklearn",
  "tqdm",
]
line_length = 119
profile = "black"

[tool.codespell]
skip = ".git,*.pdf,*.svg,*.ipynb,*.csv,"

[tool.ruff]
lint.ignore = [
    "E501",  # Line too long
    "E731",  # Do not assign a `lambda` expression, use a `def`
    "E722",  # Do not use bare `except`
]
extend-exclude = ["__init__.py"]

[tool.mypy]
ignore_missing_imports = true
