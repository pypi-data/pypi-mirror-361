# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: eqc_direct/eqc.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14\x65qc_direct/eqc.proto\x12\x03\x65qc\"\x1b\n\tFloatList\x12\x0e\n\x06values\x18\x01 \x03(\x02\"1\n\x0fNestedFloatList\x12\x1e\n\x06values\x18\x01 \x03(\x0b\x32\x0e.eqc.FloatList\"z\n\tRateInput\x12\x0b\n\x03pdf\x18\x01 \x03(\x02\x12\x0b\n\x03\x63h1\x18\x02 \x01(\x02\x12\x0b\n\x03\x63h2\x18\x03 \x01(\x02\x12\x0b\n\x03\x63h3\x18\x04 \x01(\x02\x12\x13\n\x0bnum_samples\x18\x05 \x01(\r\x12\x0f\n\x07lock_id\x18\x06 \x01(\t\x12\x13\n\x0btarget_rate\x18\x07 \x01(\x02\"\xb3\x01\n\nRateOutput\x12\x13\n\x0bphoton_rate\x18\x01 \x03(\x02\x12\x1b\n\x13\x63\x61libration_voltage\x18\x02 \x01(\x02\x12\x18\n\x10\x61\x64\x63_init_voltage\x18\x03 \x01(\x02\x12\x0c\n\x04\x66pc1\x18\x04 \x01(\x02\x12\x0c\n\x04\x66pc2\x18\x05 \x01(\x02\x12\x0c\n\x04\x66pc3\x18\x06 \x01(\x02\x12\x0c\n\x04\x66pc4\x18\x07 \x01(\x02\x12!\n\thistogram\x18\x08 \x03(\x0b\x32\x0e.eqc.FloatList\"\x9e\x02\n\x10MixedIntExpInput\x12\x15\n\rnum_variables\x18\x01 \x01(\r\x12\x0e\n\x06\x64\x65gree\x18\x02 \x01(\r\x12\x14\n\x0cpoly_indices\x18\x03 \x03(\r\x12\x13\n\x0b\x63oef_values\x18\x04 \x03(\x02\x12\x13\n\x0bnum_samples\x18\x05 \x01(\r\x12\x12\n\niterations\x18\x06 \x01(\r\x12\x12\n\nnum_levels\x18\x07 \x03(\r\x12\x1a\n\x12mean_photon_number\x18\x08 \x01(\x02\x12\x14\n\x0cphoton_ratio\x18\t \x01(\r\x12\x0c\n\x04\x62\x65ta\x18\n \x01(\x02\x12\x12\n\nlambda_val\x18\x0b \x01(\x02\x12\x0f\n\x07lock_id\x18\x0c \x01(\t\x12\x16\n\x0einitial_states\x18\r \x03(\x02\"\xb7\x02\n\x11MixedIntExpResult\x12\x10\n\x08\x65rr_code\x18\x01 \x01(\r\x12\x10\n\x08\x65rr_desc\x18\x02 \x01(\t\x12\x1a\n\x12preprocessing_time\x18\x03 \x01(\x02\x12\x0f\n\x07runtime\x18\x04 \x03(\x02\x12\x1b\n\x13postprocessing_time\x18\x05 \x03(\x02\x12\x0e\n\x06\x65nergy\x18\x06 \x03(\x02\x12 \n\x08solution\x18\x07 \x03(\x0b\x32\x0e.eqc.FloatList\x12\x13\n\x0bnum_samples\x18\x08 \x01(\r\x12\x15\n\rnum_variables\x18\t \x01(\r\x12*\n\x0cstate_vector\x18\n \x03(\x0b\x32\x14.eqc.NestedFloatList\x12\x13\n\x0bphoton_rate\x18\x0b \x03(\x02\x12\x15\n\rphoton_target\x18\x0c \x01(\x02\"\xb1\x03\n\x11SumConstExpResult\x12\x10\n\x08\x65rr_code\x18\x01 \x01(\r\x12\x10\n\x08\x65rr_desc\x18\x02 \x01(\t\x12\x1a\n\x12preprocessing_time\x18\x03 \x01(\x02\x12\x0f\n\x07runtime\x18\x04 \x03(\x02\x12\x1b\n\x13postprocessing_time\x18\x05 \x03(\x02\x12\x18\n\x10\x63\x61libration_time\x18\x06 \x01(\x02\x12\x0e\n\x06\x65nergy\x18\x07 \x03(\x02\x12 \n\x08solution\x18\x08 \x03(\x0b\x32\x0e.eqc.FloatList\x12\x13\n\x0bnum_samples\x18\t \x01(\r\x12\x15\n\rnum_variables\x18\n \x01(\r\x12*\n\x0cstate_vector\x18\x0b \x03(\x0b\x32\x14.eqc.NestedFloatList\x12(\n\x10\x65nergy_evolution\x18\x0c \x03(\x0b\x32\x0e.eqc.FloatList\x12\x18\n\x10\x64istilled_energy\x18\r \x03(\x02\x12*\n\x12\x64istilled_solution\x18\x0e \x03(\x0b\x32\x0e.eqc.FloatList\x12\x1a\n\x12solution_precision\x18\x0f \x01(\t\"\x07\n\x05\x45mpty\"\xda\x02\n\x10SumConstExpInput\x12\x15\n\rnum_variables\x18\x01 \x01(\r\x12\x0e\n\x06\x64\x65gree\x18\x02 \x01(\r\x12\x14\n\x0cpoly_indices\x18\x03 \x03(\r\x12\x13\n\x0b\x63oef_values\x18\x04 \x03(\x02\x12\x16\n\x0esum_constraint\x18\x05 \x01(\x02\x12\x1b\n\x13relaxation_schedule\x18\x06 \x01(\r\x12\x16\n\x0esoln_precision\x18\x07 \x01(\t\x12\x13\n\x0bnum_samples\x18\x08 \x01(\r\x12\x0f\n\x07lock_id\x18\t \x01(\t\x12\x1a\n\x12mean_photon_number\x18\n \x01(\x02\x12\x14\n\x0cphoton_ratio\x18\x0b \x01(\r\x12\x0c\n\x04\x62\x65ta\x18\x0c \x01(\x02\x12\x15\n\rexplode_check\x18\r \x01(\x02\x12\x12\n\niterations\x18\x0e \x01(\r\x12\x16\n\x0einitial_states\x18\x0f \x03(\x02\"\x99\x02\n\rSumConstInput\x12\x15\n\rnum_variables\x18\x01 \x01(\r\x12\x0e\n\x06\x64\x65gree\x18\x02 \x01(\r\x12\x14\n\x0cpoly_indices\x18\x03 \x03(\r\x12\x13\n\x0b\x63oef_values\x18\x04 \x03(\x02\x12\x16\n\x0esum_constraint\x18\x05 \x01(\x02\x12\x1b\n\x13relaxation_schedule\x18\x06 \x01(\r\x12\x16\n\x0esoln_precision\x18\x07 \x01(\x02\x12\'\n\x1fquantum_fluctuation_coefficient\x18\x08 \x01(\r\x12\x1a\n\x12mean_photon_number\x18\t \x01(\x02\x12\x13\n\x0bnum_samples\x18\n \x01(\r\x12\x0f\n\x07lock_id\x18\x0b \x01(\t\"\xd8\x02\n\x0eSumConstResult\x12\x10\n\x08\x65rr_code\x18\x01 \x01(\r\x12\x10\n\x08\x65rr_desc\x18\x02 \x01(\t\x12\x1a\n\x12preprocessing_time\x18\x03 \x01(\x02\x12\x0f\n\x07runtime\x18\x04 \x03(\x02\x12\x1b\n\x13postprocessing_time\x18\x05 \x03(\x02\x12\x0e\n\x06\x65nergy\x18\x06 \x03(\x02\x12 \n\x08solution\x18\x07 \x03(\x0b\x32\x0e.eqc.FloatList\x12\x18\n\x10\x64istilled_energy\x18\x08 \x03(\x02\x12*\n\x12\x64istilled_solution\x18\t \x03(\x0b\x32\x0e.eqc.FloatList\x12\x13\n\x0bnum_samples\x18\n \x01(\r\x12\x15\n\rnum_variables\x18\x0b \x01(\r\x12\x1a\n\x12solution_precision\x18\x0c \x01(\t\x12\x18\n\x10\x63\x61libration_time\x18\r \x01(\x02\"\x90\x02\n\x08IntInput\x12\x15\n\rnum_variables\x18\x01 \x01(\r\x12\x0e\n\x06\x64\x65gree\x18\x02 \x01(\r\x12\x14\n\x0cpoly_indices\x18\x03 \x03(\r\x12\x13\n\x0b\x63oef_values\x18\x04 \x03(\x02\x12\x12\n\nnum_levels\x18\x05 \x03(\x02\x12\x1b\n\x13relaxation_schedule\x18\x06 \x01(\r\x12\x1a\n\x12mean_photon_number\x18\x07 \x01(\x02\x12\'\n\x1fquantum_fluctuation_coefficient\x18\x08 \x01(\r\x12\x13\n\x0bnum_samples\x18\t \x01(\r\x12\x0f\n\x07lock_id\x18\n \x01(\t\x12\x16\n\x0einitial_states\x18\x0b \x03(\x02\"\xf1\x01\n\tIntResult\x12\x10\n\x08\x65rr_code\x18\x01 \x01(\r\x12\x10\n\x08\x65rr_desc\x18\x02 \x01(\t\x12\x1a\n\x12preprocessing_time\x18\x03 \x01(\x02\x12\x0f\n\x07runtime\x18\x04 \x03(\x02\x12\x1b\n\x13postprocessing_time\x18\x05 \x03(\x02\x12\x0e\n\x06\x65nergy\x18\x06 \x03(\x02\x12 \n\x08solution\x18\x07 \x03(\x0b\x32\x0e.eqc.FloatList\x12\x13\n\x0bnum_samples\x18\x08 \x01(\r\x12\x15\n\rnum_variables\x18\t \x01(\r\x12\x18\n\x10\x63\x61libration_time\x18\n \x01(\x02\"2\n\x0cSubmitOutput\x12\x10\n\x08\x65rr_code\x18\x01 \x01(\r\x12\x10\n\x08\x65rr_desc\x18\x02 \x01(\t\"\x1e\n\x0bLockMessage\x12\x0f\n\x07lock_id\x18\x01 \x01(\t\"8\n\x0cStatusOutput\x12\x13\n\x0bstatus_code\x18\x01 \x01(\x05\x12\x13\n\x0bstatus_desc\x18\x02 \x01(\t\"E\n\nLockOutput\x12\x0f\n\x07lock_id\x18\x01 \x01(\t\x12&\n\x0block_status\x18\x02 \x01(\x0b\x32\x11.eqc.StatusOutput\"e\n\rVersionOutput\x12\x16\n\x0eserver_version\x18\x01 \x01(\t\x12\x14\n\x0c\x66pga_version\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65vice_type\x18\x03 \x01(\t\x12\x11\n\tdevice_id\x18\x04 \x01(\t2\xbc\x06\n\nEqcService\x12\x36\n\rSolveSumConst\x12\x12.eqc.SumConstInput\x1a\x11.eqc.SubmitOutput\x12,\n\x08SolveInt\x12\r.eqc.IntInput\x1a\x11.eqc.SubmitOutput\x12\x33\n\x0f\x46\x65tchIntResults\x12\x10.eqc.LockMessage\x1a\x0e.eqc.IntResult\x12=\n\x14\x46\x65tchSumConstResults\x12\x10.eqc.LockMessage\x1a\x13.eqc.SumConstResult\x12-\n\x0cSystemStatus\x12\n.eqc.Empty\x1a\x11.eqc.StatusOutput\x12\x32\n\x0bStopRunning\x12\x10.eqc.LockMessage\x1a\x11.eqc.StatusOutput\x12*\n\x0b\x41\x63quireLock\x12\n.eqc.Empty\x1a\x0f.eqc.LockOutput\x12\x32\n\x0bReleaseLock\x12\x10.eqc.LockMessage\x1a\x11.eqc.StatusOutput\x12\x30\n\tCheckLock\x12\x10.eqc.LockMessage\x1a\x11.eqc.StatusOutput\x12,\n\nSystemInfo\x12\n.eqc.Empty\x1a\x12.eqc.VersionOutput\x12\x37\n\x0bMixedIntExp\x12\x15.eqc.MixedIntExpInput\x1a\x11.eqc.SubmitOutput\x12\x43\n\x17\x46\x65tchMixedIntExpResults\x12\x10.eqc.LockMessage\x1a\x16.eqc.MixedIntExpResult\x12<\n\x10SolveSumConstExp\x12\x15.eqc.SumConstExpInput\x1a\x11.eqc.SubmitOutput\x12\x43\n\x17\x46\x65tchSumConstExpResults\x12\x10.eqc.LockMessage\x1a\x16.eqc.SumConstExpResult\x12\x30\n\rGetPhotonRate\x12\x0e.eqc.RateInput\x1a\x0f.eqc.RateOutputb\x06proto3')



_FLOATLIST = DESCRIPTOR.message_types_by_name['FloatList']
_NESTEDFLOATLIST = DESCRIPTOR.message_types_by_name['NestedFloatList']
_RATEINPUT = DESCRIPTOR.message_types_by_name['RateInput']
_RATEOUTPUT = DESCRIPTOR.message_types_by_name['RateOutput']
_MIXEDINTEXPINPUT = DESCRIPTOR.message_types_by_name['MixedIntExpInput']
_MIXEDINTEXPRESULT = DESCRIPTOR.message_types_by_name['MixedIntExpResult']
_SUMCONSTEXPRESULT = DESCRIPTOR.message_types_by_name['SumConstExpResult']
_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_SUMCONSTEXPINPUT = DESCRIPTOR.message_types_by_name['SumConstExpInput']
_SUMCONSTINPUT = DESCRIPTOR.message_types_by_name['SumConstInput']
_SUMCONSTRESULT = DESCRIPTOR.message_types_by_name['SumConstResult']
_INTINPUT = DESCRIPTOR.message_types_by_name['IntInput']
_INTRESULT = DESCRIPTOR.message_types_by_name['IntResult']
_SUBMITOUTPUT = DESCRIPTOR.message_types_by_name['SubmitOutput']
_LOCKMESSAGE = DESCRIPTOR.message_types_by_name['LockMessage']
_STATUSOUTPUT = DESCRIPTOR.message_types_by_name['StatusOutput']
_LOCKOUTPUT = DESCRIPTOR.message_types_by_name['LockOutput']
_VERSIONOUTPUT = DESCRIPTOR.message_types_by_name['VersionOutput']
FloatList = _reflection.GeneratedProtocolMessageType('FloatList', (_message.Message,), {
  'DESCRIPTOR' : _FLOATLIST,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.FloatList)
  })
_sym_db.RegisterMessage(FloatList)

NestedFloatList = _reflection.GeneratedProtocolMessageType('NestedFloatList', (_message.Message,), {
  'DESCRIPTOR' : _NESTEDFLOATLIST,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.NestedFloatList)
  })
_sym_db.RegisterMessage(NestedFloatList)

RateInput = _reflection.GeneratedProtocolMessageType('RateInput', (_message.Message,), {
  'DESCRIPTOR' : _RATEINPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.RateInput)
  })
_sym_db.RegisterMessage(RateInput)

RateOutput = _reflection.GeneratedProtocolMessageType('RateOutput', (_message.Message,), {
  'DESCRIPTOR' : _RATEOUTPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.RateOutput)
  })
_sym_db.RegisterMessage(RateOutput)

MixedIntExpInput = _reflection.GeneratedProtocolMessageType('MixedIntExpInput', (_message.Message,), {
  'DESCRIPTOR' : _MIXEDINTEXPINPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.MixedIntExpInput)
  })
_sym_db.RegisterMessage(MixedIntExpInput)

MixedIntExpResult = _reflection.GeneratedProtocolMessageType('MixedIntExpResult', (_message.Message,), {
  'DESCRIPTOR' : _MIXEDINTEXPRESULT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.MixedIntExpResult)
  })
_sym_db.RegisterMessage(MixedIntExpResult)

SumConstExpResult = _reflection.GeneratedProtocolMessageType('SumConstExpResult', (_message.Message,), {
  'DESCRIPTOR' : _SUMCONSTEXPRESULT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.SumConstExpResult)
  })
_sym_db.RegisterMessage(SumConstExpResult)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.Empty)
  })
_sym_db.RegisterMessage(Empty)

SumConstExpInput = _reflection.GeneratedProtocolMessageType('SumConstExpInput', (_message.Message,), {
  'DESCRIPTOR' : _SUMCONSTEXPINPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.SumConstExpInput)
  })
_sym_db.RegisterMessage(SumConstExpInput)

SumConstInput = _reflection.GeneratedProtocolMessageType('SumConstInput', (_message.Message,), {
  'DESCRIPTOR' : _SUMCONSTINPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.SumConstInput)
  })
_sym_db.RegisterMessage(SumConstInput)

SumConstResult = _reflection.GeneratedProtocolMessageType('SumConstResult', (_message.Message,), {
  'DESCRIPTOR' : _SUMCONSTRESULT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.SumConstResult)
  })
_sym_db.RegisterMessage(SumConstResult)

IntInput = _reflection.GeneratedProtocolMessageType('IntInput', (_message.Message,), {
  'DESCRIPTOR' : _INTINPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.IntInput)
  })
_sym_db.RegisterMessage(IntInput)

IntResult = _reflection.GeneratedProtocolMessageType('IntResult', (_message.Message,), {
  'DESCRIPTOR' : _INTRESULT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.IntResult)
  })
_sym_db.RegisterMessage(IntResult)

SubmitOutput = _reflection.GeneratedProtocolMessageType('SubmitOutput', (_message.Message,), {
  'DESCRIPTOR' : _SUBMITOUTPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.SubmitOutput)
  })
_sym_db.RegisterMessage(SubmitOutput)

LockMessage = _reflection.GeneratedProtocolMessageType('LockMessage', (_message.Message,), {
  'DESCRIPTOR' : _LOCKMESSAGE,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.LockMessage)
  })
_sym_db.RegisterMessage(LockMessage)

StatusOutput = _reflection.GeneratedProtocolMessageType('StatusOutput', (_message.Message,), {
  'DESCRIPTOR' : _STATUSOUTPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.StatusOutput)
  })
_sym_db.RegisterMessage(StatusOutput)

LockOutput = _reflection.GeneratedProtocolMessageType('LockOutput', (_message.Message,), {
  'DESCRIPTOR' : _LOCKOUTPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.LockOutput)
  })
_sym_db.RegisterMessage(LockOutput)

VersionOutput = _reflection.GeneratedProtocolMessageType('VersionOutput', (_message.Message,), {
  'DESCRIPTOR' : _VERSIONOUTPUT,
  '__module__' : 'eqc_direct.eqc_pb2'
  # @@protoc_insertion_point(class_scope:eqc.VersionOutput)
  })
_sym_db.RegisterMessage(VersionOutput)

_EQCSERVICE = DESCRIPTOR.services_by_name['EqcService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _FLOATLIST._serialized_start=29
  _FLOATLIST._serialized_end=56
  _NESTEDFLOATLIST._serialized_start=58
  _NESTEDFLOATLIST._serialized_end=107
  _RATEINPUT._serialized_start=109
  _RATEINPUT._serialized_end=231
  _RATEOUTPUT._serialized_start=234
  _RATEOUTPUT._serialized_end=413
  _MIXEDINTEXPINPUT._serialized_start=416
  _MIXEDINTEXPINPUT._serialized_end=702
  _MIXEDINTEXPRESULT._serialized_start=705
  _MIXEDINTEXPRESULT._serialized_end=1016
  _SUMCONSTEXPRESULT._serialized_start=1019
  _SUMCONSTEXPRESULT._serialized_end=1452
  _EMPTY._serialized_start=1454
  _EMPTY._serialized_end=1461
  _SUMCONSTEXPINPUT._serialized_start=1464
  _SUMCONSTEXPINPUT._serialized_end=1810
  _SUMCONSTINPUT._serialized_start=1813
  _SUMCONSTINPUT._serialized_end=2094
  _SUMCONSTRESULT._serialized_start=2097
  _SUMCONSTRESULT._serialized_end=2441
  _INTINPUT._serialized_start=2444
  _INTINPUT._serialized_end=2716
  _INTRESULT._serialized_start=2719
  _INTRESULT._serialized_end=2960
  _SUBMITOUTPUT._serialized_start=2962
  _SUBMITOUTPUT._serialized_end=3012
  _LOCKMESSAGE._serialized_start=3014
  _LOCKMESSAGE._serialized_end=3044
  _STATUSOUTPUT._serialized_start=3046
  _STATUSOUTPUT._serialized_end=3102
  _LOCKOUTPUT._serialized_start=3104
  _LOCKOUTPUT._serialized_end=3173
  _VERSIONOUTPUT._serialized_start=3175
  _VERSIONOUTPUT._serialized_end=3276
  _EQCSERVICE._serialized_start=3279
  _EQCSERVICE._serialized_end=4107
# @@protoc_insertion_point(module_scope)
