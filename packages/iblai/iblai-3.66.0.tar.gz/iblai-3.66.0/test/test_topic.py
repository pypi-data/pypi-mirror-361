# coding: utf-8

"""
    ibl-data-manager

    API for iblai

    The version of the OpenAPI document: 3.6.0-ai-plus
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iblai.models.topic import Topic

class TestTopic(unittest.TestCase):
    """Topic unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Topic:
        """Test Topic
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Topic`
        """
        model = Topic()
        if include_optional:
            return Topic(
                total_topics = 56,
                number_of_messages = 56,
                topic_detail = [
                    iblai.models.topic_detail.TopicDetail(
                        id = 56, 
                        total_topics = 56, 
                        number_of_messages = 56, 
                        number_of_conversations = 56, 
                        user_sentiment = '', 
                        user_ratings = '', 
                        name = '', 
                        metadata = null, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        platform = 56, )
                    ],
                monthly_total_topics_diff = 56
            )
        else:
            return Topic(
                total_topics = 56,
                number_of_messages = 56,
                topic_detail = [
                    iblai.models.topic_detail.TopicDetail(
                        id = 56, 
                        total_topics = 56, 
                        number_of_messages = 56, 
                        number_of_conversations = 56, 
                        user_sentiment = '', 
                        user_ratings = '', 
                        name = '', 
                        metadata = null, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        platform = 56, )
                    ],
                monthly_total_topics_diff = 56,
        )
        """

    def testTopic(self):
        """Test Topic"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
