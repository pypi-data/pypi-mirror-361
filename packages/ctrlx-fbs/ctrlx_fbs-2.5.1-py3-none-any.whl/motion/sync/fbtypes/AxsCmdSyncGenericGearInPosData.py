# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# parameters of the axis generic GearInPos command
class AxsCmdSyncGenericGearInPosData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AxsCmdSyncGenericGearInPosData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAxsCmdSyncGenericGearInPosData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AxsCmdSyncGenericGearInPosData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # name of the master axis
    # AxsCmdSyncGenericGearInPosData
    def Master(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # name of the pipeline
    # AxsCmdSyncGenericGearInPosData
    def Pipeline(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Sync source
    # AxsCmdSyncGenericGearInPosData
    def SyncSource(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Sync mode
    # AxsCmdSyncGenericGearInPosData
    def SyncMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 2

    # Dynamic Sync direction
    # AxsCmdSyncGenericGearInPosData
    def DynSyncDirection(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # should this be a buffered command?
    # AxsCmdSyncGenericGearInPosData
    def Buffered(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def AxsCmdSyncGenericGearInPosDataStart(builder): builder.StartObject(6)
def Start(builder):
    return AxsCmdSyncGenericGearInPosDataStart(builder)
def AxsCmdSyncGenericGearInPosDataAddMaster(builder, master): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(master), 0)
def AddMaster(builder, master):
    return AxsCmdSyncGenericGearInPosDataAddMaster(builder, master)
def AxsCmdSyncGenericGearInPosDataAddPipeline(builder, pipeline): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(pipeline), 0)
def AddPipeline(builder, pipeline):
    return AxsCmdSyncGenericGearInPosDataAddPipeline(builder, pipeline)
def AxsCmdSyncGenericGearInPosDataAddSyncSource(builder, syncSource): builder.PrependInt8Slot(2, syncSource, 0)
def AddSyncSource(builder, syncSource):
    return AxsCmdSyncGenericGearInPosDataAddSyncSource(builder, syncSource)
def AxsCmdSyncGenericGearInPosDataAddSyncMode(builder, syncMode): builder.PrependInt8Slot(3, syncMode, 2)
def AddSyncMode(builder, syncMode):
    return AxsCmdSyncGenericGearInPosDataAddSyncMode(builder, syncMode)
def AxsCmdSyncGenericGearInPosDataAddDynSyncDirection(builder, dynSyncDirection): builder.PrependInt8Slot(4, dynSyncDirection, 0)
def AddDynSyncDirection(builder, dynSyncDirection):
    return AxsCmdSyncGenericGearInPosDataAddDynSyncDirection(builder, dynSyncDirection)
def AxsCmdSyncGenericGearInPosDataAddBuffered(builder, buffered): builder.PrependBoolSlot(5, buffered, 0)
def AddBuffered(builder, buffered):
    return AxsCmdSyncGenericGearInPosDataAddBuffered(builder, buffered)
def AxsCmdSyncGenericGearInPosDataEnd(builder): return builder.EndObject()
def End(builder):
    return AxsCmdSyncGenericGearInPosDataEnd(builder)

class AxsCmdSyncGenericGearInPosDataT(object):

    # AxsCmdSyncGenericGearInPosDataT
    def __init__(self):
        self.master = None  # type: str
        self.pipeline = None  # type: str
        self.syncSource = 0  # type: int
        self.syncMode = 2  # type: int
        self.dynSyncDirection = 0  # type: int
        self.buffered = False  # type: bool

    @classmethod
    def InitFromBuf(cls, buf, pos):
        axsCmdSyncGenericGearInPosData = AxsCmdSyncGenericGearInPosData()
        axsCmdSyncGenericGearInPosData.Init(buf, pos)
        return cls.InitFromObj(axsCmdSyncGenericGearInPosData)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, axsCmdSyncGenericGearInPosData):
        x = AxsCmdSyncGenericGearInPosDataT()
        x._UnPack(axsCmdSyncGenericGearInPosData)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.master == other.master and \
            self.pipeline == other.pipeline and \
            self.syncSource == other.syncSource and \
            self.syncMode == other.syncMode and \
            self.dynSyncDirection == other.dynSyncDirection and \
            self.buffered == other.buffered

    # AxsCmdSyncGenericGearInPosDataT
    def _UnPack(self, axsCmdSyncGenericGearInPosData):
        if axsCmdSyncGenericGearInPosData is None:
            return
        self.master = axsCmdSyncGenericGearInPosData.Master()
        self.pipeline = axsCmdSyncGenericGearInPosData.Pipeline()
        self.syncSource = axsCmdSyncGenericGearInPosData.SyncSource()
        self.syncMode = axsCmdSyncGenericGearInPosData.SyncMode()
        self.dynSyncDirection = axsCmdSyncGenericGearInPosData.DynSyncDirection()
        self.buffered = axsCmdSyncGenericGearInPosData.Buffered()

    # AxsCmdSyncGenericGearInPosDataT
    def Pack(self, builder):
        if self.master is not None:
            master = builder.CreateString(self.master)
        if self.pipeline is not None:
            pipeline = builder.CreateString(self.pipeline)
        AxsCmdSyncGenericGearInPosDataStart(builder)
        if self.master is not None:
            AxsCmdSyncGenericGearInPosDataAddMaster(builder, master)
        if self.pipeline is not None:
            AxsCmdSyncGenericGearInPosDataAddPipeline(builder, pipeline)
        AxsCmdSyncGenericGearInPosDataAddSyncSource(builder, self.syncSource)
        AxsCmdSyncGenericGearInPosDataAddSyncMode(builder, self.syncMode)
        AxsCmdSyncGenericGearInPosDataAddDynSyncDirection(builder, self.dynSyncDirection)
        AxsCmdSyncGenericGearInPosDataAddBuffered(builder, self.buffered)
        axsCmdSyncGenericGearInPosData = AxsCmdSyncGenericGearInPosDataEnd(builder)
        return axsCmdSyncGenericGearInPosData
