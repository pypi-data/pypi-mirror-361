{
    "processor": [
        {
            "name": "trim()",
            "des": "去除首尾空格"
        },
        {
            "name": "replace(old: str, new: str)",
            "des": "替换"
        },
        {
            "name": "re_prefix(prefix: str)",
            "des": "移除前缀"
        },
        {
            "name": "re_suffix(suffix: str)",
            "des": "移除后缀"
        },
        {
            "name": "split(sep: str)",
            "des": "分割"
        },
        {
            "name": "to_upper()",
            "des": "将值转换为大写"
        },
        {
            "name": "to_lower()",
            "des": "将值转换为小写"
        },
        {
            "name": "to_title()",
            "des": "将值转换为标题大小写"
        },
        {
            "name": "to_capitalize()",
            "des": "将值转换为首字母大写"
        },
        {
            "name": "to_string()",
            "des": "将值转换为字符串"
        },
        {
            "name": "to_int()",
            "des": "将值转换为整数"
        },
        {
            "name": "to_float()",
            "des": "将值转换为浮点数"
        },
        {
            "name": "to_bool()",
            "des": "将值转换为布尔值"
        },
        {
            "name": "to_list()",
            "des": "将值转换为列表"
        },
        {
            "name": "to_tuple()",
            "des": "将值转换为元组"
        },
        {
            "name": "to_set()",
            "des": "将值转换为集合"
        },
        {
            "name": "to_dict()",
            "des": "将值转换为字典"
        },
        {
            "name": "to_json()",
            "des": "将值转换为JSON"
        },
        {
            "name": "path_absolute()",
            "des": "获取绝对路径"
        },
        {
            "name": "to_path()",
            "des": "将值转换为路径"
        },
        {
            "name": "to_datetime()",
            "des": "将值转换为日期时间"
        }
    ],
    "validator": [
        {
            "name": "is_subclass(parent_class: Type)",
            "des": "验证是否为指定父类的子类"
        },
        {
            "name": "not_null()",
            "des": "验证值不为None"
        },
        {
            "name": "not_empty()",
            "des": "验证值不为空"
        },
        {
            "name": "in_list(valid_list: List[Any])",
            "des": "验证值在指定列表中"
        },
        {
            "name": "max_length(length: int)",
            "des": "验证可迭代对象的长度不超过最大值"
        },
        {
            "name": "min_length(length: int)",
            "des": "验证可迭代对象的长度不小于最小值"
        },
        {
            "name": "max(max_val: Num)",
            "des": "验证值不大于最大值（适用于数值/可比较对象）"
        },
        {
            "name": "min(min_val: Num)",
            "des": "验证值不小于最小值（适用于数值/可比较对象）"
        },
        {
            "name": "eq(expected: Union[int, float, str])",
            "des": "验证值等于预期值"
        },
        {
            "name": "neq(unexpected: Union[int, float, str])",
            "des": "验证值不等于指定值"
        },
        {
            "name": "gt(min_val: Num)",
            "des": "验证值大于指定值（严格大于）"
        },
        {
            "name": "lt(max_val: Num)",
            "des": "验证值小于指定值（严格小于）"
        },
        {
            "name": "ge(min_val: Num)",
            "des": "验证值大于或等于指定值"
        },
        {
            "name": "le(max_val: Num)",
            "des": "验证值小于或等于指定值"
        },
        {
            "name": "regex(pattern: Union[str, Pattern], flags: int = 0, msg: str = '')",
            "des": "验证字符串是否匹配正则表达式"
        },
        {
            "name": "starts_with(prefix: str)",
            "des": "验证字符串以特定前缀开头"
        },
        {
            "name": "ends_with(suffix: str)",
            "des": "验证字符串以特定后缀结尾"
        },
        {
            "name": "contains(substring: str)",
            "des": "验证字符串包含特定子字符串"
        },
        {
            "name": "not_contains(substring: str)",
            "des": "验证字符串不包含特定子字符串"
        },
        {
            "name": "path_exists()",
            "des": "验证路径存在"
        },
        {
            "name": "path_not_exists()",
            "des": "验证路径不存在"
        },
        {
            "name": "path_is_dir()",
            "des": "验证路径是目录"
        },
        {
            "name": "path_is_file()",
            "des": "验证路径是文件"
        },
        {
            "name": "datetime_between(min_datetime: datetime, max_datetime: datetime)",
            "des": "验证日期时间在指定的两个日期之间"
        },
        {
            "name": "datetime_before(max_datetime: datetime)",
            "des": "验证日期时间早于指定最大日期时间"
        },
        {
            "name": "datetime_after(min_datetime: datetime)",
            "des": "验证日期时间晚于指定最小日期时间"
        },
        {
            "name": "datetime_equal(expected_datetime: datetime)",
            "des": "验证日期时间与指定预期日期时间相等"
        }
    ]
}