[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llm_code_lens"
version = "0.6.1"  # Bumped for Tree-sitter performance upgrade
description = "Ultra-fast intelligent code analysis tool for LLM context generation with Tree-sitter"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["code analysis", "llm", "tree-sitter", "static analysis", "sql analysis", "performance"]
authors = [
    { name = "Arsen Apostolov", email = "arsen.apostolov@gmail.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",  # Upgraded from Alpha due to performance improvements
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic"
]
dependencies = [
    # Core CLI and UI
    "click>=8.0.0",
    "rich>=10.0.0",
    
    # Ultra-fast parsing engine (10-100x performance improvement)
    "tree-sitter>=0.20.0",
    "tree-sitter-python>=0.20.0",   # Python grammar
    "tree-sitter-javascript>=0.20.0",  # JavaScript/JSX grammar
    "tree-sitter-typescript>=0.20.0",  # TypeScript/TSX grammar
    
    # Ultra-fast file filtering (10-50x performance improvement)
    "pathspec>=0.11.0",  # Fast gitignore pattern matching
    
    # Token processing and utilities
    "tiktoken>=0.5.0",
    "packaging>=22.0.0",  # For version comparison
    "requests>=2.28.0",   # For PyPI version checking
    "pyperclip>=1.8.0",   # For clipboard operations
    
    # Python project support
    "tomli>=2.0.0; python_version<'3.11'",  # Fast TOML parser for pyproject.toml
    
    # Optional SQL Server connectivity
    "pyodbc>=4.0.39; platform_system!='Darwin'",  # Skip on macOS due to common issues
    
    # Platform-specific dependencies
    "windows-curses; platform_system=='Windows'",  # For TUI on Windows
]

[tool.hatch.build.targets.wheel]
packages = ["src/llm_code_lens", "scripts"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.13.0",
    "radon>=5.0.0",
    "mypy>=1.0.0"
]

# Extra fast installation (excludes SQL Server support)
fast = [
    "click>=8.0.0",
    "rich>=10.0.0",
    "tree-sitter>=0.20.0",
    "tree-sitter-python>=0.20.0",
    "tree-sitter-javascript>=0.20.0", 
    "tree-sitter-typescript>=0.20.0",
    "pathspec>=0.11.0",
    "tiktoken>=0.5.0",
    "packaging>=22.0.0",
    "requests>=2.28.0",
    "pyperclip>=1.8.0",
    "tomli>=2.0.0; python_version<'3.11'",
    "windows-curses; platform_system=='Windows'"
]

# Full installation with SQL support
full = [
    "click>=8.0.0",
    "rich>=10.0.0", 
    "tree-sitter>=0.20.0",
    "tree-sitter-python>=0.20.0",
    "tree-sitter-javascript>=0.20.0",
    "tree-sitter-typescript>=0.20.0", 
    "pathspec>=0.11.0",
    "tiktoken>=0.5.0",
    "packaging>=22.0.0",
    "requests>=2.28.0",
    "pyperclip>=1.8.0",
    "tomli>=2.0.0; python_version<'3.11'",
    "pyodbc>=4.0.39",
    "windows-curses; platform_system=='Windows'"
]

[project.scripts]
llmcl = "llm_code_lens.cli:main"

[project.urls]
"Homepage" = "https://github.com/SikamikanikoBG/codelens.git"
"Bug Tracker" = "https://github.com/SikamikanikoBG/codelens/issues"
"Documentation" = "https://github.com/SikamikanikoBG/codelens/blob/main/README.md"
"Source Code" = "https://github.com/SikamikanikoBG/codelens"

[tool.black]
line-length = 100
target-version = ['py312']  # Updated for Python 3.12 support
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "treesitter: marks tests requiring Tree-sitter",
    "performance: marks performance benchmark tests"
]
addopts = [
    "--verbose",
    "--cov=llm_code_lens",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=85"  # Maintained at same level despite Tree-sitter integration
]

# Tree-sitter specific configuration
[tool.mypy]
python_version = "3.12"  # Updated for Python 3.12 support
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true  # Tree-sitter packages may not have stubs

# Performance profiling settings
[tool.hatch.envs.perf]
dependencies = [
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0", 
    "line-profiler>=4.0.0"
]

[tool.hatch.envs.perf.scripts]
benchmark = "pytest tests/test_performance.py -v --benchmark-only"
profile = "python -m cProfile -o profile.stats -m llm_code_lens.cli"
