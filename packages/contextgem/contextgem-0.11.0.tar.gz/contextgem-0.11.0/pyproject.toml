[project]
name = "contextgem"
version = "0.11.0"
description = "Effortless LLM extraction from documents"
authors = [
    {name = "shcherbak-ai", email = "sergii@shcherbak.ai"}
]
maintainers = [
    {name = "shcherbak-ai", email = "sergii@shcherbak.ai"}
]
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = [
    "aiolimiter (>=1.2.1,<2.0.0)",
    "jinja2 (>=3.1.5,<4.0.0)",
    "litellm (>=1.71.1,<2.0.0)",
    "loguru (>=0.7.3,<0.8.0)",
    "lxml (>=5.4.0,<6.0.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "python-ulid (>=3.0.0,<4.0.0)",
    "wtpsplit-lite (>=0.2.0,<0.3.0)",
]
license = {text = "Apache-2.0"}
keywords = [
    "artificial-intelligence",
    "aspect-extraction",
    "automated-prompting",
    "concept-extraction",
    "content-extraction",
    "context-aware",
    "contextgem",
    "contract-analysis",
    "contract-automation",
    "contract-intelligence",
    "contract-management",
    "contract-parsing",
    "contract-review",
    "data-extraction",
    "document", 
    "document-analysis",
    "document-extraction",
    "document-intelligence",
    "document-parsing",
    "document-pipeline",
    "document-processing",
    "document-qa",
    "document-understanding",
    "docx",
    "entity-extraction",
    "extraction-justifications",
    "extraction-pipeline",
    "fintech",
    "generative-ai",
    "information-extraction",
    "insights-extraction",
    "knowledge-extraction",
    "large-language-models",
    "legaltech",
    "llm", 
    "llm-extraction",
    "llm-framework",
    "llm-library",
    "llm-reasoning",
    "low-code",
    "machine-learning",
    "multilingual",
    "multimodal",
    "neural-segmentation",
    "nlp",
    "no-prompt-engineering",
    "prompt-free",
    "question-answering",
    "reference-mapping",
    "semantic-analysis",
    "structured-data", 
    "structured-data-extraction",
    "text-analysis",
    "text-processing",
    "topic-extraction",
    "unstructured-data",
    "zero-shot",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Legal Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Education",
    "Topic :: Office/Business",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Topic :: Text Processing :: Linguistic",
]

[project.urls]
Homepage = "https://github.com/shcherbak-ai/contextgem"
Documentation = "https://github.com/shcherbak-ai/contextgem/blob/main/README.md"
Repository = "https://github.com/shcherbak-ai/contextgem.git"
"Bug Tracker" = "https://github.com/shcherbak-ai/contextgem/issues"

[tool.poetry]

[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
coverage = "^7.6.12"
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
python-dotenv = "^1.0.1"
pip-tools = "^7.4.1"
pre-commit = "^4.1.0"
isort = "^6.0.1"
sphinx = ">=7.0.0,<8.0.0"
sphinx-autodoc-typehints = "<3.0.0"
sphinx-book-theme = "^1.1.4"
sphinx-copybutton = "^0.5.2"
sphinx-design = "^0.6.1"
sphinxext-opengraph = "^0.9.1"
nbformat = "^5.10.4"
commitizen = "^4.5.1"
sphinx-sitemap = "^2.6.0"
pytest-recording = "^0.13.4"
bandit = "^1.8.3"
pympler = "^1.1"
memory-profiler = "^0.61.0"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
addopts = "-vv -s"
log_cli = true
log_cli_level = "WARNING"

[tool.commitizen]
name = "cz_conventional_commits"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
