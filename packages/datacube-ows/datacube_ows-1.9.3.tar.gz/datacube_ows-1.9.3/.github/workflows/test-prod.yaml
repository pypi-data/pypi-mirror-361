---
name: Prod dockercompose test

on:
  pull_request:
    branches:
      - 'develop'
      - 'develop-1.9'
    paths:
      - '**'
      - '!docs/**'
      - '!*.rst'
      - '!*.md'
      - '!datacube_ows/__init__.py'
      - '!.github/**'
      - '.github/workflows/test-prod.yaml'

  push:
    branches:
      - 'develop'
      - 'develop-1.9'
    paths:
      - '**'
      - '!docs/**'
      - '!*.rst'
      - '!*.md'
      - '!datacube_ows/__init__.py'
      - '!.github/**'
      - '.github/workflows/test-prod.yaml'

env:
  ORG: opendatacube
  IMAGE: ows

# When a PR is updated, cancel the jobs from the previous version. Merges
# do not define head_ref, so use run_id to never cancel those jobs.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  prod-docker-compose-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Build and run prod OWS image
        run: |
          export LOCAL_UID=$(id -u $USER)
          export LOCAL_GID=$(id -g $USER)
          export $(grep -v '^#' .env_simple | xargs)
          docker compose -f docker-compose.yaml -f docker-compose.db.yaml -f docker-compose.prod.yaml up --quiet-pull --build -d --wait
          docker compose -f docker-compose.yaml -f docker-compose.db.yaml exec -T ows /bin/sh -c "cd /src && ./check-code-all.sh --no-test"

      # Run some tests on the images
      # These tests require a working database
      - name: Test ping
        run: |
          curl --show-error --fail \
          --connect-timeout 5 \
          --max-time 10 \
          --retry 5 \
          --retry-delay 0 \
          --retry-max-time 40 \
          "localhost:8000/ping" \
          > /dev/null

      - name: Test WMS GetCapabilities
        run: |
          curl --silent --show-error --fail \
          "localhost:8000/?service=WMS&version=1.3.0&request=GetCapabilities" \
      - name: Test WMTS GetCapabilities
        run: |
          curl --silent --show-error --fail \
          "localhost:8000/?service=WMS&version=1.0.0&request=GetCapabilities" \
          > /dev/null
      - name: Test WCS1 GetCapabilities
        run: |
          curl --silent --show-error --fail \
          "localhost:8000/?service=WCS&version=1.0.0&request=GetCapabilities"
          > /dev/null
      - name: Test WCS2 GetCapabilities
        run: |
          curl --silent --show-error --fail \
          "localhost:8000/?service=WCS&version=2.0.1&request=GetCapabilities"
          > /dev/null
      - name: Test Prometheus Metrics
        run: |
          curl --silent --show-error --fail \
          "localhost:8000/metrics"
          > /dev/null
