cd /Users/les/Projects/jinja2-async-environment && .venv/bin/pytest -v
direnv: loading ~/Projects/jinja2-async-environment/.envrc                      
direnv: export +PDM_ACTIVE ~PATH
(jinja2-async-environment) [jinja2-async-environment] cd /Users/les/Projects/jinja2-async-environment && .venv/bin/pytest -v
============================= test session starts ==============================
platform darwin -- Python 3.13.3, pytest-8.3.5, pluggy-1.5.0 -- /Users/les/Projects/jinja2-async-environment/.venv/bin/python
cachedir: .pytest_cache
rootdir: /Users/les/Projects/jinja2-async-environment
configfile: pyproject.toml
testpaths: tests, jinja2_async_environment
plugins: anyio-4.9.0, timeout-2.4.0, asyncio-0.26.0, mock-3.14.0, cov-6.1.1
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collected 96 items                                                                                                                                                  

tests/test_bccache.py::TestAsyncBytecodeCache::test_get_cache_key PASSED                                                                                      [  1%]
tests/test_bccache.py::TestAsyncBytecodeCache::test_get_source_checksum PASSED                                                                                [  2%]
tests/test_bccache.py::TestAsyncBytecodeCache::test_not_implemented_methods PASSED                                                                            [  3%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_init PASSED                                                                                          [  4%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_first_loader PASSED                                                                 [  5%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_second_loader PASSED                                                                [  6%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_shared_template PASSED                                                              [  7%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_nonexistent_template PASSED                                                         [  8%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_get_source_async_with_path_object PASSED                                                             [  9%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_list_templates_async PASSED                                                                          [ 10%]
tests/test_choice_loader.py::TestAsyncChoiceLoader::test_load_async PASSED                                                                                    [ 11%]
tests/test_compiler.py::TestAsyncFrame::test_copy PASSED                                                                                                      [ 12%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_block_has_known_extends PASSED                                                                     [ 13%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_block_normal PASSED                                                                                [ 14%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_exit_on_no_output_check PASSED                                                             [ 15%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_fail_on_non_toplevel PASSED                                                                [ 16%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_multiple_times PASSED                                                                      [ 17%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_with_known_extends PASSED                                                                  [ 18%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_normal PASSED                                                                              [ 19%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_extends_set_has_known_extends PASSED                                                               [ 20%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_include_ignore_missing PASSED                                                                      [ 21%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_include_with_context PASSED                                                                        [ 22%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_visit_include_without_context PASSED                                                                     [ 23%]
tests/test_compiler.py::TestAsyncCodeGenerator::test_import_common PASSED                                                                                     [ 25%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_init PASSED                                                                                              [ 26%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_get_source_async_existing_template PASSED                                                                [ 27%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_get_source_async_nonexistent_template PASSED                                                             [ 28%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_get_source_async_with_path_object PASSED                                                                 [ 29%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_list_templates_async PASSED                                                                              [ 30%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_load_async PASSED                                                                                        [ 31%]
tests/test_dict_loader.py::TestAsyncDictLoader::test_uptodate_function PASSED                                                                                 [ 32%]
tests/test_environment.py::TestAsyncEnvironment::test_init PASSED                                                                                             [ 33%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_not_implemented PASSED                                                                     [ 34%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_not_implemented PASSED                                                                  [ 35%]
tests/test_environment.py::TestAsyncEnvironment::test_get_or_select_template_not_implemented PASSED                                                           [ 36%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_async_with_template_object PASSED                                                          [ 37%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_async_with_parent PASSED                                                                   [ 38%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_async_with_globals PASSED                                                                  [ 39%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_with_empty_list PASSED                                                            [ 40%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_with_undefined PASSED                                                             [ 41%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_with_template_object PASSED                                                       [ 42%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_with_parent PASSED                                                                [ 43%]
tests/test_environment.py::TestAsyncEnvironment::test_select_template_async_not_found PASSED                                                                  [ 44%]
tests/test_environment.py::TestAsyncEnvironment::test_get_or_select_template_async_with_string PASSED                                                         [ 45%]
tests/test_environment.py::TestAsyncEnvironment::test_get_or_select_template_async_with_template_object PASSED                                                [ 46%]
tests/test_environment.py::TestAsyncEnvironment::test_get_or_select_template_async_with_list PASSED                                                           [ 47%]
tests/test_environment.py::TestAsyncEnvironment::test_load_template_async_with_template_object PASSED                                                         [ 48%]
tests/test_environment.py::TestAsyncEnvironment::test_load_template_async_with_string PASSED                                                                  [ 50%]
tests/test_environment.py::TestAsyncEnvironment::test_load_template_async_with_iterable PASSED                                                                [ 51%]
tests/test_environment.py::TestAsyncEnvironment::test_load_template_async_with_iterable_all_not_found PASSED                                                  [ 52%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_no_loader PASSED                                                                           [ 53%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_with_cache_hit PASSED                                                                      [ 54%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_with_cache_hit_and_globals PASSED                                                          [ 55%]
tests/test_environment.py::TestAsyncEnvironment::test_get_template_with_cache_miss PASSED                                                                     [ 56%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_init PASSED                                                                                      [ 57%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_with_sync_function PASSED                                                       [ 58%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_with_async_function PASSED                                                      [ 59%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_with_string_function PASSED                                                     [ 60%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_nonexistent_template PASSED                                                     [ 61%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_get_source_async_with_path_object PASSED                                                         [ 62%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_load_async PASSED                                                                                [ 63%]
tests/test_function_loader.py::TestAsyncFunctionLoader::test_invalid_return_type PASSED                                                                       [ 64%]
tests/test_loaders.py::TestAsyncBaseLoader::test_init_with_single_path PASSED                                                                                 [ 65%]
tests/test_loaders.py::TestAsyncBaseLoader::test_init_with_multiple_paths PASSED                                                                              [ 66%]
tests/test_loaders.py::TestAsyncBaseLoader::test_not_implemented_methods PASSED                                                                               [ 67%]
tests/test_loaders.py::TestAsyncBaseLoader::test_load PASSED                                                                                                  [ 68%]
tests/test_loaders.py::TestAsyncBaseLoader::test_load_with_bytes PASSED                                                                                       [ 69%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_init_package_not_found PASSED                                                                      [ 70%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_init_loader_not_found PASSED                                                                       [ 71%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_init_template_root_not_found FAILED                                                                [ 72%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_init_success FAILED                                                                                [ 73%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_get_source_async_not_found PASSED                                                                  [ 75%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_get_source_async_success FAILED                                                                    [ 76%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_get_source_async_with_archive PASSED                                                               [ 77%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_regular FAILED                                                                [ 78%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_zip PASSED                                                                    [ 79%]
tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_zip_no_files FAILED                                                           [ 80%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_init_with_client PASSED                                                                        [ 81%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_init_with_configs PASSED                                                                       [ 82%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_cache_key PASSED                                                                           [ 83%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_source_checksum PASSED                                                                     [ 84%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_bucket_name PASSED                                                                         [ 85%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_load_bytecode_hit PASSED                                                                       [ 86%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_load_bytecode_miss PASSED                                                                      [ 87%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_dump_bytecode PASSED                                                                           [ 88%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_bucket PASSED                                                                              [ 89%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_set_bucket PASSED                                                                              [ 90%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_get_bucket_async PASSED                                                                        [ 91%]
tests/test_redis_bccache.py::TestAsyncRedisBytecodeCache::test_set_bucket_async PASSED                                                                        [ 92%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_simple_template FAILED                                                                   [ 93%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance FAILED                                                         [ 94%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_include FAILED                                                             [ 95%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_block FAILED                                                                       [ 96%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_include FAILED                                                                     [ 97%]
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends FAILED                                                                     [ 98%]
tests/test_template_rendering.py::TestTemplateRendering::test_performance_with_large_template FAILED                                                          [100%]

============================================================================= FAILURES ==============================================================================
_____________________________________________________ TestAsyncPackageLoader.test_init_template_root_not_found ______________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x108b98fc0>, mock_import_module = <MagicMock id='4442877840'>

    def test_init_template_root_not_found(self, mock_import_module: MagicMock) -> None:
        mock_spec = MagicMock()
        mock_spec.loader = MagicMock()
        mock_spec.submodule_search_locations = []
        mock_spec.origin = None
        with (
            patch("importlib.util.find_spec", return_value=mock_spec),
            patch("jinja2_async_environment.loaders.import_module", mock_import_module),
        ):
>           with pytest.raises(
                ValueError,
                match="was not installed in a way that PackageLoader understands",
            ):
E           Failed: DID NOT RAISE <class 'ValueError'>

tests/test_package_loader.py:108: Failed
_____________________________________________________________ TestAsyncPackageLoader.test_init_success ______________________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x108b990f0>
package_loader = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x108b9b5c0>

    def test_init_success(self, package_loader: AsyncPackageLoader) -> None:
        assert package_loader.package_name == "test_package"
        assert package_loader.package_path == AsyncPath("templates")
        assert package_loader.encoding == "utf-8"
>       assert package_loader._archive is None
E       AssertionError: assert <MagicMock name='mock().loader.archive' id='4442867088'> is None
E        +  where <MagicMock name='mock().loader.archive' id='4442867088'> = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x108b9b5c0>._archive

tests/test_package_loader.py:122: AssertionError
_______________________________________________________ TestAsyncPackageLoader.test_get_source_async_success ________________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x108bc67a0>
package_loader = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x108c632f0>

    @pytest.mark.asyncio
    async def test_get_source_async_success(
        self, package_loader: AsyncPackageLoader
    ) -> None:
        with patch.object(
            package_loader._loader,
            "get_data",
            return_value=b"<h1>Template content</h1>",
        ):
>           source, filename, uptodate = await package_loader.get_source_async(
                "template.html"
            )

tests/test_package_loader.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x108c632f0>, template = 'template.html'

    async def get_source_async(self, template: str | AsyncPath) -> SourceType:
        template_path: AsyncPath = (
            AsyncPath(template) if isinstance(template, str) else template
        )
        path = self._template_root / template_path
        if self._archive:
            if not await path.is_file():
>               raise TemplateNotFound(path.name)
E               jinja2.exceptions.TemplateNotFound: template.html

jinja2_async_environment/loaders.py:215: TemplateNotFound
_____________________________________________________ TestAsyncPackageLoader.test_list_templates_async_regular ______________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x108c18350>
package_loader = <jinja2_async_environment.loaders.AsyncPackageLoader object at 0x108ddc490>

    @pytest.mark.asyncio
    async def test_list_templates_async_regular(
        self, package_loader: AsyncPackageLoader
    ) -> None:
        with patch("anyio.Path.rglob") as mock_rglob:
            mock_rglob.return_value.__aiter__.return_value = [
                AsyncPath("/path/to/package/templates/template1.html"),
                AsyncPath("/path/to/package/templates/template2.html"),
                AsyncPath("/path/to/package/templates/subdir/template3.html"),
            ]
            templates = await package_loader.list_templates_async()
>           assert len(templates) == 3
E           assert 0 == 3
E            +  where 0 = len([])

tests/test_package_loader.py:213: AssertionError
___________________________________________________ TestAsyncPackageLoader.test_list_templates_async_zip_no_files ___________________________________________________

self = <tests.test_package_loader.TestAsyncPackageLoader object at 0x108c28230>, mock_find_spec = <MagicMock id='4443371712'>
mock_import_module = <MagicMock id='4442399008'>

    @pytest.mark.asyncio
    async def test_list_templates_async_zip_no_files(
        self, mock_find_spec: MagicMock, mock_import_module: MagicMock
    ) -> None:
        mock_zipimporter = MagicMock()
        mock_zipimporter.archive = "/path/to/archive.zip"
    
        mock_spec = MagicMock()
        mock_spec.loader = mock_zipimporter
        mock_spec.submodule_search_locations = ["/path/to/package"]
    
        mock_path = AsyncPath("/path/to/package/templates")
    
        with (
            patch("importlib.util.find_spec", return_value=mock_spec),
            patch("jinja2_async_environment.loaders.import_module", mock_import_module),
            patch("anyio.Path.is_file", return_value=True),
            patch.object(AsyncPath, "is_dir", return_value=True),
            patch("anyio.Path.__truediv__", return_value=mock_path),
        ):
            loader = AsyncPackageLoader(
                "test_package",
                AsyncPath("/templates"),
                package_path=AsyncPath("templates"),
            )
    
>           with pytest.raises(TypeError, match="does not have the required metadata"):
E           Failed: DID NOT RAISE <class 'TypeError'>

tests/test_package_loader.py:281: Failed
_________________________________________________________ TestTemplateRendering.test_render_simple_template _________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x108b89950>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x108c8d950>

    @pytest.mark.asyncio
    async def test_render_simple_template(self, environment: AsyncEnvironment) -> None:
        template = await environment.get_template_async("simple.html")
        context = template.new_context({"name": "World"})
        rendered = await render_template(template.root_render_func, context)
>       assert rendered == "<h1>Hello, World!</h1>"
E       AssertionError: assert '<h1>Hello, simple.html!</h1>' == '<h1>Hello, World!</h1>'
E         
E         - <h1>Hello, World!</h1>
E         + <h1>Hello, simple.html!</h1>

tests/test_template_rendering.py:51: AssertionError
____________________________________________________ TestTemplateRendering.test_render_template_with_inheritance ____________________________________________________

render_func = <function root at 0x108d3b9c0>
context = <Context {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x108874220>, ...ss 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'message': 'This is a test'} of 'child.html'>

    async def render_template(render_func: t.Any, context: t.Any) -> str:
        result = []
        try:
>           async for event in render_func(context):
E           TypeError: 'async for' requires an object with __aiter__ method, got coroutine

tests/test_template_rendering.py:13: TypeError

During handling of the above exception, another exception occurred:

self = <tests.test_template_rendering.TestTemplateRendering object at 0x108b89810>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x108c8da90>

    @pytest.mark.asyncio
    async def test_render_template_with_inheritance(
        self, environment: AsyncEnvironment
    ) -> None:
        template = await environment.get_template_async("child.html")
        context = template.new_context({"message": "This is a test"})
>       rendered = await render_template(template.root_render_func, context)

tests/test_template_rendering.py:59: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

render_func = <function root at 0x108d3b9c0>
context = <Context {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x108874220>, ...ss 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'message': 'This is a test'} of 'child.html'>

    async def render_template(render_func: t.Any, context: t.Any) -> str:
        result = []
        try:
            async for event in render_func(context):
                result.append(event)
        except TypeError:
>           for event in render_func(context):
E           TypeError: 'coroutine' object is not iterable

tests/test_template_rendering.py:16: TypeError
______________________________________________________ TestTemplateRendering.test_render_template_with_include ______________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x108b995b0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x108c8f890>

    @pytest.mark.asyncio
    async def test_render_template_with_include(
        self, environment: AsyncEnvironment
    ) -> None:
        template = await environment.get_template_async("include.html")
        context = template.new_context({"partial_var": "Included content"})
>       rendered = await render_template(template.root_render_func, context)

tests/test_template_rendering.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/test_template_rendering.py:13: in render_template
    async for event in render_func(context):
<template>:11: in root
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

context = <Context {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x108874220>, ...a2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'partial_var': 'Included content'} of 'partial.html'>

>   ???
E   NameError: name 'undefined' is not defined

<template>:11: NameError
___________________________________________________________ TestTemplateRendering.test_render_async_block ___________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x108b996e0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x108c8e990>

    @pytest.mark.asyncio
    async def test_render_async_block(self, environment: AsyncEnvironment) -> None:
        template = await environment.get_template_async("async_block.html")
    
        async def async_generator() -> AsyncIterator[str]:
            for item in ("Item1", "Item2", "Item3"):
                yield item
    
        context = template.new_context({"items": async_generator()})
>       rendered = await render_template(template.root_render_func, context)

tests/test_template_rendering.py:82: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/test_template_rendering.py:13: in render_template
    async for event in render_func(context):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

context = <Context {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x108874220>, ...r object TestTemplateRendering.test_render_async_block.<locals>.async_generator at 0x108d20940>} of 'async_block.html'>

>   ???
E   KeyError: 'async_content'

<template>:10: KeyError
__________________________________________________________ TestTemplateRendering.test_render_async_include __________________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x108bf16d0>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x108c8dd10>

    @pytest.mark.asyncio
    async def test_render_async_include(self, environment: AsyncEnvironment) -> None:
        template = await environment.get_template_async("async_include.html")
    
        async def async_generator() -> AsyncIterator[str]:
            for item in ("Item1", "Item2", "Item3"):
                yield item
    
        context = template.new_context({"async_items": async_generator()})
>       rendered = await render_template(template.root_render_func, context)

tests/test_template_rendering.py:94: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/test_template_rendering.py:13: in render_template
    async for event in render_func(context):
<template>:12: in root
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

context = <Context {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x108874220>, ...ject TestTemplateRendering.test_render_async_include.<locals>.async_generator at 0x108d21f00>} of 'async_partial.html'>

>   ???
E   NameError: name 'undefined' is not defined

<template>:12: NameError
__________________________________________________________ TestTemplateRendering.test_render_async_extends __________________________________________________________

render_func = <function root at 0x108de0680>
context = <Context {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x108874220>, ...ject TestTemplateRendering.test_render_async_extends.<locals>.async_generator at 0x108d22440>} of 'async_extends.html'>

    async def render_template(render_func: t.Any, context: t.Any) -> str:
        result = []
        try:
>           async for event in render_func(context):
E           TypeError: 'async for' requires an object with __aiter__ method, got coroutine

tests/test_template_rendering.py:13: TypeError

During handling of the above exception, another exception occurred:

self = <tests.test_template_rendering.TestTemplateRendering object at 0x108bc6f10>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x108de82d0>

    @pytest.mark.asyncio
    async def test_render_async_extends(self, environment: AsyncEnvironment) -> None:
        template = await environment.get_template_async("async_extends.html")
    
        async def async_generator() -> AsyncIterator[str]:
            for item in ("Item1", "Item2", "Item3"):
                yield item
    
        context = template.new_context({"async_items": async_generator()})
>       rendered = await render_template(template.root_render_func, context)

tests/test_template_rendering.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

render_func = <function root at 0x108de0680>
context = <Context {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x108874220>, ...ject TestTemplateRendering.test_render_async_extends.<locals>.async_generator at 0x108d22440>} of 'async_extends.html'>

    async def render_template(render_func: t.Any, context: t.Any) -> str:
        result = []
        try:
            async for event in render_func(context):
                result.append(event)
        except TypeError:
>           for event in render_func(context):
E           TypeError: 'coroutine' object is not iterable

tests/test_template_rendering.py:16: TypeError
____________________________________________________ TestTemplateRendering.test_performance_with_large_template _____________________________________________________

self = <tests.test_template_rendering.TestTemplateRendering object at 0x108bc7020>
environment = <jinja2_async_environment.environment.AsyncEnvironment object at 0x108de8a50>

    @pytest.mark.asyncio
    async def test_performance_with_large_template(
        self, environment: AsyncEnvironment
    ) -> None:
        large_template = "{% for i in range(1000) %}{{ i }}{% endfor %}"
    
        environment.loader.mapping["large.html"] = large_template  # type: ignore
    
        template = await environment.get_template_async("large.html")
        context = template.new_context({})
    
        import time
    
        start_time = time.time()
>       rendered = await render_template(template.root_render_func, context)

tests/test_template_rendering.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/test_template_rendering.py:13: in render_template
    async for event in render_func(context):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

context = <Context {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x108874220>, ...tils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>} of 'large.html'>

>   ???
E   NameError: name 'undefined' is not defined

<template>:12: NameError
========================================================================= warnings summary ==========================================================================
tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends
  /Users/les/Projects/jinja2-async-environment/tests/test_template_rendering.py:13: RuntimeWarning: coroutine 'root' was never awaited
    async for event in render_func(context):
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance
tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends
  /Users/les/Projects/jinja2-async-environment/tests/test_template_rendering.py:16: RuntimeWarning: coroutine 'root' was never awaited
    for event in render_func(context):
  Enable tracemalloc to get traceback where the object was allocated.
  See https://docs.pytest.org/en/stable/how-to/capture-warnings.html#resource-warnings for more info.

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
========================================================================== tests coverage ===========================================================================
_________________________________________________________ coverage: platform darwin, python 3.13.3-final-0 __________________________________________________________

Name                                      Stmts   Miss  Cover
-------------------------------------------------------------
jinja2_async_environment/bccache.py          45      0   100%
jinja2_async_environment/compiler.py        209     26    88%
jinja2_async_environment/environment.py     113     19    83%
jinja2_async_environment/loaders.py         218     61    72%
-------------------------------------------------------------
TOTAL                                       585    106    82%
====================================================================== short test summary info ======================================================================
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_init_template_root_not_found - Failed: DID NOT RAISE <class 'ValueError'>
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_init_success - AssertionError: assert <MagicMock name='mock().loader.archive' id='4442867088'> is None
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_get_source_async_success - jinja2.exceptions.TemplateNotFound: template.html
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_regular - assert 0 == 3
FAILED tests/test_package_loader.py::TestAsyncPackageLoader::test_list_templates_async_zip_no_files - Failed: DID NOT RAISE <class 'TypeError'>
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_simple_template - AssertionError: assert '<h1>Hello, simple.html!</h1>' == '<h1>Hello, World!</h1>'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_inheritance - TypeError: 'coroutine' object is not iterable
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_template_with_include - NameError: name 'undefined' is not defined
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_block - KeyError: 'async_content'
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_include - NameError: name 'undefined' is not defined
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_render_async_extends - TypeError: 'coroutine' object is not iterable
FAILED tests/test_template_rendering.py::TestTemplateRendering::test_performance_with_large_template - NameError: name 'undefined' is not defined
============================================================= 12 failed, 84 passed, 4 warnings in 2.69s =============================================================
(jinja2-async-environment) [jinja2-async-environment]                                                                                                      main  ✭ ✱
