# DO NOT EDIT THIS FILE MANUALLY - it will be overwritten.
# Generated by: erdo gen-client
"""
Internal action functions auto-generated from backend/bot/action.go.

These functions provide Python implementations of internal actions
that are handled directly by the bot execution engine.
"""

from typing import Any, Dict, Optional, Union

from pydantic import BaseModel

from erdo.template import TemplateString


class CheckpointAttemptParams(BaseModel):
    """checkpoint_attempt parameters"""

    name: str = "checkpoint_attempt"  # Action type for roundtrip compatibility
    attempts: Optional[Union[Any, TemplateString]] = None  # Attempt data
    loops: Optional[Union[Any, TemplateString]] = None  # Loop data


class RefreshResourceParams(BaseModel):
    """refresh_resource parameters"""

    name: str = "refresh_resource"  # Action type for roundtrip compatibility
    resource: Union[str, Dict[str, Any], TemplateString]  # Resource to refresh


def checkpoint_attempt(
    attempts: Optional[Union[Any, TemplateString]] = None,
    loops: Optional[Union[Any, TemplateString]] = None,
    **kwargs: Any,
) -> CheckpointAttemptParams:
    """checkpoint_attempt internal action

    Internal action that is handled directly by the bot execution engine.

    Args:
        attempts: Optional attempt data
        loops: Optional loop data

    Returns:
        CheckpointAttemptParams: Type-safe parameter object
    """
    params = {
        "attempts": attempts,
        "loops": loops,
    }
    # Remove None values for optional parameters
    params = {k: v for k, v in params.items() if v is not None}
    params.update(kwargs)

    return CheckpointAttemptParams.model_validate(params)


def refresh_resource(
    resource: Union[str, Dict[str, Any], TemplateString], **kwargs: Any
) -> RefreshResourceParams:
    """refresh_resource internal action

    Internal action that is handled directly by the bot execution engine.

    Args:
        resource: Resource to refresh

    Returns:
        RefreshResourceParams: Type-safe parameter object
    """
    params = {
        "resource": resource,
    }
    # Remove None values for optional parameters
    params = {k: v for k, v in params.items() if v is not None}
    params.update(kwargs)

    return RefreshResourceParams.model_validate(params)
