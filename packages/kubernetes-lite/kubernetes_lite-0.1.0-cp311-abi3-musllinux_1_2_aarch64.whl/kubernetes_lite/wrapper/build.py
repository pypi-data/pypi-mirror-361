# python build stubs for package wrapper
# File is generated by gopy. Do not edit.
# gopy pkg -no-make -author=Michael Honaker -email=michael.honaker@ibm.com -name=wrapper github.ibm.com/Michael-Honaker/kubernetes-lite/kubernetes_lite/go_wrapper/pkg/client github.ibm.com/Michael-Honaker/kubernetes-lite/kubernetes_lite/go_wrapper/pkg/envtest/setup github.ibm.com/Michael-Honaker/kubernetes-lite/kubernetes_lite/go_wrapper/pkg/envtest/server

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_wrapper')
mod.add_include('"wrapper_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_from_bytes', retval('int64_t'), [param('PyObject*', 'o', transfer_ownership=False)])
mod.add_function('Slice_byte_to_bytes', retval('PyObject*', caller_owns_return=True), [param('int64_t', 'handle')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('client_EmptyEvent', retval('int64_t'), [])
mod.add_function('client_Set_EmptyEvent', None, [param('int64_t', 'val')])
add_checked_function(mod, 'client_WrappedDynamicClient_Resource', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'apiVersion'), param('char*', 'kind')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_Apply', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'name'), param('int64_t', 'obj'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_ApplyStatus', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'name'), param('int64_t', 'obj'), param('int64_t', 'opts')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_Create', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'obj'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_Delete', retval('char*'), [param('int64_t', '_handle'), param('char*', 'name'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_DeleteCollection', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'opts'), param('int64_t', 'listOptions')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_Get', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'name'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_List', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'opts')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_Namespace', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'arg_0')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_Patch', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'name'), param('char*', 'pt'), param('int64_t', 'data'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_Update', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'obj'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_UpdateStatus', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'obj'), param('int64_t', 'opts')])
add_checked_function(mod, 'client_WrappedNamespaceableResourceInterface_Watch', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'opts')])
add_checked_function(mod, 'client_WrappedResourceInterface_Apply', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'name'), param('int64_t', 'obj'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedResourceInterface_ApplyStatus', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'name'), param('int64_t', 'obj'), param('int64_t', 'opts')])
add_checked_function(mod, 'client_WrappedResourceInterface_Create', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'obj'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedResourceInterface_Delete', retval('char*'), [param('int64_t', '_handle'), param('char*', 'name'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedResourceInterface_DeleteCollection', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'opts'), param('int64_t', 'listOptions')])
add_checked_function(mod, 'client_WrappedResourceInterface_Get', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'name'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedResourceInterface_List', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'opts')])
add_checked_function(mod, 'client_WrappedResourceInterface_Patch', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'name'), param('char*', 'pt'), param('int64_t', 'data'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedResourceInterface_Update', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'obj'), param('int64_t', 'opts'), param('int64_t', 'subresources')])
add_checked_function(mod, 'client_WrappedResourceInterface_UpdateStatus', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'obj'), param('int64_t', 'opts')])
add_checked_function(mod, 'client_WrappedResourceInterface_Watch', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'opts')])
add_checked_function(mod, 'client_WrappedWatchInterface_Next', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'client_WrappedWatchInterface_Stop', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'client_NewWrappedDynamicClient', retval('int64_t'), [param('float', 'qps'), param('int64_t', 'burst'), param('char*', 'timeout')])
add_checked_function(mod, 'client_NewWrappedDynamicClientWithConfig', retval('int64_t'), [param('int64_t', 'config'), param('float', 'qps'), param('int64_t', 'burst'), param('char*', 'timeout')])
add_checked_function(mod, 'client_NewWrappedWatchInterface', retval('int64_t'), [param('int64_t', 'watcher')])
mod.add_function('setup_SetupEnvTestResult_CTor', retval('int64_t'), [])
add_checked_function(mod, 'setup_SetupEnvTest', retval('int64_t'), [param('int64_t', 'stdin_data'), param('int64_t', 'arg_data')])
add_checked_function(mod, 'server_EnvTestEnvironment_GetKubeConfig', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'server_EnvTestEnvironment_Start', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'server_EnvTestEnvironment_Stop', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'server_NewEnvTestEnvironment', retval('int64_t'), [])
add_checked_function(mod, 'server_NewEnvTestEnvironmentWithPath', retval('int64_t'), [param('char*', 'path')])

mod.generate(open('wrapper.c', 'w'))

