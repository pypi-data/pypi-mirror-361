{
    "lfa": {
        "name": "LSEG Financial Analytics",
        "title": "LSEG Analytics Code Samples",
        "subtitle": "Here you can find code samples to get you started with key LSEG Analytics functionality",
        "categories": [
            {
                "name": "Calendars",
                "samples": [
                    {
                        "name": "Calendars Fundamentals",
                        "notebookFile": "lfa/calendars/cal0_calendars-fundamentals.ipynb",
                        "pythonFile": ""
                    },
                    {
                        "name": "Generate public holidays using an LSEG-defined calendar",
                        "notebookFile": "lfa/calendars/workflows/1_generating_public_holidays_using_an_LSEG-defined_calendar.ipynb",
                        "pythonFile": "lfa/calendars/workflows/1_generating_public_holidays_using_an_LSEG-defined_calendar.py"
                    },
                    {
                        "name": "Adding periods to a date, taking holidays into account",
                        "notebookFile": "lfa/calendars/workflows/2_adding_a_period_to_a_date_taking_holidays_into_account.ipynb",
                        "pythonFile": "lfa/calendars/workflows/2_adding_a_period_to_a_date_taking_holidays_into_account.py"
                    },
                    {
                        "name": "Counting days and periods between two dates, taking holidays into account",
                        "notebookFile": "lfa/calendars/workflows/3_counting_days_and_periods_between_two_dates_taking_holidays_into_account.ipynb",
                        "pythonFile": "lfa/calendars/workflows/3_counting_days_and_periods_between_two_dates_taking_holidays_into_account.py"
                    },
                    {
                        "name": "Generate a date schedule, taking holidays into account",
                        "notebookFile": "lfa/calendars/workflows/4_generating_a_date_schedule_taking_holidays_into_account.ipynb",
                        "pythonFile": "lfa/calendars/workflows/4_generating_a_date_schedule_taking_holidays_into_account.py"
                    },
                    {
                        "name": "Manipulate user-defined calendars",
                        "notebookFile": "lfa/calendars/workflows/5_manipulate_user-defined_calendars.ipynb",
                        "pythonFile": "lfa/calendars/workflows/5_manipulate_user-defined_calendars.py"
                    }
                ]
            },
            {
                "name": "FX Forward Curves",
                "samples": [
                    {
                        "name": "FX Forward Curves Fundamentals",
                        "notebookFile": "lfa/fx-forward-curves/fx1_fx-forward-fundamentals.ipynb",
                        "pythonFile": ""
                    },
                    {
                        "name": "Calculate an FX Forward curve defined by LSEG",
                        "notebookFile": "lfa/fx-forward-curves/workflows/1_calculate_an_FX_forward_curve_defined_by_LSEG.ipynb",
                        "pythonFile": "lfa/fx-forward-curves/workflows/1_calculate_an_FX_forward_curve_defined_by_LSEG.py"
                    },
                    {
                        "name": "Create an FX Forward curve using FX Forward constituents",
                        "notebookFile": "lfa/fx-forward-curves/workflows/2_create_an_FX_forward_curve_from_FX_forward_constituents.ipynb",
                        "pythonFile": "lfa/fx-forward-curves/workflows/2_create_an_FX_forward_curve_from_FX_forward_constituents.py"
                    },
                    {
                        "name": "Create and save an FX Forward curve from deposit constituents",
                        "notebookFile": "lfa/fx-forward-curves/workflows/3_create_an_FX_forward_curve_from_deposit_constituents.ipynb",
                        "pythonFile": "lfa/fx-forward-curves/workflows/3_create_an_FX_forward_curve_from_deposit_constituents.py"
                    },
                    {
                        "name": "Create and save an FX Forward curve from sources",
                        "notebookFile": "lfa/fx-forward-curves/workflows/4_create_an_FX_forward_curve_from_sources.ipynb",
                        "pythonFile": "lfa/fx-forward-curves/workflows/4_create_an_FX_forward_curve_from_sources.py"
                    }
                ]
            },
            {
                "name": "FX Forwards",
                "samples": [
                    {
                        "name": "FX Forwards Fundamentals",
                        "notebookFile": "lfa/fx-forwards/Fx_Forwards_Fundamentals.ipynb",
                        "pythonFile": ""
                    },
                    {
                        "name": "Price an FX Forward on broken dates or non standard tenors",
                        "notebookFile": "lfa/fx-forwards/workflows/1_price_an_FX_forward_on_broken_dates.ipynb",
                        "pythonFile": "lfa/fx-forwards/workflows/1_price_an_FX_forward_on_broken_dates.py"
                    },
                    {
                        "name": "Price an FX Forward using an LSEG-defined curve",
                        "notebookFile": "lfa/fx-forwards/workflows/2_price_an_FX_forward_using_an_LSEG-defined_curve.ipynb",
                        "pythonFile": "lfa/fx-forwards/workflows/2_price_an_FX_forward_using_an_LSEG-defined_curve.py"
                    },
                    {
                        "name": "Value an FX Forward using an LSEG-defined curve",
                        "notebookFile": "lfa/fx-forwards/workflows/3_value_an_FX_forward_using_an_LSEG-defined_curve.ipynb",
                        "pythonFile": "lfa/fx-forwards/workflows/3_value_an_FX_forward_using_an_LSEG-defined_curve.py"
                    }
                ]
            },
            {
                "name": "Interest Rate Swaps",
                "samples": [
                    {
                        "name": "Interest Rates Swaps Fundamentals",
                        "notebookFile": "lfa/ir-swaps/IR_Swaps_Fundamentals.ipynb",
                        "pythonFile": ""
                    },
                    {
                        "name": "Interest Rate Swaps Templates",
                        "notebookFile": "lfa/ir-swaps/workflows/1_interest_rate_swaps_templates.ipynb",
                        "pythonFile": "lfa/ir-swaps/workflows/1_interest_rate_swaps_templates.py"
                    },
                    {
                        "name": "Interest Rate Indices",
                        "notebookFile": "lfa/ir-swaps/workflows/2_interest_rate_indices.ipynb",
                        "pythonFile": "lfa/ir-swaps/workflows/2_interest_rate_indices.py"
                    },
                    {
                        "name": "Valuing Interest Rate Swaps",
                        "notebookFile": "lfa/ir-swaps/workflows/3_interest_rate_swaps_valuation.ipynb",
                        "pythonFile": "lfa/ir-swaps/workflows/3_interest_rate_swaps_valuation.py"
                    },
                    {
                        "name": "Valuing Cross Currency Basis Swaps",
                        "notebookFile": "lfa/ir-swaps/workflows/4_cross_currency_basis_swap_valuation.ipynb",
                        "pythonFile": "lfa/ir-swaps/workflows/4_cross_currency_basis_swap_valuation.py"
                    },
                    {
                        "name": "Valuing Cross Currency Basis Swaps (fixed to float)",
                        "notebookFile": "lfa/ir-swaps/workflows/5_cross_currency_swap_valuation.ipynb",
                        "pythonFile": "lfa/ir-swaps/workflows/5_cross_currency_swap_valuation.py"
                    }
                ]
            },
            {
                "name": "Yield Book",
                "samples": [
                    {
                        "name": "Yield book Fundamentals",
                        "notebookFile": "lfa/yieldbook-rest/YieldBook-Rest-fundamentals.ipynb",
                        "pythonFile": ""
                    },
                    {
                        "name": "Multiple Instrument Reference Data",
                        "notebookFile": "lfa/yieldbook-rest/workflows/Multiple_Instruments_fetch.ipynb",
                        "pythonFile": "lfa/yieldbook-rest/workflows/Multiple_Instruments_fetch.py"
                    },
                    {
                        "name": "Multiple Instrument Reference Data via Sync Post",
                        "notebookFile": "lfa/yieldbook-rest/workflows/Multiple_Instruments_fetch_-_Sync_Post.ipynb",
                        "pythonFile": "lfa/yieldbook-rest/workflows/Multiple_Instruments_fetch_-_Sync_Post.py"
                    },
                    {
                        "name": "Single Instrument Scenario Analysis Advanced via Sync Post",
                        "notebookFile": "lfa/yieldbook-rest/workflows/Single_Instrument_Advanced_SA_-_Sync_Post.ipynb",
                        "pythonFile": "lfa/yieldbook-rest/workflows/Single_Instrument_Advanced_SA_-_Sync_Post.py"
                    },
                    {
                        "name": "Single Instrument Cash Flow Advanced via Sync Post",
                        "notebookFile": "lfa/yieldbook-rest/workflows/Single_Instrument_CF_Advanced_-_Sync_Post.ipynb",
                        "pythonFile": "lfa/yieldbook-rest/workflows/Single_Instrument_CF_Advanced_-_Sync_Post.py"
                    },
                    {
                        "name": "Single Instrument PY Advanced via Sync Get",
                        "notebookFile": "lfa/yieldbook-rest/workflows/Single_Instrument_PY_Advanced_-_Sync_Get.ipynb",
                        "pythonFile": "lfa/yieldbook-rest/workflows/Single_Instrument_PY_Advanced_-_Sync_Get.py"
                    },
                    {
                        "name": "Single Instrument Reference Data",
                        "notebookFile": "lfa/yieldbook-rest/workflows/Single_Instrument_fetch.ipynb",
                        "pythonFile": "lfa/yieldbook-rest/workflows/Single_Instrument_fetch.py"
                    }
                ]
            }
        ]
    }
}