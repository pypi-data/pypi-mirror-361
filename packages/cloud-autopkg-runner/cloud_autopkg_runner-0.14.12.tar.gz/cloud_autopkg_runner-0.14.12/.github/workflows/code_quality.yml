name: Python Code Quality
on:
  push:
    branches:
      - '*'

permissions:
  contents: read

jobs:
  lock_file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
      - run: uv lock --locked

  linting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
      - run: uv run --all-extras ruff check .

  formatting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
      - run: uv run --all-extras ruff format --check .

  type_consistency:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
      - name: Install the project
        run: uv sync
      - run: uv run --all-extras pyright .

  unit_tests:
    name: Unit tests on ${{ matrix.os }} with Python ${{ matrix.python-version }}${{ matrix.experimental && ' (Experimental)' || '' }}
    runs-on: macos-latest
    needs: [lock_file]
    permissions:
      contents: read
      statuses: write
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        experimental: [false]
        include:
          - os: macos-latest
            python-version: "3.14"
            experimental: true
          - os: ubuntu-latest
            python-version: "3.14"
            experimental: true
          - os: windows-latest
            python-version: "3.14"
            experimental: true
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
      - name: Install the project
        run: uv sync --all-extras
      - name: Run tests with pytest
        run: uv run --all-extras --python ${{ matrix.python-version }} pytest
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
