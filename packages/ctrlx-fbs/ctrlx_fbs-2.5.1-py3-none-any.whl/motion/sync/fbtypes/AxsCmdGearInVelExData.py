# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# parameters of the axis GearInVelEx command
class AxsCmdGearInVelExData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AxsCmdGearInVelExData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAxsCmdGearInVelExData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AxsCmdGearInVelExData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # name of the master axis
    # AxsCmdGearInVelExData
    def Master(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # sync source (Actual/Setpoint/Actual-extrapolated)
    # AxsCmdGearInVelExData
    def SyncSource(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # gear in vel parameters
    # AxsCmdGearInVelExData
    def Parameters(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from motion.sync.fbtypes.AxsCmdGearInVelParams import AxsCmdGearInVelParams
            obj = AxsCmdGearInVelParams()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # gear in vel data layer parameters
    # AxsCmdGearInVelExData
    def DlParameters(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from motion.sync.fbtypes.AxsCmdGearInVelDlParams import AxsCmdGearInVelDlParams
            obj = AxsCmdGearInVelDlParams()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # should this be a buffered command?
    # AxsCmdGearInVelExData
    def Buffered(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def AxsCmdGearInVelExDataStart(builder): builder.StartObject(5)
def Start(builder):
    return AxsCmdGearInVelExDataStart(builder)
def AxsCmdGearInVelExDataAddMaster(builder, master): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(master), 0)
def AddMaster(builder, master):
    return AxsCmdGearInVelExDataAddMaster(builder, master)
def AxsCmdGearInVelExDataAddSyncSource(builder, syncSource): builder.PrependInt8Slot(1, syncSource, 0)
def AddSyncSource(builder, syncSource):
    return AxsCmdGearInVelExDataAddSyncSource(builder, syncSource)
def AxsCmdGearInVelExDataAddParameters(builder, parameters): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(parameters), 0)
def AddParameters(builder, parameters):
    return AxsCmdGearInVelExDataAddParameters(builder, parameters)
def AxsCmdGearInVelExDataAddDlParameters(builder, dlParameters): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(dlParameters), 0)
def AddDlParameters(builder, dlParameters):
    return AxsCmdGearInVelExDataAddDlParameters(builder, dlParameters)
def AxsCmdGearInVelExDataAddBuffered(builder, buffered): builder.PrependBoolSlot(4, buffered, 0)
def AddBuffered(builder, buffered):
    return AxsCmdGearInVelExDataAddBuffered(builder, buffered)
def AxsCmdGearInVelExDataEnd(builder): return builder.EndObject()
def End(builder):
    return AxsCmdGearInVelExDataEnd(builder)
import motion.sync.fbtypes.AxsCmdGearInVelDlParams
import motion.sync.fbtypes.AxsCmdGearInVelParams
try:
    from typing import Optional
except:
    pass

class AxsCmdGearInVelExDataT(object):

    # AxsCmdGearInVelExDataT
    def __init__(self):
        self.master = None  # type: str
        self.syncSource = 0  # type: int
        self.parameters = None  # type: Optional[motion.sync.fbtypes.AxsCmdGearInVelParams.AxsCmdGearInVelParamsT]
        self.dlParameters = None  # type: Optional[motion.sync.fbtypes.AxsCmdGearInVelDlParams.AxsCmdGearInVelDlParamsT]
        self.buffered = False  # type: bool

    @classmethod
    def InitFromBuf(cls, buf, pos):
        axsCmdGearInVelExData = AxsCmdGearInVelExData()
        axsCmdGearInVelExData.Init(buf, pos)
        return cls.InitFromObj(axsCmdGearInVelExData)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, axsCmdGearInVelExData):
        x = AxsCmdGearInVelExDataT()
        x._UnPack(axsCmdGearInVelExData)
        return x

    def __eq__(self, other):
        return type(self) == type(other) and \
            self.master == other.master and \
            self.syncSource == other.syncSource and \
            self.parameters == other.parameters and \
            self.dlParameters == other.dlParameters and \
            self.buffered == other.buffered

    # AxsCmdGearInVelExDataT
    def _UnPack(self, axsCmdGearInVelExData):
        if axsCmdGearInVelExData is None:
            return
        self.master = axsCmdGearInVelExData.Master()
        self.syncSource = axsCmdGearInVelExData.SyncSource()
        if axsCmdGearInVelExData.Parameters() is not None:
            self.parameters = motion.sync.fbtypes.AxsCmdGearInVelParams.AxsCmdGearInVelParamsT.InitFromObj(axsCmdGearInVelExData.Parameters())
        if axsCmdGearInVelExData.DlParameters() is not None:
            self.dlParameters = motion.sync.fbtypes.AxsCmdGearInVelDlParams.AxsCmdGearInVelDlParamsT.InitFromObj(axsCmdGearInVelExData.DlParameters())
        self.buffered = axsCmdGearInVelExData.Buffered()

    # AxsCmdGearInVelExDataT
    def Pack(self, builder):
        if self.master is not None:
            master = builder.CreateString(self.master)
        if self.parameters is not None:
            parameters = self.parameters.Pack(builder)
        if self.dlParameters is not None:
            dlParameters = self.dlParameters.Pack(builder)
        AxsCmdGearInVelExDataStart(builder)
        if self.master is not None:
            AxsCmdGearInVelExDataAddMaster(builder, master)
        AxsCmdGearInVelExDataAddSyncSource(builder, self.syncSource)
        if self.parameters is not None:
            AxsCmdGearInVelExDataAddParameters(builder, parameters)
        if self.dlParameters is not None:
            AxsCmdGearInVelExDataAddDlParameters(builder, dlParameters)
        AxsCmdGearInVelExDataAddBuffered(builder, self.buffered)
        axsCmdGearInVelExData = AxsCmdGearInVelExDataEnd(builder)
        return axsCmdGearInVelExData
