name: Release

on:
  push:
    tags:
      - "v*.*.*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          [
            ubuntu-24.04,
            ubuntu-24.04-arm,
            windows-2025,
            windows-11-arm,
            macos-15,
          ]
        arch: [x64, arm64]
        exclude:
          # x64 combinations not supported
          - os: ubuntu-24.04-arm
            arch: x64
          - os: windows-11-arm
            arch: x64
          # arm64 combinations not supported
          - os: ubuntu-24.04
            arch: arm64
          - os: windows-2025
            arch: arm64

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗️ Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_ARCHS_LINUX: ${{ matrix.arch == 'x64' && 'x86_64' || 'aarch64' }}
          CIBW_ARCHS_MACOS: ${{ matrix.arch == 'x64' && 'x86_64' || 'arm64' }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch == 'x64' && 'AMD64' || 'ARM64' }}
          CIBW_BEFORE_BUILD: >
            python -m pip install -U pip setuptools wheel scikit-build-core[pyproject]>=0.11 pybind11>=2.13 setuptools_scm>=8 cmake

          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: >
            python -c "import lbson; print('Import successful')" &&
            python -m pytest {project}/tests/ -v

      - name: 📦 Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-24.04

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: 📦 Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build>=1.2.0

      - name: 🏗️ Build source distribution
        run: python -m build --sdist

      - name: 📦 Upload source distribution
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish-to-pypi:
    name: Publish to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-24.04

    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/p/lbson

    steps:
      - name: 📦 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: 🔍 List artifacts
        run: |
          ls -la dist/
          echo "📊 Wheel count: $(ls dist/*.whl | wc -l)"
          echo "📊 Source distribution count: $(ls dist/*.tar.gz | wc -l)"

      - name: 🚀 Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          print-hash: true

  create-github-release:
    name: Create GitHub Release
    needs: [publish-to-pypi]
    runs-on: ubuntu-24.04

    permissions:
      contents: write

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📝 Generate release notes
        id: generate_notes
        run: |
          # Get the tag name
          TAG_NAME=${GITHUB_REF#refs/tags/}

          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 ${TAG_NAME}^)

          # Generate changelog
          echo "## 🚀 What's New in ${TAG_NAME}" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 📋 Changes" >> release_notes.md
          git log --pretty=format:"- %s" ${PREV_TAG}..${TAG_NAME} >> release_notes.md
          echo "" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 📦 Installation" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo 'pip install lbson-py' >> release_notes.md
          echo '```' >> release_notes.md

          # Set output
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT

      - name: 📦 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: 🎉 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.generate_notes.outputs.tag_name }}
          name: Release ${{ steps.generate_notes.outputs.tag_name }}
          body_path: release_notes.md
          files: "dist/*"
          draft: false
          prerelease: false
