[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cancer-clinical-data-analysis"
version = "0.1.1"
description = "A comprehensive Python package for cancer clinical data analysis including data processing, statistical analysis, survival modeling, and visualization"
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE.md" }
authors = [
    { name = "Zaeem Asghar", email = "zaeem.asghar@mailbox.tu-dresden.de" },
    { name = "Zoha Rashid", email = "zoha.rashid@mailbox.tu-dresden.de" }
]
keywords = ["cancer", "clinical-data", "survival-analysis", "bioinformatics", "machine-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps."
]

dependencies = [
    "pandas>=2.3.1",
    "numpy>=2.3.1",
    "scikit-learn>=1.2.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "scipy>=1.10.0",
    "lifelines>=0.27.0",
    "requests>=2.28.0",
    "click>=8.1.0",
    "pytest>=8.4.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.1.0",
    "ruff>=0.1.0",
    "bandit>=1.7.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0"
]
jupyter = [
    "jupyter>=1.0.0",
    "ipython>=8.0.0",
    "plotly>=5.13.0",
    "statsmodels>=0.13.0"
]

[project.urls]
Homepage = "https://codebase.helmholtz.cloud/tud-rse-pojects-2025/group-10"
Repository = "https://codebase.helmholtz.cloud/tud-rse-pojects-2025/group-10"

[project.scripts]
cancer-analysis = "main:cli"

# Hatch configuration for uv compatibility
[tool.hatch.build.targets.wheel]
packages = ["cancer_analysis"]

[tool.hatch.build.targets.sdist]
include = [
    "/cancer_analysis",
    "/tests",
    "/README.md",
    "/LICENSE.md"
]

# Ruff configuration (modern replacement for flake8 + isort)
[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # Pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.ruff.isort]
known-first-party = ["cancer_analysis"]
known-third-party = ["pandas", "numpy", "sklearn", "matplotlib", "seaborn", "scipy", "lifelines", "requests", "click"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E501"
]
exclude = [
    ".venv",
    "__pycache__",
    "*.pyc",
    ".git",
    ".tox",
    "build",
    "dist",
    "*.egg-info"
]

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "sklearn.*",
    "matplotlib.*",
    "seaborn.*",
    "scipy.*",
    "lifelines.*"
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=cancer_analysis --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["cancer_analysis"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
