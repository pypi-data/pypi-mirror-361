[project]
name = "vecsync"
version = "0.7.0"
description = "A simple command-line utility for synchronizing documents to vector storage for LLM interaction."
readme = "README.md"
authors = [
    { name = "John Bencina", email = "jbencina@users.noreply.github.com" }
]
requires-python = ">=3.10"
license = { file = "LICENSE" }

keywords = [
    "cli",
    "command-line",
    "pdf",
    "documents",
    "vector search",
    "embeddings",
    "semantic search",
    "information retrieval",
    "llm",
    "chatbot",
    "zotero",
    "gradio",
    "sync",
]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    "appdirs>=1.4.4",
    "click>=8.1.8",
    "gradio>=5.27.1",
    "openai>=1.76.0",
    "pydantic>=2.11.3",
    "python-dotenv>=1.1.0",
    "termcolor>=3.0.1",
    "tqdm>=4.67.1",
]

[project.scripts]
vs = "vecsync.cli.entry:cli"

[project.urls]
Homepage = "https://vecsync.io"
Repository = "https://github.com/jbencina/vecsync"
Issues = "https://github.com/jbencina/vecsync/issues"
Changelog = "https://github.com/jbencina/vecsync/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.6",
]

[tool.coverage.run]
branch = true
source = ["src/vecsync"]

[tool.coverage.report]
show_missing = true
exclude_also = [
  # match the entire file contents if it has "# pragma: exclude file" anywhere
  '\A(?s:.*# pragma: exclude file.*)\Z',
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
